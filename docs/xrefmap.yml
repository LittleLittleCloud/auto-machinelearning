### YamlMime:XRefMap
sorted: true
references:
- uid: MLNet.AutoPipeline
  name: MLNet.AutoPipeline
  href: api/MLNet.AutoPipeline.html
  commentId: N:MLNet.AutoPipeline
  fullName: MLNet.AutoPipeline
  nameWithType: MLNet.AutoPipeline
- uid: MLNet.AutoPipeline.EstimatorNodeChain
  name: EstimatorNodeChain
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html
  commentId: T:MLNet.AutoPipeline.EstimatorNodeChain
  fullName: MLNet.AutoPipeline.EstimatorNodeChain
  nameWithType: EstimatorNodeChain
- uid: MLNet.AutoPipeline.EstimatorNodeChain.#ctor
  name: EstimatorNodeChain()
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain__ctor
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.#ctor
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.EstimatorNodeChain()
  nameWithType: EstimatorNodeChain.EstimatorNodeChain()
- uid: MLNet.AutoPipeline.EstimatorNodeChain.#ctor(Microsoft.ML.IEstimator{Microsoft.ML.ITransformer}[],Microsoft.ML.Data.TransformerScope[])
  name: EstimatorNodeChain(IEstimator<ITransformer>[], TransformerScope[])
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain__ctor_Microsoft_ML_IEstimator_Microsoft_ML_ITransformer____Microsoft_ML_Data_TransformerScope___
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.#ctor(Microsoft.ML.IEstimator{Microsoft.ML.ITransformer}[],Microsoft.ML.Data.TransformerScope[])
  name.vb: EstimatorNodeChain(IEstimator(Of ITransformer)(), TransformerScope())
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.EstimatorNodeChain(Microsoft.ML.IEstimator<Microsoft.ML.ITransformer>[], Microsoft.ML.Data.TransformerScope[])
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChain.EstimatorNodeChain(Microsoft.ML.IEstimator(Of Microsoft.ML.ITransformer)(), Microsoft.ML.Data.TransformerScope())
  nameWithType: EstimatorNodeChain.EstimatorNodeChain(IEstimator<ITransformer>[], TransformerScope[])
  nameWithType.vb: EstimatorNodeChain.EstimatorNodeChain(IEstimator(Of ITransformer)(), TransformerScope())
- uid: MLNet.AutoPipeline.EstimatorNodeChain.#ctor(System.Collections.Generic.IList{MLNet.AutoPipeline.IEstimatorNode})
  name: EstimatorNodeChain(IList<IEstimatorNode>)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain__ctor_System_Collections_Generic_IList_MLNet_AutoPipeline_IEstimatorNode__
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.#ctor(System.Collections.Generic.IList{MLNet.AutoPipeline.IEstimatorNode})
  name.vb: EstimatorNodeChain(IList(Of IEstimatorNode))
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.EstimatorNodeChain(System.Collections.Generic.IList<MLNet.AutoPipeline.IEstimatorNode>)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChain.EstimatorNodeChain(System.Collections.Generic.IList(Of MLNet.AutoPipeline.IEstimatorNode))
  nameWithType: EstimatorNodeChain.EstimatorNodeChain(IList<IEstimatorNode>)
  nameWithType.vb: EstimatorNodeChain.EstimatorNodeChain(IList(Of IEstimatorNode))
- uid: MLNet.AutoPipeline.EstimatorNodeChain.#ctor*
  name: EstimatorNodeChain
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain__ctor_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChain.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.EstimatorNodeChain
  nameWithType: EstimatorNodeChain.EstimatorNodeChain
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Append(MLNet.AutoPipeline.IEstimatorNode)
  name: Append(IEstimatorNode)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Append_MLNet_AutoPipeline_IEstimatorNode_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.Append(MLNet.AutoPipeline.IEstimatorNode)
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Append(MLNet.AutoPipeline.IEstimatorNode)
  nameWithType: EstimatorNodeChain.Append(IEstimatorNode)
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Append*
  name: Append
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Append_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChain.Append
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Append
  nameWithType: EstimatorNodeChain.Append
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name: Append<TNewTrans>(IEstimator<TNewTrans>, TransformerScope)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Append__1_Microsoft_ML_IEstimator___0__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TNewTrans)(IEstimator(Of TNewTrans), TransformerScope)
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Append<TNewTrans>(Microsoft.ML.IEstimator<TNewTrans>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChain.Append(Of TNewTrans)(Microsoft.ML.IEstimator(Of TNewTrans), Microsoft.ML.Data.TransformerScope)
  nameWithType: EstimatorNodeChain.Append<TNewTrans>(IEstimator<TNewTrans>, TransformerScope)
  nameWithType.vb: EstimatorNodeChain.Append(Of TNewTrans)(IEstimator(Of TNewTrans), TransformerScope)
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Append``1(MLNet.AutoPipeline.UnsweepableNode{``0})
  name: Append<TNewTrans>(UnsweepableNode<TNewTrans>)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Append__1_MLNet_AutoPipeline_UnsweepableNode___0__
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.Append``1(MLNet.AutoPipeline.UnsweepableNode{``0})
  name.vb: Append(Of TNewTrans)(UnsweepableNode(Of TNewTrans))
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Append<TNewTrans>(MLNet.AutoPipeline.UnsweepableNode<TNewTrans>)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChain.Append(Of TNewTrans)(MLNet.AutoPipeline.UnsweepableNode(Of TNewTrans))
  nameWithType: EstimatorNodeChain.Append<TNewTrans>(UnsweepableNode<TNewTrans>)
  nameWithType.vb: EstimatorNodeChain.Append(Of TNewTrans)(UnsweepableNode(Of TNewTrans))
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Append``2(MLNet.AutoPipeline.SweepableNode{``0,``1})
  name: Append<TNewTrans, TOption>(SweepableNode<TNewTrans, TOption>)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Append__2_MLNet_AutoPipeline_SweepableNode___0___1__
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.Append``2(MLNet.AutoPipeline.SweepableNode{``0,``1})
  name.vb: Append(Of TNewTrans, TOption)(SweepableNode(Of TNewTrans, TOption))
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Append<TNewTrans, TOption>(MLNet.AutoPipeline.SweepableNode<TNewTrans, TOption>)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChain.Append(Of TNewTrans, TOption)(MLNet.AutoPipeline.SweepableNode(Of TNewTrans, TOption))
  nameWithType: EstimatorNodeChain.Append<TNewTrans, TOption>(SweepableNode<TNewTrans, TOption>)
  nameWithType.vb: EstimatorNodeChain.Append(Of TNewTrans, TOption)(SweepableNode(Of TNewTrans, TOption))
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name: Append<TNewTrains, TOption>(Func<TOption, IEstimator<TNewTrains>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Append__2_System_Func___1_Microsoft_ML_IEstimator___0___MLNet_AutoPipeline_OptionBuilder___1__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TNewTrains, TOption)(Func(Of TOption, IEstimator(Of TNewTrains)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Append<TNewTrains, TOption>(System.Func<TOption, Microsoft.ML.IEstimator<TNewTrains>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChain.Append(Of TNewTrains, TOption)(System.Func(Of TOption, Microsoft.ML.IEstimator(Of TNewTrains)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: EstimatorNodeChain.Append<TNewTrains, TOption>(Func<TOption, IEstimator<TNewTrains>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: EstimatorNodeChain.Append(Of TNewTrains, TOption)(Func(Of TOption, IEstimator(Of TNewTrains)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.EstimatorNodeChain.BuildSweepablePipelines
  name: BuildSweepablePipelines()
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_BuildSweepablePipelines
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.BuildSweepablePipelines
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.BuildSweepablePipelines()
  nameWithType: EstimatorNodeChain.BuildSweepablePipelines()
- uid: MLNet.AutoPipeline.EstimatorNodeChain.BuildSweepablePipelines*
  name: BuildSweepablePipelines
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_BuildSweepablePipelines_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChain.BuildSweepablePipelines
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.BuildSweepablePipelines
  nameWithType: EstimatorNodeChain.BuildSweepablePipelines
- uid: MLNet.AutoPipeline.EstimatorNodeChain.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_NodeType
  commentId: P:MLNet.AutoPipeline.EstimatorNodeChain.NodeType
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.NodeType
  nameWithType: EstimatorNodeChain.NodeType
- uid: MLNet.AutoPipeline.EstimatorNodeChain.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_NodeType_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChain.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.NodeType
  nameWithType: EstimatorNodeChain.NodeType
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Summary
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.Summary
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Summary()
  nameWithType: EstimatorNodeChain.Summary()
- uid: MLNet.AutoPipeline.EstimatorNodeChain.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_Summary_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChain.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.Summary
  nameWithType: EstimatorNodeChain.Summary
- uid: MLNet.AutoPipeline.EstimatorNodeChain.UseSweeper(MLNet.Sweeper.ISweeper)
  name: UseSweeper(ISweeper)
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_UseSweeper_MLNet_Sweeper_ISweeper_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChain.UseSweeper(MLNet.Sweeper.ISweeper)
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.UseSweeper(MLNet.Sweeper.ISweeper)
  nameWithType: EstimatorNodeChain.UseSweeper(ISweeper)
- uid: MLNet.AutoPipeline.EstimatorNodeChain.UseSweeper*
  name: UseSweeper
  href: api/MLNet.AutoPipeline.EstimatorNodeChain.html#MLNet_AutoPipeline_EstimatorNodeChain_UseSweeper_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChain.UseSweeper
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChain.UseSweeper
  nameWithType: EstimatorNodeChain.UseSweeper
- uid: MLNet.AutoPipeline.EstimatorNodeChainExtension
  name: EstimatorNodeChainExtension
  href: api/MLNet.AutoPipeline.EstimatorNodeChainExtension.html
  commentId: T:MLNet.AutoPipeline.EstimatorNodeChainExtension
  fullName: MLNet.AutoPipeline.EstimatorNodeChainExtension
  nameWithType: EstimatorNodeChainExtension
- uid: MLNet.AutoPipeline.EstimatorNodeChainExtension.Append*
  name: Append
  href: api/MLNet.AutoPipeline.EstimatorNodeChainExtension.html#MLNet_AutoPipeline_EstimatorNodeChainExtension_Append_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeChainExtension.Append
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeChainExtension.Append
  nameWithType: EstimatorNodeChainExtension.Append
- uid: MLNet.AutoPipeline.EstimatorNodeChainExtension.Append``1(Microsoft.ML.Data.EstimatorChain{``0},MLNet.AutoPipeline.EstimatorNodeGroup)
  name: Append<TLastTrain>(EstimatorChain<TLastTrain>, EstimatorNodeGroup)
  href: api/MLNet.AutoPipeline.EstimatorNodeChainExtension.html#MLNet_AutoPipeline_EstimatorNodeChainExtension_Append__1_Microsoft_ML_Data_EstimatorChain___0__MLNet_AutoPipeline_EstimatorNodeGroup_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeChainExtension.Append``1(Microsoft.ML.Data.EstimatorChain{``0},MLNet.AutoPipeline.EstimatorNodeGroup)
  name.vb: Append(Of TLastTrain)(EstimatorChain(Of TLastTrain), EstimatorNodeGroup)
  fullName: MLNet.AutoPipeline.EstimatorNodeChainExtension.Append<TLastTrain>(Microsoft.ML.Data.EstimatorChain<TLastTrain>, MLNet.AutoPipeline.EstimatorNodeGroup)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeChainExtension.Append(Of TLastTrain)(Microsoft.ML.Data.EstimatorChain(Of TLastTrain), MLNet.AutoPipeline.EstimatorNodeGroup)
  nameWithType: EstimatorNodeChainExtension.Append<TLastTrain>(EstimatorChain<TLastTrain>, EstimatorNodeGroup)
  nameWithType.vb: EstimatorNodeChainExtension.Append(Of TLastTrain)(EstimatorChain(Of TLastTrain), EstimatorNodeGroup)
- uid: MLNet.AutoPipeline.EstimatorNodeGroup
  name: EstimatorNodeGroup
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html
  commentId: T:MLNet.AutoPipeline.EstimatorNodeGroup
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup
  nameWithType: EstimatorNodeGroup
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.#ctor
  name: EstimatorNodeGroup()
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup__ctor
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.#ctor
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.EstimatorNodeGroup()
  nameWithType: EstimatorNodeGroup.EstimatorNodeGroup()
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.#ctor(System.Collections.Generic.IEnumerable{MLNet.AutoPipeline.IEstimatorNode})
  name: EstimatorNodeGroup(IEnumerable<IEstimatorNode>)
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup__ctor_System_Collections_Generic_IEnumerable_MLNet_AutoPipeline_IEstimatorNode__
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.#ctor(System.Collections.Generic.IEnumerable{MLNet.AutoPipeline.IEstimatorNode})
  name.vb: EstimatorNodeGroup(IEnumerable(Of IEstimatorNode))
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.EstimatorNodeGroup(System.Collections.Generic.IEnumerable<MLNet.AutoPipeline.IEstimatorNode>)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeGroup.EstimatorNodeGroup(System.Collections.Generic.IEnumerable(Of MLNet.AutoPipeline.IEstimatorNode))
  nameWithType: EstimatorNodeGroup.EstimatorNodeGroup(IEnumerable<IEstimatorNode>)
  nameWithType.vb: EstimatorNodeGroup.EstimatorNodeGroup(IEnumerable(Of IEstimatorNode))
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.#ctor*
  name: EstimatorNodeGroup
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup__ctor_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeGroup.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.EstimatorNodeGroup
  nameWithType: EstimatorNodeGroup.EstimatorNodeGroup
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Append(MLNet.AutoPipeline.EstimatorNodeChain)
  name: Append(EstimatorNodeChain)
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Append_MLNet_AutoPipeline_EstimatorNodeChain_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.Append(MLNet.AutoPipeline.EstimatorNodeChain)
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Append(MLNet.AutoPipeline.EstimatorNodeChain)
  nameWithType: EstimatorNodeGroup.Append(EstimatorNodeChain)
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Append(MLNet.AutoPipeline.EstimatorSingleNode)
  name: Append(EstimatorSingleNode)
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Append_MLNet_AutoPipeline_EstimatorSingleNode_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.Append(MLNet.AutoPipeline.EstimatorSingleNode)
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Append(MLNet.AutoPipeline.EstimatorSingleNode)
  nameWithType: EstimatorNodeGroup.Append(EstimatorSingleNode)
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Append*
  name: Append
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Append_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeGroup.Append
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Append
  nameWithType: EstimatorNodeGroup.Append
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name: Append<TTrans>(IEstimator<TTrans>, TransformerScope)
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Append__1_Microsoft_ML_IEstimator___0__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TTrans)(IEstimator(Of TTrans), TransformerScope)
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Append<TTrans>(Microsoft.ML.IEstimator<TTrans>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeGroup.Append(Of TTrans)(Microsoft.ML.IEstimator(Of TTrans), Microsoft.ML.Data.TransformerScope)
  nameWithType: EstimatorNodeGroup.Append<TTrans>(IEstimator<TTrans>, TransformerScope)
  nameWithType.vb: EstimatorNodeGroup.Append(Of TTrans)(IEstimator(Of TTrans), TransformerScope)
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name: Append<TNewTran, TOption>(Func<TOption, IEstimator<TNewTran>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Append__2_System_Func___1_Microsoft_ML_IEstimator___0___MLNet_AutoPipeline_OptionBuilder___1__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TNewTran, TOption)(Func(Of TOption, IEstimator(Of TNewTran)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Append<TNewTran, TOption>(System.Func<TOption, Microsoft.ML.IEstimator<TNewTran>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.EstimatorNodeGroup.Append(Of TNewTran, TOption)(System.Func(Of TOption, Microsoft.ML.IEstimator(Of TNewTran)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: EstimatorNodeGroup.Append<TNewTran, TOption>(Func<TOption, IEstimator<TNewTran>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: EstimatorNodeGroup.Append(Of TNewTran, TOption)(Func(Of TOption, IEstimator(Of TNewTran)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.BuildSweepablePipelines
  name: BuildSweepablePipelines()
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_BuildSweepablePipelines
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.BuildSweepablePipelines
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.BuildSweepablePipelines()
  nameWithType: EstimatorNodeGroup.BuildSweepablePipelines()
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.BuildSweepablePipelines*
  name: BuildSweepablePipelines
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_BuildSweepablePipelines_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeGroup.BuildSweepablePipelines
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.BuildSweepablePipelines
  nameWithType: EstimatorNodeGroup.BuildSweepablePipelines
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_NodeType
  commentId: P:MLNet.AutoPipeline.EstimatorNodeGroup.NodeType
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.NodeType
  nameWithType: EstimatorNodeGroup.NodeType
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_NodeType_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeGroup.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.NodeType
  nameWithType: EstimatorNodeGroup.NodeType
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Summary
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.Summary
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Summary()
  nameWithType: EstimatorNodeGroup.Summary()
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_Summary_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeGroup.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.Summary
  nameWithType: EstimatorNodeGroup.Summary
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.ToString
  name: ToString()
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_ToString
  commentId: M:MLNet.AutoPipeline.EstimatorNodeGroup.ToString
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.ToString()
  nameWithType: EstimatorNodeGroup.ToString()
- uid: MLNet.AutoPipeline.EstimatorNodeGroup.ToString*
  name: ToString
  href: api/MLNet.AutoPipeline.EstimatorNodeGroup.html#MLNet_AutoPipeline_EstimatorNodeGroup_ToString_
  commentId: Overload:MLNet.AutoPipeline.EstimatorNodeGroup.ToString
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorNodeGroup.ToString
  nameWithType: EstimatorNodeGroup.ToString
- uid: MLNet.AutoPipeline.EstimatorNodeType
  name: EstimatorNodeType
  href: api/MLNet.AutoPipeline.EstimatorNodeType.html
  commentId: T:MLNet.AutoPipeline.EstimatorNodeType
  fullName: MLNet.AutoPipeline.EstimatorNodeType
  nameWithType: EstimatorNodeType
- uid: MLNet.AutoPipeline.EstimatorNodeType.Node
  name: Node
  href: api/MLNet.AutoPipeline.EstimatorNodeType.html#MLNet_AutoPipeline_EstimatorNodeType_Node
  commentId: F:MLNet.AutoPipeline.EstimatorNodeType.Node
  fullName: MLNet.AutoPipeline.EstimatorNodeType.Node
  nameWithType: EstimatorNodeType.Node
- uid: MLNet.AutoPipeline.EstimatorNodeType.NodeChain
  name: NodeChain
  href: api/MLNet.AutoPipeline.EstimatorNodeType.html#MLNet_AutoPipeline_EstimatorNodeType_NodeChain
  commentId: F:MLNet.AutoPipeline.EstimatorNodeType.NodeChain
  fullName: MLNet.AutoPipeline.EstimatorNodeType.NodeChain
  nameWithType: EstimatorNodeType.NodeChain
- uid: MLNet.AutoPipeline.EstimatorNodeType.NodeGroup
  name: NodeGroup
  href: api/MLNet.AutoPipeline.EstimatorNodeType.html#MLNet_AutoPipeline_EstimatorNodeType_NodeGroup
  commentId: F:MLNet.AutoPipeline.EstimatorNodeType.NodeGroup
  fullName: MLNet.AutoPipeline.EstimatorNodeType.NodeGroup
  nameWithType: EstimatorNodeType.NodeGroup
- uid: MLNet.AutoPipeline.EstimatorSingleNode
  name: EstimatorSingleNode
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html
  commentId: T:MLNet.AutoPipeline.EstimatorSingleNode
  fullName: MLNet.AutoPipeline.EstimatorSingleNode
  nameWithType: EstimatorSingleNode
- uid: MLNet.AutoPipeline.EstimatorSingleNode.#ctor(MLNet.AutoPipeline.ISweepablePipelineNode)
  name: EstimatorSingleNode(ISweepablePipelineNode)
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode__ctor_MLNet_AutoPipeline_ISweepablePipelineNode_
  commentId: M:MLNet.AutoPipeline.EstimatorSingleNode.#ctor(MLNet.AutoPipeline.ISweepablePipelineNode)
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.EstimatorSingleNode(MLNet.AutoPipeline.ISweepablePipelineNode)
  nameWithType: EstimatorSingleNode.EstimatorSingleNode(ISweepablePipelineNode)
- uid: MLNet.AutoPipeline.EstimatorSingleNode.#ctor*
  name: EstimatorSingleNode
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode__ctor_
  commentId: Overload:MLNet.AutoPipeline.EstimatorSingleNode.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.EstimatorSingleNode
  nameWithType: EstimatorSingleNode.EstimatorSingleNode
- uid: MLNet.AutoPipeline.EstimatorSingleNode.BuildSweepablePipelines
  name: BuildSweepablePipelines()
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_BuildSweepablePipelines
  commentId: M:MLNet.AutoPipeline.EstimatorSingleNode.BuildSweepablePipelines
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.BuildSweepablePipelines()
  nameWithType: EstimatorSingleNode.BuildSweepablePipelines()
- uid: MLNet.AutoPipeline.EstimatorSingleNode.BuildSweepablePipelines*
  name: BuildSweepablePipelines
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_BuildSweepablePipelines_
  commentId: Overload:MLNet.AutoPipeline.EstimatorSingleNode.BuildSweepablePipelines
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.BuildSweepablePipelines
  nameWithType: EstimatorSingleNode.BuildSweepablePipelines
- uid: MLNet.AutoPipeline.EstimatorSingleNode.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_NodeType
  commentId: P:MLNet.AutoPipeline.EstimatorSingleNode.NodeType
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.NodeType
  nameWithType: EstimatorSingleNode.NodeType
- uid: MLNet.AutoPipeline.EstimatorSingleNode.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_NodeType_
  commentId: Overload:MLNet.AutoPipeline.EstimatorSingleNode.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.NodeType
  nameWithType: EstimatorSingleNode.NodeType
- uid: MLNet.AutoPipeline.EstimatorSingleNode.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_Summary
  commentId: M:MLNet.AutoPipeline.EstimatorSingleNode.Summary
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.Summary()
  nameWithType: EstimatorSingleNode.Summary()
- uid: MLNet.AutoPipeline.EstimatorSingleNode.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_Summary_
  commentId: Overload:MLNet.AutoPipeline.EstimatorSingleNode.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.Summary
  nameWithType: EstimatorSingleNode.Summary
- uid: MLNet.AutoPipeline.EstimatorSingleNode.ToString
  name: ToString()
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_ToString
  commentId: M:MLNet.AutoPipeline.EstimatorSingleNode.ToString
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.ToString()
  nameWithType: EstimatorSingleNode.ToString()
- uid: MLNet.AutoPipeline.EstimatorSingleNode.ToString*
  name: ToString
  href: api/MLNet.AutoPipeline.EstimatorSingleNode.html#MLNet_AutoPipeline_EstimatorSingleNode_ToString_
  commentId: Overload:MLNet.AutoPipeline.EstimatorSingleNode.ToString
  isSpec: "True"
  fullName: MLNet.AutoPipeline.EstimatorSingleNode.ToString
  nameWithType: EstimatorSingleNode.ToString
- uid: MLNet.AutoPipeline.Extension
  name: MLNet.AutoPipeline.Extension
  href: api/MLNet.AutoPipeline.Extension.html
  commentId: N:MLNet.AutoPipeline.Extension
  fullName: MLNet.AutoPipeline.Extension
  nameWithType: MLNet.AutoPipeline.Extension
- uid: MLNet.AutoPipeline.Extension.SweepablePipelineExtension
  name: SweepablePipelineExtension
  href: api/MLNet.AutoPipeline.Extension.SweepablePipelineExtension.html
  commentId: T:MLNet.AutoPipeline.Extension.SweepablePipelineExtension
  fullName: MLNet.AutoPipeline.Extension.SweepablePipelineExtension
  nameWithType: SweepablePipelineExtension
- uid: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append*
  name: Append
  href: api/MLNet.AutoPipeline.Extension.SweepablePipelineExtension.html#MLNet_AutoPipeline_Extension_SweepablePipelineExtension_Append_
  commentId: Overload:MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append
  isSpec: "True"
  fullName: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append
  nameWithType: SweepablePipelineExtension.Append
- uid: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append``3(Microsoft.ML.Data.EstimatorChain{``0},System.Func{``2,Microsoft.ML.IEstimator{``1}},MLNet.AutoPipeline.OptionBuilder{``2},Microsoft.ML.Data.TransformerScope)
  name: Append<TLastTrain, TNewTrain, TOption>(EstimatorChain<TLastTrain>, Func<TOption, IEstimator<TNewTrain>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.Extension.SweepablePipelineExtension.html#MLNet_AutoPipeline_Extension_SweepablePipelineExtension_Append__3_Microsoft_ML_Data_EstimatorChain___0__System_Func___2_Microsoft_ML_IEstimator___1___MLNet_AutoPipeline_OptionBuilder___2__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append``3(Microsoft.ML.Data.EstimatorChain{``0},System.Func{``2,Microsoft.ML.IEstimator{``1}},MLNet.AutoPipeline.OptionBuilder{``2},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TLastTrain, TNewTrain, TOption)(EstimatorChain(Of TLastTrain), Func(Of TOption, IEstimator(Of TNewTrain)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append<TLastTrain, TNewTrain, TOption>(Microsoft.ML.Data.EstimatorChain<TLastTrain>, System.Func<TOption, Microsoft.ML.IEstimator<TNewTrain>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append(Of TLastTrain, TNewTrain, TOption)(Microsoft.ML.Data.EstimatorChain(Of TLastTrain), System.Func(Of TOption, Microsoft.ML.IEstimator(Of TNewTrain)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: SweepablePipelineExtension.Append<TLastTrain, TNewTrain, TOption>(EstimatorChain<TLastTrain>, Func<TOption, IEstimator<TNewTrain>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: SweepablePipelineExtension.Append(Of TLastTrain, TNewTrain, TOption)(EstimatorChain(Of TLastTrain), Func(Of TOption, IEstimator(Of TNewTrain)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append``3(Microsoft.ML.IEstimator{``0},System.Func{``2,Microsoft.ML.IEstimator{``1}},MLNet.AutoPipeline.OptionBuilder{``2},Microsoft.ML.Data.TransformerScope)
  name: Append<TLastTran, TNewTran, TOption>(IEstimator<TLastTran>, Func<TOption, IEstimator<TNewTran>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.Extension.SweepablePipelineExtension.html#MLNet_AutoPipeline_Extension_SweepablePipelineExtension_Append__3_Microsoft_ML_IEstimator___0__System_Func___2_Microsoft_ML_IEstimator___1___MLNet_AutoPipeline_OptionBuilder___2__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append``3(Microsoft.ML.IEstimator{``0},System.Func{``2,Microsoft.ML.IEstimator{``1}},MLNet.AutoPipeline.OptionBuilder{``2},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TLastTran, TNewTran, TOption)(IEstimator(Of TLastTran), Func(Of TOption, IEstimator(Of TNewTran)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append<TLastTran, TNewTran, TOption>(Microsoft.ML.IEstimator<TLastTran>, System.Func<TOption, Microsoft.ML.IEstimator<TNewTran>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.Extension.SweepablePipelineExtension.Append(Of TLastTran, TNewTran, TOption)(Microsoft.ML.IEstimator(Of TLastTran), System.Func(Of TOption, Microsoft.ML.IEstimator(Of TNewTran)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: SweepablePipelineExtension.Append<TLastTran, TNewTran, TOption>(IEstimator<TLastTran>, Func<TOption, IEstimator<TNewTran>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: SweepablePipelineExtension.Append(Of TLastTran, TNewTran, TOption)(IEstimator(Of TLastTran), Func(Of TOption, IEstimator(Of TNewTran)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.IEstimatorNode
  name: IEstimatorNode
  href: api/MLNet.AutoPipeline.IEstimatorNode.html
  commentId: T:MLNet.AutoPipeline.IEstimatorNode
  fullName: MLNet.AutoPipeline.IEstimatorNode
  nameWithType: IEstimatorNode
- uid: MLNet.AutoPipeline.IEstimatorNode.BuildSweepablePipelines
  name: BuildSweepablePipelines()
  href: api/MLNet.AutoPipeline.IEstimatorNode.html#MLNet_AutoPipeline_IEstimatorNode_BuildSweepablePipelines
  commentId: M:MLNet.AutoPipeline.IEstimatorNode.BuildSweepablePipelines
  fullName: MLNet.AutoPipeline.IEstimatorNode.BuildSweepablePipelines()
  nameWithType: IEstimatorNode.BuildSweepablePipelines()
- uid: MLNet.AutoPipeline.IEstimatorNode.BuildSweepablePipelines*
  name: BuildSweepablePipelines
  href: api/MLNet.AutoPipeline.IEstimatorNode.html#MLNet_AutoPipeline_IEstimatorNode_BuildSweepablePipelines_
  commentId: Overload:MLNet.AutoPipeline.IEstimatorNode.BuildSweepablePipelines
  isSpec: "True"
  fullName: MLNet.AutoPipeline.IEstimatorNode.BuildSweepablePipelines
  nameWithType: IEstimatorNode.BuildSweepablePipelines
- uid: MLNet.AutoPipeline.IEstimatorNode.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.IEstimatorNode.html#MLNet_AutoPipeline_IEstimatorNode_NodeType
  commentId: P:MLNet.AutoPipeline.IEstimatorNode.NodeType
  fullName: MLNet.AutoPipeline.IEstimatorNode.NodeType
  nameWithType: IEstimatorNode.NodeType
- uid: MLNet.AutoPipeline.IEstimatorNode.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.IEstimatorNode.html#MLNet_AutoPipeline_IEstimatorNode_NodeType_
  commentId: Overload:MLNet.AutoPipeline.IEstimatorNode.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.IEstimatorNode.NodeType
  nameWithType: IEstimatorNode.NodeType
- uid: MLNet.AutoPipeline.IEstimatorNode.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.IEstimatorNode.html#MLNet_AutoPipeline_IEstimatorNode_Summary
  commentId: M:MLNet.AutoPipeline.IEstimatorNode.Summary
  fullName: MLNet.AutoPipeline.IEstimatorNode.Summary()
  nameWithType: IEstimatorNode.Summary()
- uid: MLNet.AutoPipeline.IEstimatorNode.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.IEstimatorNode.html#MLNet_AutoPipeline_IEstimatorNode_Summary_
  commentId: Overload:MLNet.AutoPipeline.IEstimatorNode.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.IEstimatorNode.Summary
  nameWithType: IEstimatorNode.Summary
- uid: MLNet.AutoPipeline.ISweepablePipeline
  name: ISweepablePipeline
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html
  commentId: T:MLNet.AutoPipeline.ISweepablePipeline
  fullName: MLNet.AutoPipeline.ISweepablePipeline
  nameWithType: ISweepablePipeline
- uid: MLNet.AutoPipeline.ISweepablePipeline.Append(MLNet.AutoPipeline.ISweepablePipelineNode)
  name: Append(ISweepablePipelineNode)
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Append_MLNet_AutoPipeline_ISweepablePipelineNode_
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.Append(MLNet.AutoPipeline.ISweepablePipelineNode)
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Append(MLNet.AutoPipeline.ISweepablePipelineNode)
  nameWithType: ISweepablePipeline.Append(ISweepablePipelineNode)
- uid: MLNet.AutoPipeline.ISweepablePipeline.Append*
  name: Append
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Append_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.Append
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Append
  nameWithType: ISweepablePipeline.Append
- uid: MLNet.AutoPipeline.ISweepablePipeline.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name: Append<TTransformer>(IEstimator<TTransformer>, TransformerScope)
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Append__1_Microsoft_ML_IEstimator___0__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TTransformer)(IEstimator(Of TTransformer), TransformerScope)
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Append<TTransformer>(Microsoft.ML.IEstimator<TTransformer>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.ISweepablePipeline.Append(Of TTransformer)(Microsoft.ML.IEstimator(Of TTransformer), Microsoft.ML.Data.TransformerScope)
  nameWithType: ISweepablePipeline.Append<TTransformer>(IEstimator<TTransformer>, TransformerScope)
  nameWithType.vb: ISweepablePipeline.Append(Of TTransformer)(IEstimator(Of TTransformer), TransformerScope)
- uid: MLNet.AutoPipeline.ISweepablePipeline.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name: Append<TNewTran, TOption>(Func<TOption, IEstimator<TNewTran>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Append__2_System_Func___1_Microsoft_ML_IEstimator___0___MLNet_AutoPipeline_OptionBuilder___1__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TNewTran, TOption)(Func(Of TOption, IEstimator(Of TNewTran)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Append<TNewTran, TOption>(System.Func<TOption, Microsoft.ML.IEstimator<TNewTran>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.ISweepablePipeline.Append(Of TNewTran, TOption)(System.Func(Of TOption, Microsoft.ML.IEstimator(Of TNewTran)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: ISweepablePipeline.Append<TNewTran, TOption>(Func<TOption, IEstimator<TNewTran>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: ISweepablePipeline.Append(Of TNewTran, TOption)(Func(Of TOption, IEstimator(Of TNewTran)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.ISweepablePipeline.Concat(MLNet.AutoPipeline.ISweepablePipeline)
  name: Concat(ISweepablePipeline)
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Concat_MLNet_AutoPipeline_ISweepablePipeline_
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.Concat(MLNet.AutoPipeline.ISweepablePipeline)
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Concat(MLNet.AutoPipeline.ISweepablePipeline)
  nameWithType: ISweepablePipeline.Concat(ISweepablePipeline)
- uid: MLNet.AutoPipeline.ISweepablePipeline.Concat*
  name: Concat
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Concat_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.Concat
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Concat
  nameWithType: ISweepablePipeline.Concat
- uid: MLNet.AutoPipeline.ISweepablePipeline.SingleNodeBuilders
  name: SingleNodeBuilders
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_SingleNodeBuilders
  commentId: P:MLNet.AutoPipeline.ISweepablePipeline.SingleNodeBuilders
  fullName: MLNet.AutoPipeline.ISweepablePipeline.SingleNodeBuilders
  nameWithType: ISweepablePipeline.SingleNodeBuilders
- uid: MLNet.AutoPipeline.ISweepablePipeline.SingleNodeBuilders*
  name: SingleNodeBuilders
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_SingleNodeBuilders_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.SingleNodeBuilders
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.SingleNodeBuilders
  nameWithType: ISweepablePipeline.SingleNodeBuilders
- uid: MLNet.AutoPipeline.ISweepablePipeline.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Summary
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.Summary
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Summary()
  nameWithType: ISweepablePipeline.Summary()
- uid: MLNet.AutoPipeline.ISweepablePipeline.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Summary_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Summary
  nameWithType: ISweepablePipeline.Summary
- uid: MLNet.AutoPipeline.ISweepablePipeline.Sweeper
  name: Sweeper
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Sweeper
  commentId: P:MLNet.AutoPipeline.ISweepablePipeline.Sweeper
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Sweeper
  nameWithType: ISweepablePipeline.Sweeper
- uid: MLNet.AutoPipeline.ISweepablePipeline.Sweeper*
  name: Sweeper
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Sweeper_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.Sweeper
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Sweeper
  nameWithType: ISweepablePipeline.Sweeper
- uid: MLNet.AutoPipeline.ISweepablePipeline.Sweeping(System.Int32)
  name: Sweeping(Int32)
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Sweeping_System_Int32_
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.Sweeping(System.Int32)
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Sweeping(System.Int32)
  nameWithType: ISweepablePipeline.Sweeping(Int32)
- uid: MLNet.AutoPipeline.ISweepablePipeline.Sweeping*
  name: Sweeping
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_Sweeping_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.Sweeping
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.Sweeping
  nameWithType: ISweepablePipeline.Sweeping
- uid: MLNet.AutoPipeline.ISweepablePipeline.UseSweeper(MLNet.Sweeper.ISweeper)
  name: UseSweeper(ISweeper)
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_UseSweeper_MLNet_Sweeper_ISweeper_
  commentId: M:MLNet.AutoPipeline.ISweepablePipeline.UseSweeper(MLNet.Sweeper.ISweeper)
  fullName: MLNet.AutoPipeline.ISweepablePipeline.UseSweeper(MLNet.Sweeper.ISweeper)
  nameWithType: ISweepablePipeline.UseSweeper(ISweeper)
- uid: MLNet.AutoPipeline.ISweepablePipeline.UseSweeper*
  name: UseSweeper
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_UseSweeper_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.UseSweeper
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.UseSweeper
  nameWithType: ISweepablePipeline.UseSweeper
- uid: MLNet.AutoPipeline.ISweepablePipeline.ValueGenerators
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_ValueGenerators
  commentId: P:MLNet.AutoPipeline.ISweepablePipeline.ValueGenerators
  fullName: MLNet.AutoPipeline.ISweepablePipeline.ValueGenerators
  nameWithType: ISweepablePipeline.ValueGenerators
- uid: MLNet.AutoPipeline.ISweepablePipeline.ValueGenerators*
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.ISweepablePipeline.html#MLNet_AutoPipeline_ISweepablePipeline_ValueGenerators_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipeline.ValueGenerators
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipeline.ValueGenerators
  nameWithType: ISweepablePipeline.ValueGenerators
- uid: MLNet.AutoPipeline.ISweepablePipelineNode
  name: ISweepablePipelineNode
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html
  commentId: T:MLNet.AutoPipeline.ISweepablePipelineNode
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode
  nameWithType: ISweepablePipelineNode
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.BuildEstimator(MLNet.Sweeper.ParameterSet)
  name: BuildEstimator(ParameterSet)
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_BuildEstimator_MLNet_Sweeper_ParameterSet_
  commentId: M:MLNet.AutoPipeline.ISweepablePipelineNode.BuildEstimator(MLNet.Sweeper.ParameterSet)
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.BuildEstimator(MLNet.Sweeper.ParameterSet)
  nameWithType: ISweepablePipelineNode.BuildEstimator(ParameterSet)
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.BuildEstimator*
  name: BuildEstimator
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_BuildEstimator_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipelineNode.BuildEstimator
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.BuildEstimator
  nameWithType: ISweepablePipelineNode.BuildEstimator
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.EstimatorName
  name: EstimatorName
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_EstimatorName
  commentId: P:MLNet.AutoPipeline.ISweepablePipelineNode.EstimatorName
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.EstimatorName
  nameWithType: ISweepablePipelineNode.EstimatorName
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.EstimatorName*
  name: EstimatorName
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_EstimatorName_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipelineNode.EstimatorName
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.EstimatorName
  nameWithType: ISweepablePipelineNode.EstimatorName
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_NodeType
  commentId: P:MLNet.AutoPipeline.ISweepablePipelineNode.NodeType
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.NodeType
  nameWithType: ISweepablePipelineNode.NodeType
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_NodeType_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipelineNode.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.NodeType
  nameWithType: ISweepablePipelineNode.NodeType
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.Scope
  name: Scope
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_Scope
  commentId: P:MLNet.AutoPipeline.ISweepablePipelineNode.Scope
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.Scope
  nameWithType: ISweepablePipelineNode.Scope
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.Scope*
  name: Scope
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_Scope_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipelineNode.Scope
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.Scope
  nameWithType: ISweepablePipelineNode.Scope
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_Summary
  commentId: M:MLNet.AutoPipeline.ISweepablePipelineNode.Summary
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.Summary()
  nameWithType: ISweepablePipelineNode.Summary()
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_Summary_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipelineNode.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.Summary
  nameWithType: ISweepablePipelineNode.Summary
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.ValueGenerators
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_ValueGenerators
  commentId: P:MLNet.AutoPipeline.ISweepablePipelineNode.ValueGenerators
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.ValueGenerators
  nameWithType: ISweepablePipelineNode.ValueGenerators
- uid: MLNet.AutoPipeline.ISweepablePipelineNode.ValueGenerators*
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.ISweepablePipelineNode.html#MLNet_AutoPipeline_ISweepablePipelineNode_ValueGenerators_
  commentId: Overload:MLNet.AutoPipeline.ISweepablePipelineNode.ValueGenerators
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ISweepablePipelineNode.ValueGenerators
  nameWithType: ISweepablePipelineNode.ValueGenerators
- uid: MLNet.AutoPipeline.OptionBuilder`1
  name: OptionBuilder<TOption>
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html
  commentId: T:MLNet.AutoPipeline.OptionBuilder`1
  name.vb: OptionBuilder(Of TOption)
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption)
  nameWithType: OptionBuilder<TOption>
  nameWithType.vb: OptionBuilder(Of TOption)
- uid: MLNet.AutoPipeline.OptionBuilder`1.BuildOption(MLNet.Sweeper.ParameterSet)
  name: BuildOption(ParameterSet)
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html#MLNet_AutoPipeline_OptionBuilder_1_BuildOption_MLNet_Sweeper_ParameterSet_
  commentId: M:MLNet.AutoPipeline.OptionBuilder`1.BuildOption(MLNet.Sweeper.ParameterSet)
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>.BuildOption(MLNet.Sweeper.ParameterSet)
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption).BuildOption(MLNet.Sweeper.ParameterSet)
  nameWithType: OptionBuilder<TOption>.BuildOption(ParameterSet)
  nameWithType.vb: OptionBuilder(Of TOption).BuildOption(ParameterSet)
- uid: MLNet.AutoPipeline.OptionBuilder`1.BuildOption*
  name: BuildOption
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html#MLNet_AutoPipeline_OptionBuilder_1_BuildOption_
  commentId: Overload:MLNet.AutoPipeline.OptionBuilder`1.BuildOption
  isSpec: "True"
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>.BuildOption
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption).BuildOption
  nameWithType: OptionBuilder<TOption>.BuildOption
  nameWithType.vb: OptionBuilder(Of TOption).BuildOption
- uid: MLNet.AutoPipeline.OptionBuilder`1.CreateDefaultOption
  name: CreateDefaultOption()
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html#MLNet_AutoPipeline_OptionBuilder_1_CreateDefaultOption
  commentId: M:MLNet.AutoPipeline.OptionBuilder`1.CreateDefaultOption
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>.CreateDefaultOption()
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption).CreateDefaultOption()
  nameWithType: OptionBuilder<TOption>.CreateDefaultOption()
  nameWithType.vb: OptionBuilder(Of TOption).CreateDefaultOption()
- uid: MLNet.AutoPipeline.OptionBuilder`1.CreateDefaultOption*
  name: CreateDefaultOption
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html#MLNet_AutoPipeline_OptionBuilder_1_CreateDefaultOption_
  commentId: Overload:MLNet.AutoPipeline.OptionBuilder`1.CreateDefaultOption
  isSpec: "True"
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>.CreateDefaultOption
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption).CreateDefaultOption
  nameWithType: OptionBuilder<TOption>.CreateDefaultOption
  nameWithType.vb: OptionBuilder(Of TOption).CreateDefaultOption
- uid: MLNet.AutoPipeline.OptionBuilder`1.ValueGenerators
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html#MLNet_AutoPipeline_OptionBuilder_1_ValueGenerators
  commentId: P:MLNet.AutoPipeline.OptionBuilder`1.ValueGenerators
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>.ValueGenerators
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption).ValueGenerators
  nameWithType: OptionBuilder<TOption>.ValueGenerators
  nameWithType.vb: OptionBuilder(Of TOption).ValueGenerators
- uid: MLNet.AutoPipeline.OptionBuilder`1.ValueGenerators*
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.OptionBuilder-1.html#MLNet_AutoPipeline_OptionBuilder_1_ValueGenerators_
  commentId: Overload:MLNet.AutoPipeline.OptionBuilder`1.ValueGenerators
  isSpec: "True"
  fullName: MLNet.AutoPipeline.OptionBuilder<TOption>.ValueGenerators
  fullName.vb: MLNet.AutoPipeline.OptionBuilder(Of TOption).ValueGenerators
  nameWithType: OptionBuilder<TOption>.ValueGenerators
  nameWithType.vb: OptionBuilder(Of TOption).ValueGenerators
- uid: MLNet.AutoPipeline.ParameterAttribute
  name: ParameterAttribute
  href: api/MLNet.AutoPipeline.ParameterAttribute.html
  commentId: T:MLNet.AutoPipeline.ParameterAttribute
  fullName: MLNet.AutoPipeline.ParameterAttribute
  nameWithType: ParameterAttribute
- uid: MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  name: ParameterAttribute(Int32, Int32, Boolean, Int32)
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute__ctor_System_Int32_System_Int32_System_Boolean_System_Int32_
  commentId: M:MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  fullName: MLNet.AutoPipeline.ParameterAttribute.ParameterAttribute(System.Int32, System.Int32, System.Boolean, System.Int32)
  nameWithType: ParameterAttribute.ParameterAttribute(Int32, Int32, Boolean, Int32)
- uid: MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Int64,System.Int64,System.Boolean,System.Int32)
  name: ParameterAttribute(Int64, Int64, Boolean, Int32)
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute__ctor_System_Int64_System_Int64_System_Boolean_System_Int32_
  commentId: M:MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Int64,System.Int64,System.Boolean,System.Int32)
  fullName: MLNet.AutoPipeline.ParameterAttribute.ParameterAttribute(System.Int64, System.Int64, System.Boolean, System.Int32)
  nameWithType: ParameterAttribute.ParameterAttribute(Int64, Int64, Boolean, Int32)
- uid: MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Object[])
  name: ParameterAttribute(Object[])
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute__ctor_System_Object___
  commentId: M:MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Object[])
  name.vb: ParameterAttribute(Object())
  fullName: MLNet.AutoPipeline.ParameterAttribute.ParameterAttribute(System.Object[])
  fullName.vb: MLNet.AutoPipeline.ParameterAttribute.ParameterAttribute(System.Object())
  nameWithType: ParameterAttribute.ParameterAttribute(Object[])
  nameWithType.vb: ParameterAttribute.ParameterAttribute(Object())
- uid: MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Single,System.Single,System.Boolean,System.Int32)
  name: ParameterAttribute(Single, Single, Boolean, Int32)
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute__ctor_System_Single_System_Single_System_Boolean_System_Int32_
  commentId: M:MLNet.AutoPipeline.ParameterAttribute.#ctor(System.Single,System.Single,System.Boolean,System.Int32)
  fullName: MLNet.AutoPipeline.ParameterAttribute.ParameterAttribute(System.Single, System.Single, System.Boolean, System.Int32)
  nameWithType: ParameterAttribute.ParameterAttribute(Single, Single, Boolean, Int32)
- uid: MLNet.AutoPipeline.ParameterAttribute.#ctor*
  name: ParameterAttribute
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute__ctor_
  commentId: Overload:MLNet.AutoPipeline.ParameterAttribute.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ParameterAttribute.ParameterAttribute
  nameWithType: ParameterAttribute.ParameterAttribute
- uid: MLNet.AutoPipeline.ParameterAttribute.ValueGenerator
  name: ValueGenerator
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute_ValueGenerator
  commentId: P:MLNet.AutoPipeline.ParameterAttribute.ValueGenerator
  fullName: MLNet.AutoPipeline.ParameterAttribute.ValueGenerator
  nameWithType: ParameterAttribute.ValueGenerator
- uid: MLNet.AutoPipeline.ParameterAttribute.ValueGenerator*
  name: ValueGenerator
  href: api/MLNet.AutoPipeline.ParameterAttribute.html#MLNet_AutoPipeline_ParameterAttribute_ValueGenerator_
  commentId: Overload:MLNet.AutoPipeline.ParameterAttribute.ValueGenerator
  isSpec: "True"
  fullName: MLNet.AutoPipeline.ParameterAttribute.ValueGenerator
  nameWithType: ParameterAttribute.ValueGenerator
- uid: MLNet.AutoPipeline.SweepableNode`2
  name: SweepableNode<TTransformer, TOption>
  href: api/MLNet.AutoPipeline.SweepableNode-2.html
  commentId: T:MLNet.AutoPipeline.SweepableNode`2
  name.vb: SweepableNode(Of TTransformer, TOption)
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption)
  nameWithType: SweepableNode<TTransformer, TOption>
  nameWithType.vb: SweepableNode(Of TTransformer, TOption)
- uid: MLNet.AutoPipeline.SweepableNode`2.#ctor(System.Func{`1,Microsoft.ML.IEstimator{`0}},MLNet.AutoPipeline.OptionBuilder{`1},Microsoft.ML.Data.TransformerScope)
  name: SweepableNode(Func<TOption, IEstimator<TTransformer>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2__ctor_System_Func__1_Microsoft_ML_IEstimator__0___MLNet_AutoPipeline_OptionBuilder__1__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.SweepableNode`2.#ctor(System.Func{`1,Microsoft.ML.IEstimator{`0}},MLNet.AutoPipeline.OptionBuilder{`1},Microsoft.ML.Data.TransformerScope)
  name.vb: SweepableNode(Func(Of TOption, IEstimator(Of TTransformer)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.SweepableNode(System.Func<TOption, Microsoft.ML.IEstimator<TTransformer>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).SweepableNode(System.Func(Of TOption, Microsoft.ML.IEstimator(Of TTransformer)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: SweepableNode<TTransformer, TOption>.SweepableNode(Func<TOption, IEstimator<TTransformer>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).SweepableNode(Func(Of TOption, IEstimator(Of TTransformer)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.SweepableNode`2.#ctor*
  name: SweepableNode
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2__ctor_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.SweepableNode
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).SweepableNode
  nameWithType: SweepableNode<TTransformer, TOption>.SweepableNode
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).SweepableNode
- uid: MLNet.AutoPipeline.SweepableNode`2.BuildEstimator(MLNet.Sweeper.ParameterSet)
  name: BuildEstimator(ParameterSet)
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_BuildEstimator_MLNet_Sweeper_ParameterSet_
  commentId: M:MLNet.AutoPipeline.SweepableNode`2.BuildEstimator(MLNet.Sweeper.ParameterSet)
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.BuildEstimator(MLNet.Sweeper.ParameterSet)
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).BuildEstimator(MLNet.Sweeper.ParameterSet)
  nameWithType: SweepableNode<TTransformer, TOption>.BuildEstimator(ParameterSet)
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).BuildEstimator(ParameterSet)
- uid: MLNet.AutoPipeline.SweepableNode`2.BuildEstimator*
  name: BuildEstimator
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_BuildEstimator_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.BuildEstimator
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.BuildEstimator
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).BuildEstimator
  nameWithType: SweepableNode<TTransformer, TOption>.BuildEstimator
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).BuildEstimator
- uid: MLNet.AutoPipeline.SweepableNode`2.EstimatorName
  name: EstimatorName
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_EstimatorName
  commentId: P:MLNet.AutoPipeline.SweepableNode`2.EstimatorName
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.EstimatorName
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).EstimatorName
  nameWithType: SweepableNode<TTransformer, TOption>.EstimatorName
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).EstimatorName
- uid: MLNet.AutoPipeline.SweepableNode`2.EstimatorName*
  name: EstimatorName
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_EstimatorName_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.EstimatorName
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.EstimatorName
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).EstimatorName
  nameWithType: SweepableNode<TTransformer, TOption>.EstimatorName
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).EstimatorName
- uid: MLNet.AutoPipeline.SweepableNode`2.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_NodeType
  commentId: P:MLNet.AutoPipeline.SweepableNode`2.NodeType
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.NodeType
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).NodeType
  nameWithType: SweepableNode<TTransformer, TOption>.NodeType
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).NodeType
- uid: MLNet.AutoPipeline.SweepableNode`2.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_NodeType_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.NodeType
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).NodeType
  nameWithType: SweepableNode<TTransformer, TOption>.NodeType
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).NodeType
- uid: MLNet.AutoPipeline.SweepableNode`2.Scope
  name: Scope
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_Scope
  commentId: P:MLNet.AutoPipeline.SweepableNode`2.Scope
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.Scope
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).Scope
  nameWithType: SweepableNode<TTransformer, TOption>.Scope
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).Scope
- uid: MLNet.AutoPipeline.SweepableNode`2.Scope*
  name: Scope
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_Scope_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.Scope
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.Scope
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).Scope
  nameWithType: SweepableNode<TTransformer, TOption>.Scope
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).Scope
- uid: MLNet.AutoPipeline.SweepableNode`2.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_Summary
  commentId: M:MLNet.AutoPipeline.SweepableNode`2.Summary
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.Summary()
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).Summary()
  nameWithType: SweepableNode<TTransformer, TOption>.Summary()
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).Summary()
- uid: MLNet.AutoPipeline.SweepableNode`2.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_Summary_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.Summary
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).Summary
  nameWithType: SweepableNode<TTransformer, TOption>.Summary
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).Summary
- uid: MLNet.AutoPipeline.SweepableNode`2.ToString
  name: ToString()
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_ToString
  commentId: M:MLNet.AutoPipeline.SweepableNode`2.ToString
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.ToString()
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).ToString()
  nameWithType: SweepableNode<TTransformer, TOption>.ToString()
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).ToString()
- uid: MLNet.AutoPipeline.SweepableNode`2.ToString*
  name: ToString
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_ToString_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.ToString
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.ToString
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).ToString
  nameWithType: SweepableNode<TTransformer, TOption>.ToString
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).ToString
- uid: MLNet.AutoPipeline.SweepableNode`2.ValueGenerators
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_ValueGenerators
  commentId: P:MLNet.AutoPipeline.SweepableNode`2.ValueGenerators
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.ValueGenerators
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).ValueGenerators
  nameWithType: SweepableNode<TTransformer, TOption>.ValueGenerators
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).ValueGenerators
- uid: MLNet.AutoPipeline.SweepableNode`2.ValueGenerators*
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.SweepableNode-2.html#MLNet_AutoPipeline_SweepableNode_2_ValueGenerators_
  commentId: Overload:MLNet.AutoPipeline.SweepableNode`2.ValueGenerators
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepableNode<TTransformer, TOption>.ValueGenerators
  fullName.vb: MLNet.AutoPipeline.SweepableNode(Of TTransformer, TOption).ValueGenerators
  nameWithType: SweepableNode<TTransformer, TOption>.ValueGenerators
  nameWithType.vb: SweepableNode(Of TTransformer, TOption).ValueGenerators
- uid: MLNet.AutoPipeline.SweepablePipeline
  name: SweepablePipeline
  href: api/MLNet.AutoPipeline.SweepablePipeline.html
  commentId: T:MLNet.AutoPipeline.SweepablePipeline
  fullName: MLNet.AutoPipeline.SweepablePipeline
  nameWithType: SweepablePipeline
- uid: MLNet.AutoPipeline.SweepablePipeline.#ctor
  name: SweepablePipeline()
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline__ctor
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.#ctor
  fullName: MLNet.AutoPipeline.SweepablePipeline.SweepablePipeline()
  nameWithType: SweepablePipeline.SweepablePipeline()
- uid: MLNet.AutoPipeline.SweepablePipeline.#ctor*
  name: SweepablePipeline
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline__ctor_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.SweepablePipeline
  nameWithType: SweepablePipeline.SweepablePipeline
- uid: MLNet.AutoPipeline.SweepablePipeline.Append(MLNet.AutoPipeline.ISweepablePipelineNode)
  name: Append(ISweepablePipelineNode)
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Append_MLNet_AutoPipeline_ISweepablePipelineNode_
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.Append(MLNet.AutoPipeline.ISweepablePipelineNode)
  fullName: MLNet.AutoPipeline.SweepablePipeline.Append(MLNet.AutoPipeline.ISweepablePipelineNode)
  nameWithType: SweepablePipeline.Append(ISweepablePipelineNode)
- uid: MLNet.AutoPipeline.SweepablePipeline.Append*
  name: Append
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Append_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.Append
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.Append
  nameWithType: SweepablePipeline.Append
- uid: MLNet.AutoPipeline.SweepablePipeline.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name: Append<TNewTrans>(IEstimator<TNewTrans>, TransformerScope)
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Append__1_Microsoft_ML_IEstimator___0__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.Append``1(Microsoft.ML.IEstimator{``0},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TNewTrans)(IEstimator(Of TNewTrans), TransformerScope)
  fullName: MLNet.AutoPipeline.SweepablePipeline.Append<TNewTrans>(Microsoft.ML.IEstimator<TNewTrans>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.SweepablePipeline.Append(Of TNewTrans)(Microsoft.ML.IEstimator(Of TNewTrans), Microsoft.ML.Data.TransformerScope)
  nameWithType: SweepablePipeline.Append<TNewTrans>(IEstimator<TNewTrans>, TransformerScope)
  nameWithType.vb: SweepablePipeline.Append(Of TNewTrans)(IEstimator(Of TNewTrans), TransformerScope)
- uid: MLNet.AutoPipeline.SweepablePipeline.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name: Append<TNewTrains, TOption>(Func<TOption, IEstimator<TNewTrains>>, OptionBuilder<TOption>, TransformerScope)
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Append__2_System_Func___1_Microsoft_ML_IEstimator___0___MLNet_AutoPipeline_OptionBuilder___1__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.Append``2(System.Func{``1,Microsoft.ML.IEstimator{``0}},MLNet.AutoPipeline.OptionBuilder{``1},Microsoft.ML.Data.TransformerScope)
  name.vb: Append(Of TNewTrains, TOption)(Func(Of TOption, IEstimator(Of TNewTrains)), OptionBuilder(Of TOption), TransformerScope)
  fullName: MLNet.AutoPipeline.SweepablePipeline.Append<TNewTrains, TOption>(System.Func<TOption, Microsoft.ML.IEstimator<TNewTrains>>, MLNet.AutoPipeline.OptionBuilder<TOption>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.SweepablePipeline.Append(Of TNewTrains, TOption)(System.Func(Of TOption, Microsoft.ML.IEstimator(Of TNewTrains)), MLNet.AutoPipeline.OptionBuilder(Of TOption), Microsoft.ML.Data.TransformerScope)
  nameWithType: SweepablePipeline.Append<TNewTrains, TOption>(Func<TOption, IEstimator<TNewTrains>>, OptionBuilder<TOption>, TransformerScope)
  nameWithType.vb: SweepablePipeline.Append(Of TNewTrains, TOption)(Func(Of TOption, IEstimator(Of TNewTrains)), OptionBuilder(Of TOption), TransformerScope)
- uid: MLNet.AutoPipeline.SweepablePipeline.Concat(MLNet.AutoPipeline.ISweepablePipeline)
  name: Concat(ISweepablePipeline)
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Concat_MLNet_AutoPipeline_ISweepablePipeline_
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.Concat(MLNet.AutoPipeline.ISweepablePipeline)
  fullName: MLNet.AutoPipeline.SweepablePipeline.Concat(MLNet.AutoPipeline.ISweepablePipeline)
  nameWithType: SweepablePipeline.Concat(ISweepablePipeline)
- uid: MLNet.AutoPipeline.SweepablePipeline.Concat*
  name: Concat
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Concat_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.Concat
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.Concat
  nameWithType: SweepablePipeline.Concat
- uid: MLNet.AutoPipeline.SweepablePipeline.SingleNodeBuilders
  name: SingleNodeBuilders
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_SingleNodeBuilders
  commentId: P:MLNet.AutoPipeline.SweepablePipeline.SingleNodeBuilders
  fullName: MLNet.AutoPipeline.SweepablePipeline.SingleNodeBuilders
  nameWithType: SweepablePipeline.SingleNodeBuilders
- uid: MLNet.AutoPipeline.SweepablePipeline.SingleNodeBuilders*
  name: SingleNodeBuilders
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_SingleNodeBuilders_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.SingleNodeBuilders
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.SingleNodeBuilders
  nameWithType: SweepablePipeline.SingleNodeBuilders
- uid: MLNet.AutoPipeline.SweepablePipeline.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Summary
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.Summary
  fullName: MLNet.AutoPipeline.SweepablePipeline.Summary()
  nameWithType: SweepablePipeline.Summary()
- uid: MLNet.AutoPipeline.SweepablePipeline.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Summary_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.Summary
  nameWithType: SweepablePipeline.Summary
- uid: MLNet.AutoPipeline.SweepablePipeline.Sweeper
  name: Sweeper
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Sweeper
  commentId: P:MLNet.AutoPipeline.SweepablePipeline.Sweeper
  fullName: MLNet.AutoPipeline.SweepablePipeline.Sweeper
  nameWithType: SweepablePipeline.Sweeper
- uid: MLNet.AutoPipeline.SweepablePipeline.Sweeper*
  name: Sweeper
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Sweeper_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.Sweeper
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.Sweeper
  nameWithType: SweepablePipeline.Sweeper
- uid: MLNet.AutoPipeline.SweepablePipeline.Sweeping(System.Int32)
  name: Sweeping(Int32)
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Sweeping_System_Int32_
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.Sweeping(System.Int32)
  fullName: MLNet.AutoPipeline.SweepablePipeline.Sweeping(System.Int32)
  nameWithType: SweepablePipeline.Sweeping(Int32)
- uid: MLNet.AutoPipeline.SweepablePipeline.Sweeping*
  name: Sweeping
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_Sweeping_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.Sweeping
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.Sweeping
  nameWithType: SweepablePipeline.Sweeping
- uid: MLNet.AutoPipeline.SweepablePipeline.ToString
  name: ToString()
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_ToString
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.ToString
  fullName: MLNet.AutoPipeline.SweepablePipeline.ToString()
  nameWithType: SweepablePipeline.ToString()
- uid: MLNet.AutoPipeline.SweepablePipeline.ToString*
  name: ToString
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_ToString_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.ToString
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.ToString
  nameWithType: SweepablePipeline.ToString
- uid: MLNet.AutoPipeline.SweepablePipeline.UseSweeper(MLNet.Sweeper.ISweeper)
  name: UseSweeper(ISweeper)
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_UseSweeper_MLNet_Sweeper_ISweeper_
  commentId: M:MLNet.AutoPipeline.SweepablePipeline.UseSweeper(MLNet.Sweeper.ISweeper)
  fullName: MLNet.AutoPipeline.SweepablePipeline.UseSweeper(MLNet.Sweeper.ISweeper)
  nameWithType: SweepablePipeline.UseSweeper(ISweeper)
- uid: MLNet.AutoPipeline.SweepablePipeline.UseSweeper*
  name: UseSweeper
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_UseSweeper_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.UseSweeper
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.UseSweeper
  nameWithType: SweepablePipeline.UseSweeper
- uid: MLNet.AutoPipeline.SweepablePipeline.ValueGenerators
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_ValueGenerators
  commentId: P:MLNet.AutoPipeline.SweepablePipeline.ValueGenerators
  fullName: MLNet.AutoPipeline.SweepablePipeline.ValueGenerators
  nameWithType: SweepablePipeline.ValueGenerators
- uid: MLNet.AutoPipeline.SweepablePipeline.ValueGenerators*
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.SweepablePipeline.html#MLNet_AutoPipeline_SweepablePipeline_ValueGenerators_
  commentId: Overload:MLNet.AutoPipeline.SweepablePipeline.ValueGenerators
  isSpec: "True"
  fullName: MLNet.AutoPipeline.SweepablePipeline.ValueGenerators
  nameWithType: SweepablePipeline.ValueGenerators
- uid: MLNet.AutoPipeline.SweepablePipelineNodeType
  name: SweepablePipelineNodeType
  href: api/MLNet.AutoPipeline.SweepablePipelineNodeType.html
  commentId: T:MLNet.AutoPipeline.SweepablePipelineNodeType
  fullName: MLNet.AutoPipeline.SweepablePipelineNodeType
  nameWithType: SweepablePipelineNodeType
- uid: MLNet.AutoPipeline.SweepablePipelineNodeType.Sweepable
  name: Sweepable
  href: api/MLNet.AutoPipeline.SweepablePipelineNodeType.html#MLNet_AutoPipeline_SweepablePipelineNodeType_Sweepable
  commentId: F:MLNet.AutoPipeline.SweepablePipelineNodeType.Sweepable
  fullName: MLNet.AutoPipeline.SweepablePipelineNodeType.Sweepable
  nameWithType: SweepablePipelineNodeType.Sweepable
- uid: MLNet.AutoPipeline.SweepablePipelineNodeType.Unsweeapble
  name: Unsweeapble
  href: api/MLNet.AutoPipeline.SweepablePipelineNodeType.html#MLNet_AutoPipeline_SweepablePipelineNodeType_Unsweeapble
  commentId: F:MLNet.AutoPipeline.SweepablePipelineNodeType.Unsweeapble
  fullName: MLNet.AutoPipeline.SweepablePipelineNodeType.Unsweeapble
  nameWithType: SweepablePipelineNodeType.Unsweeapble
- uid: MLNet.AutoPipeline.UnsweepableNode`1
  name: UnsweepableNode<TTransformer>
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html
  commentId: T:MLNet.AutoPipeline.UnsweepableNode`1
  name.vb: UnsweepableNode(Of TTransformer)
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer)
  nameWithType: UnsweepableNode<TTransformer>
  nameWithType.vb: UnsweepableNode(Of TTransformer)
- uid: MLNet.AutoPipeline.UnsweepableNode`1.#ctor(Microsoft.ML.IEstimator{`0},Microsoft.ML.Data.TransformerScope)
  name: UnsweepableNode(IEstimator<TTransformer>, TransformerScope)
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1__ctor_Microsoft_ML_IEstimator__0__Microsoft_ML_Data_TransformerScope_
  commentId: M:MLNet.AutoPipeline.UnsweepableNode`1.#ctor(Microsoft.ML.IEstimator{`0},Microsoft.ML.Data.TransformerScope)
  name.vb: UnsweepableNode(IEstimator(Of TTransformer), TransformerScope)
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.UnsweepableNode(Microsoft.ML.IEstimator<TTransformer>, Microsoft.ML.Data.TransformerScope)
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).UnsweepableNode(Microsoft.ML.IEstimator(Of TTransformer), Microsoft.ML.Data.TransformerScope)
  nameWithType: UnsweepableNode<TTransformer>.UnsweepableNode(IEstimator<TTransformer>, TransformerScope)
  nameWithType.vb: UnsweepableNode(Of TTransformer).UnsweepableNode(IEstimator(Of TTransformer), TransformerScope)
- uid: MLNet.AutoPipeline.UnsweepableNode`1.#ctor*
  name: UnsweepableNode
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1__ctor_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.#ctor
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.UnsweepableNode
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).UnsweepableNode
  nameWithType: UnsweepableNode<TTransformer>.UnsweepableNode
  nameWithType.vb: UnsweepableNode(Of TTransformer).UnsweepableNode
- uid: MLNet.AutoPipeline.UnsweepableNode`1.BuildEstimator(MLNet.Sweeper.ParameterSet)
  name: BuildEstimator(ParameterSet)
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_BuildEstimator_MLNet_Sweeper_ParameterSet_
  commentId: M:MLNet.AutoPipeline.UnsweepableNode`1.BuildEstimator(MLNet.Sweeper.ParameterSet)
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.BuildEstimator(MLNet.Sweeper.ParameterSet)
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).BuildEstimator(MLNet.Sweeper.ParameterSet)
  nameWithType: UnsweepableNode<TTransformer>.BuildEstimator(ParameterSet)
  nameWithType.vb: UnsweepableNode(Of TTransformer).BuildEstimator(ParameterSet)
- uid: MLNet.AutoPipeline.UnsweepableNode`1.BuildEstimator*
  name: BuildEstimator
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_BuildEstimator_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.BuildEstimator
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.BuildEstimator
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).BuildEstimator
  nameWithType: UnsweepableNode<TTransformer>.BuildEstimator
  nameWithType.vb: UnsweepableNode(Of TTransformer).BuildEstimator
- uid: MLNet.AutoPipeline.UnsweepableNode`1.Current
  name: Current
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_Current
  commentId: P:MLNet.AutoPipeline.UnsweepableNode`1.Current
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.Current
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).Current
  nameWithType: UnsweepableNode<TTransformer>.Current
  nameWithType.vb: UnsweepableNode(Of TTransformer).Current
- uid: MLNet.AutoPipeline.UnsweepableNode`1.Current*
  name: Current
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_Current_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.Current
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.Current
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).Current
  nameWithType: UnsweepableNode<TTransformer>.Current
  nameWithType.vb: UnsweepableNode(Of TTransformer).Current
- uid: MLNet.AutoPipeline.UnsweepableNode`1.EstimatorName
  name: EstimatorName
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_EstimatorName
  commentId: P:MLNet.AutoPipeline.UnsweepableNode`1.EstimatorName
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.EstimatorName
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).EstimatorName
  nameWithType: UnsweepableNode<TTransformer>.EstimatorName
  nameWithType.vb: UnsweepableNode(Of TTransformer).EstimatorName
- uid: MLNet.AutoPipeline.UnsweepableNode`1.EstimatorName*
  name: EstimatorName
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_EstimatorName_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.EstimatorName
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.EstimatorName
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).EstimatorName
  nameWithType: UnsweepableNode<TTransformer>.EstimatorName
  nameWithType.vb: UnsweepableNode(Of TTransformer).EstimatorName
- uid: MLNet.AutoPipeline.UnsweepableNode`1.NodeType
  name: NodeType
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_NodeType
  commentId: P:MLNet.AutoPipeline.UnsweepableNode`1.NodeType
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.NodeType
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).NodeType
  nameWithType: UnsweepableNode<TTransformer>.NodeType
  nameWithType.vb: UnsweepableNode(Of TTransformer).NodeType
- uid: MLNet.AutoPipeline.UnsweepableNode`1.NodeType*
  name: NodeType
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_NodeType_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.NodeType
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.NodeType
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).NodeType
  nameWithType: UnsweepableNode<TTransformer>.NodeType
  nameWithType.vb: UnsweepableNode(Of TTransformer).NodeType
- uid: MLNet.AutoPipeline.UnsweepableNode`1.Scope
  name: Scope
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_Scope
  commentId: P:MLNet.AutoPipeline.UnsweepableNode`1.Scope
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.Scope
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).Scope
  nameWithType: UnsweepableNode<TTransformer>.Scope
  nameWithType.vb: UnsweepableNode(Of TTransformer).Scope
- uid: MLNet.AutoPipeline.UnsweepableNode`1.Scope*
  name: Scope
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_Scope_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.Scope
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.Scope
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).Scope
  nameWithType: UnsweepableNode<TTransformer>.Scope
  nameWithType.vb: UnsweepableNode(Of TTransformer).Scope
- uid: MLNet.AutoPipeline.UnsweepableNode`1.Summary
  name: Summary()
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_Summary
  commentId: M:MLNet.AutoPipeline.UnsweepableNode`1.Summary
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.Summary()
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).Summary()
  nameWithType: UnsweepableNode<TTransformer>.Summary()
  nameWithType.vb: UnsweepableNode(Of TTransformer).Summary()
- uid: MLNet.AutoPipeline.UnsweepableNode`1.Summary*
  name: Summary
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_Summary_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.Summary
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.Summary
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).Summary
  nameWithType: UnsweepableNode<TTransformer>.Summary
  nameWithType.vb: UnsweepableNode(Of TTransformer).Summary
- uid: MLNet.AutoPipeline.UnsweepableNode`1.ToString
  name: ToString()
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_ToString
  commentId: M:MLNet.AutoPipeline.UnsweepableNode`1.ToString
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.ToString()
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).ToString()
  nameWithType: UnsweepableNode<TTransformer>.ToString()
  nameWithType.vb: UnsweepableNode(Of TTransformer).ToString()
- uid: MLNet.AutoPipeline.UnsweepableNode`1.ToString*
  name: ToString
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_ToString_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.ToString
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.ToString
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).ToString
  nameWithType: UnsweepableNode<TTransformer>.ToString
  nameWithType.vb: UnsweepableNode(Of TTransformer).ToString
- uid: MLNet.AutoPipeline.UnsweepableNode`1.ValueGenerators
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_ValueGenerators
  commentId: P:MLNet.AutoPipeline.UnsweepableNode`1.ValueGenerators
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.ValueGenerators
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).ValueGenerators
  nameWithType: UnsweepableNode<TTransformer>.ValueGenerators
  nameWithType.vb: UnsweepableNode(Of TTransformer).ValueGenerators
- uid: MLNet.AutoPipeline.UnsweepableNode`1.ValueGenerators*
  name: ValueGenerators
  href: api/MLNet.AutoPipeline.UnsweepableNode-1.html#MLNet_AutoPipeline_UnsweepableNode_1_ValueGenerators_
  commentId: Overload:MLNet.AutoPipeline.UnsweepableNode`1.ValueGenerators
  isSpec: "True"
  fullName: MLNet.AutoPipeline.UnsweepableNode<TTransformer>.ValueGenerators
  fullName.vb: MLNet.AutoPipeline.UnsweepableNode(Of TTransformer).ValueGenerators
  nameWithType: UnsweepableNode<TTransformer>.ValueGenerators
  nameWithType.vb: UnsweepableNode(Of TTransformer).ValueGenerators
- uid: MLNet.Sweeper
  name: MLNet.Sweeper
  href: api/MLNet.Sweeper.html
  commentId: N:MLNet.Sweeper
  fullName: MLNet.Sweeper
  nameWithType: MLNet.Sweeper
- uid: MLNet.Sweeper.DiscreteParameterValue
  name: DiscreteParameterValue
  href: api/MLNet.Sweeper.DiscreteParameterValue.html
  commentId: T:MLNet.Sweeper.DiscreteParameterValue
  fullName: MLNet.Sweeper.DiscreteParameterValue
  nameWithType: DiscreteParameterValue
- uid: MLNet.Sweeper.DiscreteParameterValue.#ctor(System.String,System.Object,System.Double[],System.String)
  name: DiscreteParameterValue(String, Object, Double[], String)
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue__ctor_System_String_System_Object_System_Double___System_String_
  commentId: M:MLNet.Sweeper.DiscreteParameterValue.#ctor(System.String,System.Object,System.Double[],System.String)
  name.vb: DiscreteParameterValue(String, Object, Double(), String)
  fullName: MLNet.Sweeper.DiscreteParameterValue.DiscreteParameterValue(System.String, System.Object, System.Double[], System.String)
  fullName.vb: MLNet.Sweeper.DiscreteParameterValue.DiscreteParameterValue(System.String, System.Object, System.Double(), System.String)
  nameWithType: DiscreteParameterValue.DiscreteParameterValue(String, Object, Double[], String)
  nameWithType.vb: DiscreteParameterValue.DiscreteParameterValue(String, Object, Double(), String)
- uid: MLNet.Sweeper.DiscreteParameterValue.#ctor*
  name: DiscreteParameterValue
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue__ctor_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.DiscreteParameterValue
  nameWithType: DiscreteParameterValue.DiscreteParameterValue
- uid: MLNet.Sweeper.DiscreteParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  name: Equals(IParameterValue)
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Equals_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.DiscreteParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.DiscreteParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  nameWithType: DiscreteParameterValue.Equals(IParameterValue)
- uid: MLNet.Sweeper.DiscreteParameterValue.Equals(System.Object)
  name: Equals(Object)
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Equals_System_Object_
  commentId: M:MLNet.Sweeper.DiscreteParameterValue.Equals(System.Object)
  fullName: MLNet.Sweeper.DiscreteParameterValue.Equals(System.Object)
  nameWithType: DiscreteParameterValue.Equals(Object)
- uid: MLNet.Sweeper.DiscreteParameterValue.Equals*
  name: Equals
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Equals_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.Equals
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.Equals
  nameWithType: DiscreteParameterValue.Equals
- uid: MLNet.Sweeper.DiscreteParameterValue.ID
  name: ID
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_ID
  commentId: P:MLNet.Sweeper.DiscreteParameterValue.ID
  fullName: MLNet.Sweeper.DiscreteParameterValue.ID
  nameWithType: DiscreteParameterValue.ID
- uid: MLNet.Sweeper.DiscreteParameterValue.ID*
  name: ID
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_ID_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.ID
  nameWithType: DiscreteParameterValue.ID
- uid: MLNet.Sweeper.DiscreteParameterValue.Name
  name: Name
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Name
  commentId: P:MLNet.Sweeper.DiscreteParameterValue.Name
  fullName: MLNet.Sweeper.DiscreteParameterValue.Name
  nameWithType: DiscreteParameterValue.Name
- uid: MLNet.Sweeper.DiscreteParameterValue.Name*
  name: Name
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Name_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.Name
  nameWithType: DiscreteParameterValue.Name
- uid: MLNet.Sweeper.DiscreteParameterValue.OneHotEncode
  name: OneHotEncode
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_OneHotEncode
  commentId: P:MLNet.Sweeper.DiscreteParameterValue.OneHotEncode
  fullName: MLNet.Sweeper.DiscreteParameterValue.OneHotEncode
  nameWithType: DiscreteParameterValue.OneHotEncode
- uid: MLNet.Sweeper.DiscreteParameterValue.OneHotEncode*
  name: OneHotEncode
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_OneHotEncode_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.OneHotEncode
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.OneHotEncode
  nameWithType: DiscreteParameterValue.OneHotEncode
- uid: MLNet.Sweeper.DiscreteParameterValue.RawValue
  name: RawValue
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_RawValue
  commentId: P:MLNet.Sweeper.DiscreteParameterValue.RawValue
  fullName: MLNet.Sweeper.DiscreteParameterValue.RawValue
  nameWithType: DiscreteParameterValue.RawValue
- uid: MLNet.Sweeper.DiscreteParameterValue.RawValue*
  name: RawValue
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_RawValue_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.RawValue
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.RawValue
  nameWithType: DiscreteParameterValue.RawValue
- uid: MLNet.Sweeper.DiscreteParameterValue.Value
  name: Value
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Value
  commentId: P:MLNet.Sweeper.DiscreteParameterValue.Value
  fullName: MLNet.Sweeper.DiscreteParameterValue.Value
  nameWithType: DiscreteParameterValue.Value
- uid: MLNet.Sweeper.DiscreteParameterValue.Value*
  name: Value
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_Value_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.Value
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.Value
  nameWithType: DiscreteParameterValue.Value
- uid: MLNet.Sweeper.DiscreteParameterValue.ValueText
  name: ValueText
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_ValueText
  commentId: P:MLNet.Sweeper.DiscreteParameterValue.ValueText
  fullName: MLNet.Sweeper.DiscreteParameterValue.ValueText
  nameWithType: DiscreteParameterValue.ValueText
- uid: MLNet.Sweeper.DiscreteParameterValue.ValueText*
  name: ValueText
  href: api/MLNet.Sweeper.DiscreteParameterValue.html#MLNet_Sweeper_DiscreteParameterValue_ValueText_
  commentId: Overload:MLNet.Sweeper.DiscreteParameterValue.ValueText
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteParameterValue.ValueText
  nameWithType: DiscreteParameterValue.ValueText
- uid: MLNet.Sweeper.DiscreteValueGenerator
  name: DiscreteValueGenerator
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html
  commentId: T:MLNet.Sweeper.DiscreteValueGenerator
  fullName: MLNet.Sweeper.DiscreteValueGenerator
  nameWithType: DiscreteValueGenerator
- uid: MLNet.Sweeper.DiscreteValueGenerator.#ctor(MLNet.Sweeper.DiscreteValueGenerator.Option)
  name: DiscreteValueGenerator(DiscreteValueGenerator.Option)
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator__ctor_MLNet_Sweeper_DiscreteValueGenerator_Option_
  commentId: M:MLNet.Sweeper.DiscreteValueGenerator.#ctor(MLNet.Sweeper.DiscreteValueGenerator.Option)
  fullName: MLNet.Sweeper.DiscreteValueGenerator.DiscreteValueGenerator(MLNet.Sweeper.DiscreteValueGenerator.Option)
  nameWithType: DiscreteValueGenerator.DiscreteValueGenerator(DiscreteValueGenerator.Option)
- uid: MLNet.Sweeper.DiscreteValueGenerator.#ctor*
  name: DiscreteValueGenerator
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator__ctor_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.DiscreteValueGenerator
  nameWithType: DiscreteValueGenerator.DiscreteValueGenerator
- uid: MLNet.Sweeper.DiscreteValueGenerator.Count
  name: Count
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_Count
  commentId: P:MLNet.Sweeper.DiscreteValueGenerator.Count
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Count
  nameWithType: DiscreteValueGenerator.Count
- uid: MLNet.Sweeper.DiscreteValueGenerator.Count*
  name: Count
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_Count_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.Count
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Count
  nameWithType: DiscreteValueGenerator.Count
- uid: MLNet.Sweeper.DiscreteValueGenerator.CreateFromNormalized(System.Double)
  name: CreateFromNormalized(Double)
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_CreateFromNormalized_System_Double_
  commentId: M:MLNet.Sweeper.DiscreteValueGenerator.CreateFromNormalized(System.Double)
  fullName: MLNet.Sweeper.DiscreteValueGenerator.CreateFromNormalized(System.Double)
  nameWithType: DiscreteValueGenerator.CreateFromNormalized(Double)
- uid: MLNet.Sweeper.DiscreteValueGenerator.CreateFromNormalized*
  name: CreateFromNormalized
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_CreateFromNormalized_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.CreateFromNormalized
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.CreateFromNormalized
  nameWithType: DiscreteValueGenerator.CreateFromNormalized
- uid: MLNet.Sweeper.DiscreteValueGenerator.ID
  name: ID
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_ID
  commentId: P:MLNet.Sweeper.DiscreteValueGenerator.ID
  fullName: MLNet.Sweeper.DiscreteValueGenerator.ID
  nameWithType: DiscreteValueGenerator.ID
- uid: MLNet.Sweeper.DiscreteValueGenerator.ID*
  name: ID
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_ID_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.ID
  nameWithType: DiscreteValueGenerator.ID
- uid: MLNet.Sweeper.DiscreteValueGenerator.Item(System.Int32)
  name: Item[Int32]
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_Item_System_Int32_
  commentId: P:MLNet.Sweeper.DiscreteValueGenerator.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Item[System.Int32]
  fullName.vb: MLNet.Sweeper.DiscreteValueGenerator.Item(System.Int32)
  nameWithType: DiscreteValueGenerator.Item[Int32]
  nameWithType.vb: DiscreteValueGenerator.Item(Int32)
- uid: MLNet.Sweeper.DiscreteValueGenerator.Item*
  name: Item
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_Item_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.Item
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Item
  nameWithType: DiscreteValueGenerator.Item
- uid: MLNet.Sweeper.DiscreteValueGenerator.Name
  name: Name
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_Name
  commentId: P:MLNet.Sweeper.DiscreteValueGenerator.Name
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Name
  nameWithType: DiscreteValueGenerator.Name
- uid: MLNet.Sweeper.DiscreteValueGenerator.Name*
  name: Name
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_Name_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Name
  nameWithType: DiscreteValueGenerator.Name
- uid: MLNet.Sweeper.DiscreteValueGenerator.OneHotEncodeValue(MLNet.Sweeper.IParameterValue)
  name: OneHotEncodeValue(IParameterValue)
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_OneHotEncodeValue_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.DiscreteValueGenerator.OneHotEncodeValue(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.DiscreteValueGenerator.OneHotEncodeValue(MLNet.Sweeper.IParameterValue)
  nameWithType: DiscreteValueGenerator.OneHotEncodeValue(IParameterValue)
- uid: MLNet.Sweeper.DiscreteValueGenerator.OneHotEncodeValue*
  name: OneHotEncodeValue
  href: api/MLNet.Sweeper.DiscreteValueGenerator.html#MLNet_Sweeper_DiscreteValueGenerator_OneHotEncodeValue_
  commentId: Overload:MLNet.Sweeper.DiscreteValueGenerator.OneHotEncodeValue
  isSpec: "True"
  fullName: MLNet.Sweeper.DiscreteValueGenerator.OneHotEncodeValue
  nameWithType: DiscreteValueGenerator.OneHotEncodeValue
- uid: MLNet.Sweeper.DiscreteValueGenerator.Option
  name: DiscreteValueGenerator.Option
  href: api/MLNet.Sweeper.DiscreteValueGenerator.Option.html
  commentId: T:MLNet.Sweeper.DiscreteValueGenerator.Option
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Option
  nameWithType: DiscreteValueGenerator.Option
- uid: MLNet.Sweeper.DiscreteValueGenerator.Option.Values
  name: Values
  href: api/MLNet.Sweeper.DiscreteValueGenerator.Option.html#MLNet_Sweeper_DiscreteValueGenerator_Option_Values
  commentId: F:MLNet.Sweeper.DiscreteValueGenerator.Option.Values
  fullName: MLNet.Sweeper.DiscreteValueGenerator.Option.Values
  nameWithType: DiscreteValueGenerator.Option.Values
- uid: MLNet.Sweeper.FloatParameterValue
  name: FloatParameterValue
  href: api/MLNet.Sweeper.FloatParameterValue.html
  commentId: T:MLNet.Sweeper.FloatParameterValue
  fullName: MLNet.Sweeper.FloatParameterValue
  nameWithType: FloatParameterValue
- uid: MLNet.Sweeper.FloatParameterValue.#ctor(System.String,System.Single,System.String)
  name: FloatParameterValue(String, Single, String)
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue__ctor_System_String_System_Single_System_String_
  commentId: M:MLNet.Sweeper.FloatParameterValue.#ctor(System.String,System.Single,System.String)
  fullName: MLNet.Sweeper.FloatParameterValue.FloatParameterValue(System.String, System.Single, System.String)
  nameWithType: FloatParameterValue.FloatParameterValue(String, Single, String)
- uid: MLNet.Sweeper.FloatParameterValue.#ctor*
  name: FloatParameterValue
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue__ctor_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.FloatParameterValue
  nameWithType: FloatParameterValue.FloatParameterValue
- uid: MLNet.Sweeper.FloatParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  name: Equals(IParameterValue)
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Equals_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.FloatParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.FloatParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  nameWithType: FloatParameterValue.Equals(IParameterValue)
- uid: MLNet.Sweeper.FloatParameterValue.Equals(System.Object)
  name: Equals(Object)
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Equals_System_Object_
  commentId: M:MLNet.Sweeper.FloatParameterValue.Equals(System.Object)
  fullName: MLNet.Sweeper.FloatParameterValue.Equals(System.Object)
  nameWithType: FloatParameterValue.Equals(Object)
- uid: MLNet.Sweeper.FloatParameterValue.Equals*
  name: Equals
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Equals_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.Equals
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.Equals
  nameWithType: FloatParameterValue.Equals
- uid: MLNet.Sweeper.FloatParameterValue.ID
  name: ID
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_ID
  commentId: P:MLNet.Sweeper.FloatParameterValue.ID
  fullName: MLNet.Sweeper.FloatParameterValue.ID
  nameWithType: FloatParameterValue.ID
- uid: MLNet.Sweeper.FloatParameterValue.ID*
  name: ID
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_ID_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.ID
  nameWithType: FloatParameterValue.ID
- uid: MLNet.Sweeper.FloatParameterValue.Name
  name: Name
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Name
  commentId: P:MLNet.Sweeper.FloatParameterValue.Name
  fullName: MLNet.Sweeper.FloatParameterValue.Name
  nameWithType: FloatParameterValue.Name
- uid: MLNet.Sweeper.FloatParameterValue.Name*
  name: Name
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Name_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.Name
  nameWithType: FloatParameterValue.Name
- uid: MLNet.Sweeper.FloatParameterValue.RawValue
  name: RawValue
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_RawValue
  commentId: P:MLNet.Sweeper.FloatParameterValue.RawValue
  fullName: MLNet.Sweeper.FloatParameterValue.RawValue
  nameWithType: FloatParameterValue.RawValue
- uid: MLNet.Sweeper.FloatParameterValue.RawValue*
  name: RawValue
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_RawValue_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.RawValue
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.RawValue
  nameWithType: FloatParameterValue.RawValue
- uid: MLNet.Sweeper.FloatParameterValue.Value
  name: Value
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Value
  commentId: P:MLNet.Sweeper.FloatParameterValue.Value
  fullName: MLNet.Sweeper.FloatParameterValue.Value
  nameWithType: FloatParameterValue.Value
- uid: MLNet.Sweeper.FloatParameterValue.Value*
  name: Value
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_Value_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.Value
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.Value
  nameWithType: FloatParameterValue.Value
- uid: MLNet.Sweeper.FloatParameterValue.ValueText
  name: ValueText
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_ValueText
  commentId: P:MLNet.Sweeper.FloatParameterValue.ValueText
  fullName: MLNet.Sweeper.FloatParameterValue.ValueText
  nameWithType: FloatParameterValue.ValueText
- uid: MLNet.Sweeper.FloatParameterValue.ValueText*
  name: ValueText
  href: api/MLNet.Sweeper.FloatParameterValue.html#MLNet_Sweeper_FloatParameterValue_ValueText_
  commentId: Overload:MLNet.Sweeper.FloatParameterValue.ValueText
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatParameterValue.ValueText
  nameWithType: FloatParameterValue.ValueText
- uid: MLNet.Sweeper.FloatValueGenerator
  name: FloatValueGenerator
  href: api/MLNet.Sweeper.FloatValueGenerator.html
  commentId: T:MLNet.Sweeper.FloatValueGenerator
  fullName: MLNet.Sweeper.FloatValueGenerator
  nameWithType: FloatValueGenerator
- uid: MLNet.Sweeper.FloatValueGenerator.#ctor(MLNet.Sweeper.FloatValueGenerator.Option)
  name: FloatValueGenerator(FloatValueGenerator.Option)
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator__ctor_MLNet_Sweeper_FloatValueGenerator_Option_
  commentId: M:MLNet.Sweeper.FloatValueGenerator.#ctor(MLNet.Sweeper.FloatValueGenerator.Option)
  fullName: MLNet.Sweeper.FloatValueGenerator.FloatValueGenerator(MLNet.Sweeper.FloatValueGenerator.Option)
  nameWithType: FloatValueGenerator.FloatValueGenerator(FloatValueGenerator.Option)
- uid: MLNet.Sweeper.FloatValueGenerator.#ctor*
  name: FloatValueGenerator
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator__ctor_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.FloatValueGenerator
  nameWithType: FloatValueGenerator.FloatValueGenerator
- uid: MLNet.Sweeper.FloatValueGenerator.Count
  name: Count
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_Count
  commentId: P:MLNet.Sweeper.FloatValueGenerator.Count
  fullName: MLNet.Sweeper.FloatValueGenerator.Count
  nameWithType: FloatValueGenerator.Count
- uid: MLNet.Sweeper.FloatValueGenerator.Count*
  name: Count
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_Count_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.Count
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.Count
  nameWithType: FloatValueGenerator.Count
- uid: MLNet.Sweeper.FloatValueGenerator.CreateFromNormalized(System.Double)
  name: CreateFromNormalized(Double)
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_CreateFromNormalized_System_Double_
  commentId: M:MLNet.Sweeper.FloatValueGenerator.CreateFromNormalized(System.Double)
  fullName: MLNet.Sweeper.FloatValueGenerator.CreateFromNormalized(System.Double)
  nameWithType: FloatValueGenerator.CreateFromNormalized(Double)
- uid: MLNet.Sweeper.FloatValueGenerator.CreateFromNormalized*
  name: CreateFromNormalized
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_CreateFromNormalized_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.CreateFromNormalized
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.CreateFromNormalized
  nameWithType: FloatValueGenerator.CreateFromNormalized
- uid: MLNet.Sweeper.FloatValueGenerator.ID
  name: ID
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_ID
  commentId: P:MLNet.Sweeper.FloatValueGenerator.ID
  fullName: MLNet.Sweeper.FloatValueGenerator.ID
  nameWithType: FloatValueGenerator.ID
- uid: MLNet.Sweeper.FloatValueGenerator.ID*
  name: ID
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_ID_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.ID
  nameWithType: FloatValueGenerator.ID
- uid: MLNet.Sweeper.FloatValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  name: InRange(IParameterValue)
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_InRange_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.FloatValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.FloatValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  nameWithType: FloatValueGenerator.InRange(IParameterValue)
- uid: MLNet.Sweeper.FloatValueGenerator.InRange*
  name: InRange
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_InRange_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.InRange
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.InRange
  nameWithType: FloatValueGenerator.InRange
- uid: MLNet.Sweeper.FloatValueGenerator.Item(System.Int32)
  name: Item[Int32]
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_Item_System_Int32_
  commentId: P:MLNet.Sweeper.FloatValueGenerator.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: MLNet.Sweeper.FloatValueGenerator.Item[System.Int32]
  fullName.vb: MLNet.Sweeper.FloatValueGenerator.Item(System.Int32)
  nameWithType: FloatValueGenerator.Item[Int32]
  nameWithType.vb: FloatValueGenerator.Item(Int32)
- uid: MLNet.Sweeper.FloatValueGenerator.Item*
  name: Item
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_Item_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.Item
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.Item
  nameWithType: FloatValueGenerator.Item
- uid: MLNet.Sweeper.FloatValueGenerator.Name
  name: Name
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_Name
  commentId: P:MLNet.Sweeper.FloatValueGenerator.Name
  fullName: MLNet.Sweeper.FloatValueGenerator.Name
  nameWithType: FloatValueGenerator.Name
- uid: MLNet.Sweeper.FloatValueGenerator.Name*
  name: Name
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_Name_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.Name
  nameWithType: FloatValueGenerator.Name
- uid: MLNet.Sweeper.FloatValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  name: NormalizeValue(IParameterValue)
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_NormalizeValue_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.FloatValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.FloatValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  nameWithType: FloatValueGenerator.NormalizeValue(IParameterValue)
- uid: MLNet.Sweeper.FloatValueGenerator.NormalizeValue*
  name: NormalizeValue
  href: api/MLNet.Sweeper.FloatValueGenerator.html#MLNet_Sweeper_FloatValueGenerator_NormalizeValue_
  commentId: Overload:MLNet.Sweeper.FloatValueGenerator.NormalizeValue
  isSpec: "True"
  fullName: MLNet.Sweeper.FloatValueGenerator.NormalizeValue
  nameWithType: FloatValueGenerator.NormalizeValue
- uid: MLNet.Sweeper.FloatValueGenerator.Option
  name: FloatValueGenerator.Option
  href: api/MLNet.Sweeper.FloatValueGenerator.Option.html
  commentId: T:MLNet.Sweeper.FloatValueGenerator.Option
  fullName: MLNet.Sweeper.FloatValueGenerator.Option
  nameWithType: FloatValueGenerator.Option
- uid: MLNet.Sweeper.FloatValueGenerator.Option.Max
  name: Max
  href: api/MLNet.Sweeper.FloatValueGenerator.Option.html#MLNet_Sweeper_FloatValueGenerator_Option_Max
  commentId: F:MLNet.Sweeper.FloatValueGenerator.Option.Max
  fullName: MLNet.Sweeper.FloatValueGenerator.Option.Max
  nameWithType: FloatValueGenerator.Option.Max
- uid: MLNet.Sweeper.FloatValueGenerator.Option.Min
  name: Min
  href: api/MLNet.Sweeper.FloatValueGenerator.Option.html#MLNet_Sweeper_FloatValueGenerator_Option_Min
  commentId: F:MLNet.Sweeper.FloatValueGenerator.Option.Min
  fullName: MLNet.Sweeper.FloatValueGenerator.Option.Min
  nameWithType: FloatValueGenerator.Option.Min
- uid: MLNet.Sweeper.GP
  name: MLNet.Sweeper.GP
  href: api/MLNet.Sweeper.GP.html
  commentId: N:MLNet.Sweeper.GP
  fullName: MLNet.Sweeper.GP
  nameWithType: MLNet.Sweeper.GP
- uid: MLNet.Sweeper.GP.GaussProcessRegressor
  name: GaussProcessRegressor
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html
  commentId: T:MLNet.Sweeper.GP.GaussProcessRegressor
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor
  nameWithType: GaussProcessRegressor
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.#ctor(MLNet.Sweeper.GP.GaussProcessRegressor.Options)
  name: GaussProcessRegressor(GaussProcessRegressor.Options)
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor__ctor_MLNet_Sweeper_GP_GaussProcessRegressor_Options_
  commentId: M:MLNet.Sweeper.GP.GaussProcessRegressor.#ctor(MLNet.Sweeper.GP.GaussProcessRegressor.Options)
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.GaussProcessRegressor(MLNet.Sweeper.GP.GaussProcessRegressor.Options)
  nameWithType: GaussProcessRegressor.GaussProcessRegressor(GaussProcessRegressor.Options)
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.#ctor*
  name: GaussProcessRegressor
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor__ctor_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.GaussProcessRegressor
  nameWithType: GaussProcessRegressor.GaussProcessRegressor
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Fit(Numpy.NDarray,Numpy.NDarray)
  name: Fit(NDarray, NDarray)
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_Fit_Numpy_NDarray_Numpy_NDarray_
  commentId: M:MLNet.Sweeper.GP.GaussProcessRegressor.Fit(Numpy.NDarray,Numpy.NDarray)
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Fit(Numpy.NDarray, Numpy.NDarray)
  nameWithType: GaussProcessRegressor.Fit(NDarray, NDarray)
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Fit*
  name: Fit
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_Fit_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.Fit
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Fit
  nameWithType: GaussProcessRegressor.Fit
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Option
  name: Option
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_Option
  commentId: P:MLNet.Sweeper.GP.GaussProcessRegressor.Option
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Option
  nameWithType: GaussProcessRegressor.Option
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Option*
  name: Option
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_Option_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.Option
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Option
  nameWithType: GaussProcessRegressor.Option
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options
  name: GaussProcessRegressor.Options
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html
  commentId: T:MLNet.Sweeper.GP.GaussProcessRegressor.Options
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options
  nameWithType: GaussProcessRegressor.Options
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options.l
  name: l
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html#MLNet_Sweeper_GP_GaussProcessRegressor_Options_l
  commentId: P:MLNet.Sweeper.GP.GaussProcessRegressor.Options.l
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options.l
  nameWithType: GaussProcessRegressor.Options.l
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options.l*
  name: l
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html#MLNet_Sweeper_GP_GaussProcessRegressor_Options_l_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.Options.l
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options.l
  nameWithType: GaussProcessRegressor.Options.l
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options.noise
  name: noise
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html#MLNet_Sweeper_GP_GaussProcessRegressor_Options_noise
  commentId: P:MLNet.Sweeper.GP.GaussProcessRegressor.Options.noise
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options.noise
  nameWithType: GaussProcessRegressor.Options.noise
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options.noise*
  name: noise
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html#MLNet_Sweeper_GP_GaussProcessRegressor_Options_noise_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.Options.noise
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options.noise
  nameWithType: GaussProcessRegressor.Options.noise
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options.sigma
  name: sigma
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html#MLNet_Sweeper_GP_GaussProcessRegressor_Options_sigma
  commentId: P:MLNet.Sweeper.GP.GaussProcessRegressor.Options.sigma
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options.sigma
  nameWithType: GaussProcessRegressor.Options.sigma
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Options.sigma*
  name: sigma
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.Options.html#MLNet_Sweeper_GP_GaussProcessRegressor_Options_sigma_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.Options.sigma
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Options.sigma
  nameWithType: GaussProcessRegressor.Options.sigma
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.RBF(Numpy.NDarray,Numpy.NDarray,System.Double,System.Double)
  name: RBF(NDarray, NDarray, Double, Double)
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_RBF_Numpy_NDarray_Numpy_NDarray_System_Double_System_Double_
  commentId: M:MLNet.Sweeper.GP.GaussProcessRegressor.RBF(Numpy.NDarray,Numpy.NDarray,System.Double,System.Double)
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.RBF(Numpy.NDarray, Numpy.NDarray, System.Double, System.Double)
  nameWithType: GaussProcessRegressor.RBF(NDarray, NDarray, Double, Double)
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.RBF*
  name: RBF
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_RBF_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.RBF
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.RBF
  nameWithType: GaussProcessRegressor.RBF
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Transform(Numpy.NDarray)
  name: Transform(NDarray)
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_Transform_Numpy_NDarray_
  commentId: M:MLNet.Sweeper.GP.GaussProcessRegressor.Transform(Numpy.NDarray)
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Transform(Numpy.NDarray)
  nameWithType: GaussProcessRegressor.Transform(NDarray)
- uid: MLNet.Sweeper.GP.GaussProcessRegressor.Transform*
  name: Transform
  href: api/MLNet.Sweeper.GP.GaussProcessRegressor.html#MLNet_Sweeper_GP_GaussProcessRegressor_Transform_
  commentId: Overload:MLNet.Sweeper.GP.GaussProcessRegressor.Transform
  isSpec: "True"
  fullName: MLNet.Sweeper.GP.GaussProcessRegressor.Transform
  nameWithType: GaussProcessRegressor.Transform
- uid: MLNet.Sweeper.IDiscreteParameterValue
  name: IDiscreteParameterValue
  href: api/MLNet.Sweeper.IDiscreteParameterValue.html
  commentId: T:MLNet.Sweeper.IDiscreteParameterValue
  fullName: MLNet.Sweeper.IDiscreteParameterValue
  nameWithType: IDiscreteParameterValue
- uid: MLNet.Sweeper.IDiscreteParameterValue.OneHotEncode
  name: OneHotEncode
  href: api/MLNet.Sweeper.IDiscreteParameterValue.html#MLNet_Sweeper_IDiscreteParameterValue_OneHotEncode
  commentId: P:MLNet.Sweeper.IDiscreteParameterValue.OneHotEncode
  fullName: MLNet.Sweeper.IDiscreteParameterValue.OneHotEncode
  nameWithType: IDiscreteParameterValue.OneHotEncode
- uid: MLNet.Sweeper.IDiscreteParameterValue.OneHotEncode*
  name: OneHotEncode
  href: api/MLNet.Sweeper.IDiscreteParameterValue.html#MLNet_Sweeper_IDiscreteParameterValue_OneHotEncode_
  commentId: Overload:MLNet.Sweeper.IDiscreteParameterValue.OneHotEncode
  isSpec: "True"
  fullName: MLNet.Sweeper.IDiscreteParameterValue.OneHotEncode
  nameWithType: IDiscreteParameterValue.OneHotEncode
- uid: MLNet.Sweeper.IDiscreteValueGenerator
  name: IDiscreteValueGenerator
  href: api/MLNet.Sweeper.IDiscreteValueGenerator.html
  commentId: T:MLNet.Sweeper.IDiscreteValueGenerator
  fullName: MLNet.Sweeper.IDiscreteValueGenerator
  nameWithType: IDiscreteValueGenerator
- uid: MLNet.Sweeper.IDiscreteValueGenerator.OneHotEncodeValue(MLNet.Sweeper.IParameterValue)
  name: OneHotEncodeValue(IParameterValue)
  href: api/MLNet.Sweeper.IDiscreteValueGenerator.html#MLNet_Sweeper_IDiscreteValueGenerator_OneHotEncodeValue_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.IDiscreteValueGenerator.OneHotEncodeValue(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.IDiscreteValueGenerator.OneHotEncodeValue(MLNet.Sweeper.IParameterValue)
  nameWithType: IDiscreteValueGenerator.OneHotEncodeValue(IParameterValue)
- uid: MLNet.Sweeper.IDiscreteValueGenerator.OneHotEncodeValue*
  name: OneHotEncodeValue
  href: api/MLNet.Sweeper.IDiscreteValueGenerator.html#MLNet_Sweeper_IDiscreteValueGenerator_OneHotEncodeValue_
  commentId: Overload:MLNet.Sweeper.IDiscreteValueGenerator.OneHotEncodeValue
  isSpec: "True"
  fullName: MLNet.Sweeper.IDiscreteValueGenerator.OneHotEncodeValue
  nameWithType: IDiscreteValueGenerator.OneHotEncodeValue
- uid: MLNet.Sweeper.Int32ParamaterValue
  name: Int32ParamaterValue
  href: api/MLNet.Sweeper.Int32ParamaterValue.html
  commentId: T:MLNet.Sweeper.Int32ParamaterValue
  fullName: MLNet.Sweeper.Int32ParamaterValue
  nameWithType: Int32ParamaterValue
- uid: MLNet.Sweeper.Int32ParamaterValue.#ctor(System.String,System.Int32,System.String)
  name: Int32ParamaterValue(String, Int32, String)
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue__ctor_System_String_System_Int32_System_String_
  commentId: M:MLNet.Sweeper.Int32ParamaterValue.#ctor(System.String,System.Int32,System.String)
  fullName: MLNet.Sweeper.Int32ParamaterValue.Int32ParamaterValue(System.String, System.Int32, System.String)
  nameWithType: Int32ParamaterValue.Int32ParamaterValue(String, Int32, String)
- uid: MLNet.Sweeper.Int32ParamaterValue.#ctor*
  name: Int32ParamaterValue
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue__ctor_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.Int32ParamaterValue
  nameWithType: Int32ParamaterValue.Int32ParamaterValue
- uid: MLNet.Sweeper.Int32ParamaterValue.Equals(MLNet.Sweeper.IParameterValue)
  name: Equals(IParameterValue)
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Equals_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.Int32ParamaterValue.Equals(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.Int32ParamaterValue.Equals(MLNet.Sweeper.IParameterValue)
  nameWithType: Int32ParamaterValue.Equals(IParameterValue)
- uid: MLNet.Sweeper.Int32ParamaterValue.Equals(System.Object)
  name: Equals(Object)
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Equals_System_Object_
  commentId: M:MLNet.Sweeper.Int32ParamaterValue.Equals(System.Object)
  fullName: MLNet.Sweeper.Int32ParamaterValue.Equals(System.Object)
  nameWithType: Int32ParamaterValue.Equals(Object)
- uid: MLNet.Sweeper.Int32ParamaterValue.Equals*
  name: Equals
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Equals_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.Equals
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.Equals
  nameWithType: Int32ParamaterValue.Equals
- uid: MLNet.Sweeper.Int32ParamaterValue.ID
  name: ID
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_ID
  commentId: P:MLNet.Sweeper.Int32ParamaterValue.ID
  fullName: MLNet.Sweeper.Int32ParamaterValue.ID
  nameWithType: Int32ParamaterValue.ID
- uid: MLNet.Sweeper.Int32ParamaterValue.ID*
  name: ID
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_ID_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.ID
  nameWithType: Int32ParamaterValue.ID
- uid: MLNet.Sweeper.Int32ParamaterValue.Name
  name: Name
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Name
  commentId: P:MLNet.Sweeper.Int32ParamaterValue.Name
  fullName: MLNet.Sweeper.Int32ParamaterValue.Name
  nameWithType: Int32ParamaterValue.Name
- uid: MLNet.Sweeper.Int32ParamaterValue.Name*
  name: Name
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Name_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.Name
  nameWithType: Int32ParamaterValue.Name
- uid: MLNet.Sweeper.Int32ParamaterValue.RawValue
  name: RawValue
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_RawValue
  commentId: P:MLNet.Sweeper.Int32ParamaterValue.RawValue
  fullName: MLNet.Sweeper.Int32ParamaterValue.RawValue
  nameWithType: Int32ParamaterValue.RawValue
- uid: MLNet.Sweeper.Int32ParamaterValue.RawValue*
  name: RawValue
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_RawValue_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.RawValue
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.RawValue
  nameWithType: Int32ParamaterValue.RawValue
- uid: MLNet.Sweeper.Int32ParamaterValue.Value
  name: Value
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Value
  commentId: P:MLNet.Sweeper.Int32ParamaterValue.Value
  fullName: MLNet.Sweeper.Int32ParamaterValue.Value
  nameWithType: Int32ParamaterValue.Value
- uid: MLNet.Sweeper.Int32ParamaterValue.Value*
  name: Value
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_Value_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.Value
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.Value
  nameWithType: Int32ParamaterValue.Value
- uid: MLNet.Sweeper.Int32ParamaterValue.ValueText
  name: ValueText
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_ValueText
  commentId: P:MLNet.Sweeper.Int32ParamaterValue.ValueText
  fullName: MLNet.Sweeper.Int32ParamaterValue.ValueText
  nameWithType: Int32ParamaterValue.ValueText
- uid: MLNet.Sweeper.Int32ParamaterValue.ValueText*
  name: ValueText
  href: api/MLNet.Sweeper.Int32ParamaterValue.html#MLNet_Sweeper_Int32ParamaterValue_ValueText_
  commentId: Overload:MLNet.Sweeper.Int32ParamaterValue.ValueText
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ParamaterValue.ValueText
  nameWithType: Int32ParamaterValue.ValueText
- uid: MLNet.Sweeper.Int32ValueGenerator
  name: Int32ValueGenerator
  href: api/MLNet.Sweeper.Int32ValueGenerator.html
  commentId: T:MLNet.Sweeper.Int32ValueGenerator
  fullName: MLNet.Sweeper.Int32ValueGenerator
  nameWithType: Int32ValueGenerator
- uid: MLNet.Sweeper.Int32ValueGenerator.#ctor(MLNet.Sweeper.Int32ValueGenerator.Option)
  name: Int32ValueGenerator(Int32ValueGenerator.Option)
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator__ctor_MLNet_Sweeper_Int32ValueGenerator_Option_
  commentId: M:MLNet.Sweeper.Int32ValueGenerator.#ctor(MLNet.Sweeper.Int32ValueGenerator.Option)
  fullName: MLNet.Sweeper.Int32ValueGenerator.Int32ValueGenerator(MLNet.Sweeper.Int32ValueGenerator.Option)
  nameWithType: Int32ValueGenerator.Int32ValueGenerator(Int32ValueGenerator.Option)
- uid: MLNet.Sweeper.Int32ValueGenerator.#ctor*
  name: Int32ValueGenerator
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator__ctor_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.Int32ValueGenerator
  nameWithType: Int32ValueGenerator.Int32ValueGenerator
- uid: MLNet.Sweeper.Int32ValueGenerator.Count
  name: Count
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_Count
  commentId: P:MLNet.Sweeper.Int32ValueGenerator.Count
  fullName: MLNet.Sweeper.Int32ValueGenerator.Count
  nameWithType: Int32ValueGenerator.Count
- uid: MLNet.Sweeper.Int32ValueGenerator.Count*
  name: Count
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_Count_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.Count
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.Count
  nameWithType: Int32ValueGenerator.Count
- uid: MLNet.Sweeper.Int32ValueGenerator.CreateFromNormalized(System.Double)
  name: CreateFromNormalized(Double)
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_CreateFromNormalized_System_Double_
  commentId: M:MLNet.Sweeper.Int32ValueGenerator.CreateFromNormalized(System.Double)
  fullName: MLNet.Sweeper.Int32ValueGenerator.CreateFromNormalized(System.Double)
  nameWithType: Int32ValueGenerator.CreateFromNormalized(Double)
- uid: MLNet.Sweeper.Int32ValueGenerator.CreateFromNormalized*
  name: CreateFromNormalized
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_CreateFromNormalized_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.CreateFromNormalized
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.CreateFromNormalized
  nameWithType: Int32ValueGenerator.CreateFromNormalized
- uid: MLNet.Sweeper.Int32ValueGenerator.ID
  name: ID
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_ID
  commentId: P:MLNet.Sweeper.Int32ValueGenerator.ID
  fullName: MLNet.Sweeper.Int32ValueGenerator.ID
  nameWithType: Int32ValueGenerator.ID
- uid: MLNet.Sweeper.Int32ValueGenerator.ID*
  name: ID
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_ID_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.ID
  nameWithType: Int32ValueGenerator.ID
- uid: MLNet.Sweeper.Int32ValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  name: InRange(IParameterValue)
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_InRange_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.Int32ValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.Int32ValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  nameWithType: Int32ValueGenerator.InRange(IParameterValue)
- uid: MLNet.Sweeper.Int32ValueGenerator.InRange*
  name: InRange
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_InRange_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.InRange
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.InRange
  nameWithType: Int32ValueGenerator.InRange
- uid: MLNet.Sweeper.Int32ValueGenerator.Item(System.Int32)
  name: Item[Int32]
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_Item_System_Int32_
  commentId: P:MLNet.Sweeper.Int32ValueGenerator.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: MLNet.Sweeper.Int32ValueGenerator.Item[System.Int32]
  fullName.vb: MLNet.Sweeper.Int32ValueGenerator.Item(System.Int32)
  nameWithType: Int32ValueGenerator.Item[Int32]
  nameWithType.vb: Int32ValueGenerator.Item(Int32)
- uid: MLNet.Sweeper.Int32ValueGenerator.Item*
  name: Item
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_Item_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.Item
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.Item
  nameWithType: Int32ValueGenerator.Item
- uid: MLNet.Sweeper.Int32ValueGenerator.Name
  name: Name
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_Name
  commentId: P:MLNet.Sweeper.Int32ValueGenerator.Name
  fullName: MLNet.Sweeper.Int32ValueGenerator.Name
  nameWithType: Int32ValueGenerator.Name
- uid: MLNet.Sweeper.Int32ValueGenerator.Name*
  name: Name
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_Name_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.Name
  nameWithType: Int32ValueGenerator.Name
- uid: MLNet.Sweeper.Int32ValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  name: NormalizeValue(IParameterValue)
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_NormalizeValue_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.Int32ValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.Int32ValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  nameWithType: Int32ValueGenerator.NormalizeValue(IParameterValue)
- uid: MLNet.Sweeper.Int32ValueGenerator.NormalizeValue*
  name: NormalizeValue
  href: api/MLNet.Sweeper.Int32ValueGenerator.html#MLNet_Sweeper_Int32ValueGenerator_NormalizeValue_
  commentId: Overload:MLNet.Sweeper.Int32ValueGenerator.NormalizeValue
  isSpec: "True"
  fullName: MLNet.Sweeper.Int32ValueGenerator.NormalizeValue
  nameWithType: Int32ValueGenerator.NormalizeValue
- uid: MLNet.Sweeper.Int32ValueGenerator.Option
  name: Int32ValueGenerator.Option
  href: api/MLNet.Sweeper.Int32ValueGenerator.Option.html
  commentId: T:MLNet.Sweeper.Int32ValueGenerator.Option
  fullName: MLNet.Sweeper.Int32ValueGenerator.Option
  nameWithType: Int32ValueGenerator.Option
- uid: MLNet.Sweeper.Int32ValueGenerator.Option.Max
  name: Max
  href: api/MLNet.Sweeper.Int32ValueGenerator.Option.html#MLNet_Sweeper_Int32ValueGenerator_Option_Max
  commentId: F:MLNet.Sweeper.Int32ValueGenerator.Option.Max
  fullName: MLNet.Sweeper.Int32ValueGenerator.Option.Max
  nameWithType: Int32ValueGenerator.Option.Max
- uid: MLNet.Sweeper.Int32ValueGenerator.Option.Min
  name: Min
  href: api/MLNet.Sweeper.Int32ValueGenerator.Option.html#MLNet_Sweeper_Int32ValueGenerator_Option_Min
  commentId: F:MLNet.Sweeper.Int32ValueGenerator.Option.Min
  fullName: MLNet.Sweeper.Int32ValueGenerator.Option.Min
  nameWithType: Int32ValueGenerator.Option.Min
- uid: MLNet.Sweeper.INumericValueGenerator
  name: INumericValueGenerator
  href: api/MLNet.Sweeper.INumericValueGenerator.html
  commentId: T:MLNet.Sweeper.INumericValueGenerator
  fullName: MLNet.Sweeper.INumericValueGenerator
  nameWithType: INumericValueGenerator
- uid: MLNet.Sweeper.INumericValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  name: InRange(IParameterValue)
  href: api/MLNet.Sweeper.INumericValueGenerator.html#MLNet_Sweeper_INumericValueGenerator_InRange_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.INumericValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.INumericValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  nameWithType: INumericValueGenerator.InRange(IParameterValue)
- uid: MLNet.Sweeper.INumericValueGenerator.InRange*
  name: InRange
  href: api/MLNet.Sweeper.INumericValueGenerator.html#MLNet_Sweeper_INumericValueGenerator_InRange_
  commentId: Overload:MLNet.Sweeper.INumericValueGenerator.InRange
  isSpec: "True"
  fullName: MLNet.Sweeper.INumericValueGenerator.InRange
  nameWithType: INumericValueGenerator.InRange
- uid: MLNet.Sweeper.INumericValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  name: NormalizeValue(IParameterValue)
  href: api/MLNet.Sweeper.INumericValueGenerator.html#MLNet_Sweeper_INumericValueGenerator_NormalizeValue_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.INumericValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.INumericValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  nameWithType: INumericValueGenerator.NormalizeValue(IParameterValue)
- uid: MLNet.Sweeper.INumericValueGenerator.NormalizeValue*
  name: NormalizeValue
  href: api/MLNet.Sweeper.INumericValueGenerator.html#MLNet_Sweeper_INumericValueGenerator_NormalizeValue_
  commentId: Overload:MLNet.Sweeper.INumericValueGenerator.NormalizeValue
  isSpec: "True"
  fullName: MLNet.Sweeper.INumericValueGenerator.NormalizeValue
  nameWithType: INumericValueGenerator.NormalizeValue
- uid: MLNet.Sweeper.IParameterValue
  name: IParameterValue
  href: api/MLNet.Sweeper.IParameterValue.html
  commentId: T:MLNet.Sweeper.IParameterValue
  fullName: MLNet.Sweeper.IParameterValue
  nameWithType: IParameterValue
- uid: MLNet.Sweeper.IParameterValue.ID
  name: ID
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_ID
  commentId: P:MLNet.Sweeper.IParameterValue.ID
  fullName: MLNet.Sweeper.IParameterValue.ID
  nameWithType: IParameterValue.ID
- uid: MLNet.Sweeper.IParameterValue.ID*
  name: ID
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_ID_
  commentId: Overload:MLNet.Sweeper.IParameterValue.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.IParameterValue.ID
  nameWithType: IParameterValue.ID
- uid: MLNet.Sweeper.IParameterValue.Name
  name: Name
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_Name
  commentId: P:MLNet.Sweeper.IParameterValue.Name
  fullName: MLNet.Sweeper.IParameterValue.Name
  nameWithType: IParameterValue.Name
- uid: MLNet.Sweeper.IParameterValue.Name*
  name: Name
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_Name_
  commentId: Overload:MLNet.Sweeper.IParameterValue.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.IParameterValue.Name
  nameWithType: IParameterValue.Name
- uid: MLNet.Sweeper.IParameterValue.RawValue
  name: RawValue
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_RawValue
  commentId: P:MLNet.Sweeper.IParameterValue.RawValue
  fullName: MLNet.Sweeper.IParameterValue.RawValue
  nameWithType: IParameterValue.RawValue
- uid: MLNet.Sweeper.IParameterValue.RawValue*
  name: RawValue
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_RawValue_
  commentId: Overload:MLNet.Sweeper.IParameterValue.RawValue
  isSpec: "True"
  fullName: MLNet.Sweeper.IParameterValue.RawValue
  nameWithType: IParameterValue.RawValue
- uid: MLNet.Sweeper.IParameterValue.ValueText
  name: ValueText
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_ValueText
  commentId: P:MLNet.Sweeper.IParameterValue.ValueText
  fullName: MLNet.Sweeper.IParameterValue.ValueText
  nameWithType: IParameterValue.ValueText
- uid: MLNet.Sweeper.IParameterValue.ValueText*
  name: ValueText
  href: api/MLNet.Sweeper.IParameterValue.html#MLNet_Sweeper_IParameterValue_ValueText_
  commentId: Overload:MLNet.Sweeper.IParameterValue.ValueText
  isSpec: "True"
  fullName: MLNet.Sweeper.IParameterValue.ValueText
  nameWithType: IParameterValue.ValueText
- uid: MLNet.Sweeper.IParameterValue`1
  name: IParameterValue<TValue>
  href: api/MLNet.Sweeper.IParameterValue-1.html
  commentId: T:MLNet.Sweeper.IParameterValue`1
  name.vb: IParameterValue(Of TValue)
  fullName: MLNet.Sweeper.IParameterValue<TValue>
  fullName.vb: MLNet.Sweeper.IParameterValue(Of TValue)
  nameWithType: IParameterValue<TValue>
  nameWithType.vb: IParameterValue(Of TValue)
- uid: MLNet.Sweeper.IParameterValue`1.Value
  name: Value
  href: api/MLNet.Sweeper.IParameterValue-1.html#MLNet_Sweeper_IParameterValue_1_Value
  commentId: P:MLNet.Sweeper.IParameterValue`1.Value
  fullName: MLNet.Sweeper.IParameterValue<TValue>.Value
  fullName.vb: MLNet.Sweeper.IParameterValue(Of TValue).Value
  nameWithType: IParameterValue<TValue>.Value
  nameWithType.vb: IParameterValue(Of TValue).Value
- uid: MLNet.Sweeper.IParameterValue`1.Value*
  name: Value
  href: api/MLNet.Sweeper.IParameterValue-1.html#MLNet_Sweeper_IParameterValue_1_Value_
  commentId: Overload:MLNet.Sweeper.IParameterValue`1.Value
  isSpec: "True"
  fullName: MLNet.Sweeper.IParameterValue<TValue>.Value
  fullName.vb: MLNet.Sweeper.IParameterValue(Of TValue).Value
  nameWithType: IParameterValue<TValue>.Value
  nameWithType.vb: IParameterValue(Of TValue).Value
- uid: MLNet.Sweeper.IRunResult
  name: IRunResult
  href: api/MLNet.Sweeper.IRunResult.html
  commentId: T:MLNet.Sweeper.IRunResult
  fullName: MLNet.Sweeper.IRunResult
  nameWithType: IRunResult
- uid: MLNet.Sweeper.IRunResult.IsMetricMaximizing
  name: IsMetricMaximizing
  href: api/MLNet.Sweeper.IRunResult.html#MLNet_Sweeper_IRunResult_IsMetricMaximizing
  commentId: P:MLNet.Sweeper.IRunResult.IsMetricMaximizing
  fullName: MLNet.Sweeper.IRunResult.IsMetricMaximizing
  nameWithType: IRunResult.IsMetricMaximizing
- uid: MLNet.Sweeper.IRunResult.IsMetricMaximizing*
  name: IsMetricMaximizing
  href: api/MLNet.Sweeper.IRunResult.html#MLNet_Sweeper_IRunResult_IsMetricMaximizing_
  commentId: Overload:MLNet.Sweeper.IRunResult.IsMetricMaximizing
  isSpec: "True"
  fullName: MLNet.Sweeper.IRunResult.IsMetricMaximizing
  nameWithType: IRunResult.IsMetricMaximizing
- uid: MLNet.Sweeper.IRunResult.MetricValue
  name: MetricValue
  href: api/MLNet.Sweeper.IRunResult.html#MLNet_Sweeper_IRunResult_MetricValue
  commentId: P:MLNet.Sweeper.IRunResult.MetricValue
  fullName: MLNet.Sweeper.IRunResult.MetricValue
  nameWithType: IRunResult.MetricValue
- uid: MLNet.Sweeper.IRunResult.MetricValue*
  name: MetricValue
  href: api/MLNet.Sweeper.IRunResult.html#MLNet_Sweeper_IRunResult_MetricValue_
  commentId: Overload:MLNet.Sweeper.IRunResult.MetricValue
  isSpec: "True"
  fullName: MLNet.Sweeper.IRunResult.MetricValue
  nameWithType: IRunResult.MetricValue
- uid: MLNet.Sweeper.IRunResult.ParameterSet
  name: ParameterSet
  href: api/MLNet.Sweeper.IRunResult.html#MLNet_Sweeper_IRunResult_ParameterSet
  commentId: P:MLNet.Sweeper.IRunResult.ParameterSet
  fullName: MLNet.Sweeper.IRunResult.ParameterSet
  nameWithType: IRunResult.ParameterSet
- uid: MLNet.Sweeper.IRunResult.ParameterSet*
  name: ParameterSet
  href: api/MLNet.Sweeper.IRunResult.html#MLNet_Sweeper_IRunResult_ParameterSet_
  commentId: Overload:MLNet.Sweeper.IRunResult.ParameterSet
  isSpec: "True"
  fullName: MLNet.Sweeper.IRunResult.ParameterSet
  nameWithType: IRunResult.ParameterSet
- uid: MLNet.Sweeper.IRunResult`1
  name: IRunResult<T>
  href: api/MLNet.Sweeper.IRunResult-1.html
  commentId: T:MLNet.Sweeper.IRunResult`1
  name.vb: IRunResult(Of T)
  fullName: MLNet.Sweeper.IRunResult<T>
  fullName.vb: MLNet.Sweeper.IRunResult(Of T)
  nameWithType: IRunResult<T>
  nameWithType.vb: IRunResult(Of T)
- uid: MLNet.Sweeper.IRunResult`1.MetricValue
  name: MetricValue
  href: api/MLNet.Sweeper.IRunResult-1.html#MLNet_Sweeper_IRunResult_1_MetricValue
  commentId: P:MLNet.Sweeper.IRunResult`1.MetricValue
  fullName: MLNet.Sweeper.IRunResult<T>.MetricValue
  fullName.vb: MLNet.Sweeper.IRunResult(Of T).MetricValue
  nameWithType: IRunResult<T>.MetricValue
  nameWithType.vb: IRunResult(Of T).MetricValue
- uid: MLNet.Sweeper.IRunResult`1.MetricValue*
  name: MetricValue
  href: api/MLNet.Sweeper.IRunResult-1.html#MLNet_Sweeper_IRunResult_1_MetricValue_
  commentId: Overload:MLNet.Sweeper.IRunResult`1.MetricValue
  isSpec: "True"
  fullName: MLNet.Sweeper.IRunResult<T>.MetricValue
  fullName.vb: MLNet.Sweeper.IRunResult(Of T).MetricValue
  nameWithType: IRunResult<T>.MetricValue
  nameWithType.vb: IRunResult(Of T).MetricValue
- uid: MLNet.Sweeper.ISweeper
  name: ISweeper
  href: api/MLNet.Sweeper.ISweeper.html
  commentId: T:MLNet.Sweeper.ISweeper
  fullName: MLNet.Sweeper.ISweeper
  nameWithType: ISweeper
- uid: MLNet.Sweeper.ISweeper.AddRunHistory(MLNet.Sweeper.IRunResult)
  name: AddRunHistory(IRunResult)
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_AddRunHistory_MLNet_Sweeper_IRunResult_
  commentId: M:MLNet.Sweeper.ISweeper.AddRunHistory(MLNet.Sweeper.IRunResult)
  fullName: MLNet.Sweeper.ISweeper.AddRunHistory(MLNet.Sweeper.IRunResult)
  nameWithType: ISweeper.AddRunHistory(IRunResult)
- uid: MLNet.Sweeper.ISweeper.AddRunHistory*
  name: AddRunHistory
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_AddRunHistory_
  commentId: Overload:MLNet.Sweeper.ISweeper.AddRunHistory
  isSpec: "True"
  fullName: MLNet.Sweeper.ISweeper.AddRunHistory
  nameWithType: ISweeper.AddRunHistory
- uid: MLNet.Sweeper.ISweeper.Current
  name: Current
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_Current
  commentId: P:MLNet.Sweeper.ISweeper.Current
  fullName: MLNet.Sweeper.ISweeper.Current
  nameWithType: ISweeper.Current
- uid: MLNet.Sweeper.ISweeper.Current*
  name: Current
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_Current_
  commentId: Overload:MLNet.Sweeper.ISweeper.Current
  isSpec: "True"
  fullName: MLNet.Sweeper.ISweeper.Current
  nameWithType: ISweeper.Current
- uid: MLNet.Sweeper.ISweeper.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{MLNet.Sweeper.IRunResult})
  name: ProposeSweeps(Int32, IEnumerable<IRunResult>)
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_ProposeSweeps_System_Int32_System_Collections_Generic_IEnumerable_MLNet_Sweeper_IRunResult__
  commentId: M:MLNet.Sweeper.ISweeper.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{MLNet.Sweeper.IRunResult})
  name.vb: ProposeSweeps(Int32, IEnumerable(Of IRunResult))
  fullName: MLNet.Sweeper.ISweeper.ProposeSweeps(System.Int32, System.Collections.Generic.IEnumerable<MLNet.Sweeper.IRunResult>)
  fullName.vb: MLNet.Sweeper.ISweeper.ProposeSweeps(System.Int32, System.Collections.Generic.IEnumerable(Of MLNet.Sweeper.IRunResult))
  nameWithType: ISweeper.ProposeSweeps(Int32, IEnumerable<IRunResult>)
  nameWithType.vb: ISweeper.ProposeSweeps(Int32, IEnumerable(Of IRunResult))
- uid: MLNet.Sweeper.ISweeper.ProposeSweeps*
  name: ProposeSweeps
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_ProposeSweeps_
  commentId: Overload:MLNet.Sweeper.ISweeper.ProposeSweeps
  isSpec: "True"
  fullName: MLNet.Sweeper.ISweeper.ProposeSweeps
  nameWithType: ISweeper.ProposeSweeps
- uid: MLNet.Sweeper.ISweeper.SweepableParamaters
  name: SweepableParamaters
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_SweepableParamaters
  commentId: P:MLNet.Sweeper.ISweeper.SweepableParamaters
  fullName: MLNet.Sweeper.ISweeper.SweepableParamaters
  nameWithType: ISweeper.SweepableParamaters
- uid: MLNet.Sweeper.ISweeper.SweepableParamaters*
  name: SweepableParamaters
  href: api/MLNet.Sweeper.ISweeper.html#MLNet_Sweeper_ISweeper_SweepableParamaters_
  commentId: Overload:MLNet.Sweeper.ISweeper.SweepableParamaters
  isSpec: "True"
  fullName: MLNet.Sweeper.ISweeper.SweepableParamaters
  nameWithType: ISweeper.SweepableParamaters
- uid: MLNet.Sweeper.ISweepResultEvaluator`1
  name: ISweepResultEvaluator<TResults>
  href: api/MLNet.Sweeper.ISweepResultEvaluator-1.html
  commentId: T:MLNet.Sweeper.ISweepResultEvaluator`1
  name.vb: ISweepResultEvaluator(Of TResults)
  fullName: MLNet.Sweeper.ISweepResultEvaluator<TResults>
  fullName.vb: MLNet.Sweeper.ISweepResultEvaluator(Of TResults)
  nameWithType: ISweepResultEvaluator<TResults>
  nameWithType.vb: ISweepResultEvaluator(Of TResults)
- uid: MLNet.Sweeper.ISweepResultEvaluator`1.GetRunResult(MLNet.Sweeper.ParameterSet,`0)
  name: GetRunResult(ParameterSet, TResults)
  href: api/MLNet.Sweeper.ISweepResultEvaluator-1.html#MLNet_Sweeper_ISweepResultEvaluator_1_GetRunResult_MLNet_Sweeper_ParameterSet__0_
  commentId: M:MLNet.Sweeper.ISweepResultEvaluator`1.GetRunResult(MLNet.Sweeper.ParameterSet,`0)
  fullName: MLNet.Sweeper.ISweepResultEvaluator<TResults>.GetRunResult(MLNet.Sweeper.ParameterSet, TResults)
  fullName.vb: MLNet.Sweeper.ISweepResultEvaluator(Of TResults).GetRunResult(MLNet.Sweeper.ParameterSet, TResults)
  nameWithType: ISweepResultEvaluator<TResults>.GetRunResult(ParameterSet, TResults)
  nameWithType.vb: ISweepResultEvaluator(Of TResults).GetRunResult(ParameterSet, TResults)
- uid: MLNet.Sweeper.ISweepResultEvaluator`1.GetRunResult*
  name: GetRunResult
  href: api/MLNet.Sweeper.ISweepResultEvaluator-1.html#MLNet_Sweeper_ISweepResultEvaluator_1_GetRunResult_
  commentId: Overload:MLNet.Sweeper.ISweepResultEvaluator`1.GetRunResult
  isSpec: "True"
  fullName: MLNet.Sweeper.ISweepResultEvaluator<TResults>.GetRunResult
  fullName.vb: MLNet.Sweeper.ISweepResultEvaluator(Of TResults).GetRunResult
  nameWithType: ISweepResultEvaluator<TResults>.GetRunResult
  nameWithType.vb: ISweepResultEvaluator(Of TResults).GetRunResult
- uid: MLNet.Sweeper.IValueGenerator
  name: IValueGenerator
  href: api/MLNet.Sweeper.IValueGenerator.html
  commentId: T:MLNet.Sweeper.IValueGenerator
  fullName: MLNet.Sweeper.IValueGenerator
  nameWithType: IValueGenerator
- uid: MLNet.Sweeper.IValueGenerator.Count
  name: Count
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_Count
  commentId: P:MLNet.Sweeper.IValueGenerator.Count
  fullName: MLNet.Sweeper.IValueGenerator.Count
  nameWithType: IValueGenerator.Count
- uid: MLNet.Sweeper.IValueGenerator.Count*
  name: Count
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_Count_
  commentId: Overload:MLNet.Sweeper.IValueGenerator.Count
  isSpec: "True"
  fullName: MLNet.Sweeper.IValueGenerator.Count
  nameWithType: IValueGenerator.Count
- uid: MLNet.Sweeper.IValueGenerator.CreateFromNormalized(System.Double)
  name: CreateFromNormalized(Double)
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_CreateFromNormalized_System_Double_
  commentId: M:MLNet.Sweeper.IValueGenerator.CreateFromNormalized(System.Double)
  fullName: MLNet.Sweeper.IValueGenerator.CreateFromNormalized(System.Double)
  nameWithType: IValueGenerator.CreateFromNormalized(Double)
- uid: MLNet.Sweeper.IValueGenerator.CreateFromNormalized*
  name: CreateFromNormalized
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_CreateFromNormalized_
  commentId: Overload:MLNet.Sweeper.IValueGenerator.CreateFromNormalized
  isSpec: "True"
  fullName: MLNet.Sweeper.IValueGenerator.CreateFromNormalized
  nameWithType: IValueGenerator.CreateFromNormalized
- uid: MLNet.Sweeper.IValueGenerator.ID
  name: ID
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_ID
  commentId: P:MLNet.Sweeper.IValueGenerator.ID
  fullName: MLNet.Sweeper.IValueGenerator.ID
  nameWithType: IValueGenerator.ID
- uid: MLNet.Sweeper.IValueGenerator.ID*
  name: ID
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_ID_
  commentId: Overload:MLNet.Sweeper.IValueGenerator.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.IValueGenerator.ID
  nameWithType: IValueGenerator.ID
- uid: MLNet.Sweeper.IValueGenerator.Item(System.Int32)
  name: Item[Int32]
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_Item_System_Int32_
  commentId: P:MLNet.Sweeper.IValueGenerator.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: MLNet.Sweeper.IValueGenerator.Item[System.Int32]
  fullName.vb: MLNet.Sweeper.IValueGenerator.Item(System.Int32)
  nameWithType: IValueGenerator.Item[Int32]
  nameWithType.vb: IValueGenerator.Item(Int32)
- uid: MLNet.Sweeper.IValueGenerator.Item*
  name: Item
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_Item_
  commentId: Overload:MLNet.Sweeper.IValueGenerator.Item
  isSpec: "True"
  fullName: MLNet.Sweeper.IValueGenerator.Item
  nameWithType: IValueGenerator.Item
- uid: MLNet.Sweeper.IValueGenerator.Name
  name: Name
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_Name
  commentId: P:MLNet.Sweeper.IValueGenerator.Name
  fullName: MLNet.Sweeper.IValueGenerator.Name
  nameWithType: IValueGenerator.Name
- uid: MLNet.Sweeper.IValueGenerator.Name*
  name: Name
  href: api/MLNet.Sweeper.IValueGenerator.html#MLNet_Sweeper_IValueGenerator_Name_
  commentId: Overload:MLNet.Sweeper.IValueGenerator.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.IValueGenerator.Name
  nameWithType: IValueGenerator.Name
- uid: MLNet.Sweeper.LongParameterValue
  name: LongParameterValue
  href: api/MLNet.Sweeper.LongParameterValue.html
  commentId: T:MLNet.Sweeper.LongParameterValue
  fullName: MLNet.Sweeper.LongParameterValue
  nameWithType: LongParameterValue
- uid: MLNet.Sweeper.LongParameterValue.#ctor(System.String,System.Int64,System.String)
  name: LongParameterValue(String, Int64, String)
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue__ctor_System_String_System_Int64_System_String_
  commentId: M:MLNet.Sweeper.LongParameterValue.#ctor(System.String,System.Int64,System.String)
  fullName: MLNet.Sweeper.LongParameterValue.LongParameterValue(System.String, System.Int64, System.String)
  nameWithType: LongParameterValue.LongParameterValue(String, Int64, String)
- uid: MLNet.Sweeper.LongParameterValue.#ctor*
  name: LongParameterValue
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue__ctor_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.LongParameterValue
  nameWithType: LongParameterValue.LongParameterValue
- uid: MLNet.Sweeper.LongParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  name: Equals(IParameterValue)
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Equals_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.LongParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.LongParameterValue.Equals(MLNet.Sweeper.IParameterValue)
  nameWithType: LongParameterValue.Equals(IParameterValue)
- uid: MLNet.Sweeper.LongParameterValue.Equals(System.Object)
  name: Equals(Object)
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Equals_System_Object_
  commentId: M:MLNet.Sweeper.LongParameterValue.Equals(System.Object)
  fullName: MLNet.Sweeper.LongParameterValue.Equals(System.Object)
  nameWithType: LongParameterValue.Equals(Object)
- uid: MLNet.Sweeper.LongParameterValue.Equals*
  name: Equals
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Equals_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.Equals
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.Equals
  nameWithType: LongParameterValue.Equals
- uid: MLNet.Sweeper.LongParameterValue.ID
  name: ID
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_ID
  commentId: P:MLNet.Sweeper.LongParameterValue.ID
  fullName: MLNet.Sweeper.LongParameterValue.ID
  nameWithType: LongParameterValue.ID
- uid: MLNet.Sweeper.LongParameterValue.ID*
  name: ID
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_ID_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.ID
  nameWithType: LongParameterValue.ID
- uid: MLNet.Sweeper.LongParameterValue.Name
  name: Name
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Name
  commentId: P:MLNet.Sweeper.LongParameterValue.Name
  fullName: MLNet.Sweeper.LongParameterValue.Name
  nameWithType: LongParameterValue.Name
- uid: MLNet.Sweeper.LongParameterValue.Name*
  name: Name
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Name_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.Name
  nameWithType: LongParameterValue.Name
- uid: MLNet.Sweeper.LongParameterValue.RawValue
  name: RawValue
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_RawValue
  commentId: P:MLNet.Sweeper.LongParameterValue.RawValue
  fullName: MLNet.Sweeper.LongParameterValue.RawValue
  nameWithType: LongParameterValue.RawValue
- uid: MLNet.Sweeper.LongParameterValue.RawValue*
  name: RawValue
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_RawValue_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.RawValue
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.RawValue
  nameWithType: LongParameterValue.RawValue
- uid: MLNet.Sweeper.LongParameterValue.Value
  name: Value
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Value
  commentId: P:MLNet.Sweeper.LongParameterValue.Value
  fullName: MLNet.Sweeper.LongParameterValue.Value
  nameWithType: LongParameterValue.Value
- uid: MLNet.Sweeper.LongParameterValue.Value*
  name: Value
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_Value_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.Value
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.Value
  nameWithType: LongParameterValue.Value
- uid: MLNet.Sweeper.LongParameterValue.ValueText
  name: ValueText
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_ValueText
  commentId: P:MLNet.Sweeper.LongParameterValue.ValueText
  fullName: MLNet.Sweeper.LongParameterValue.ValueText
  nameWithType: LongParameterValue.ValueText
- uid: MLNet.Sweeper.LongParameterValue.ValueText*
  name: ValueText
  href: api/MLNet.Sweeper.LongParameterValue.html#MLNet_Sweeper_LongParameterValue_ValueText_
  commentId: Overload:MLNet.Sweeper.LongParameterValue.ValueText
  isSpec: "True"
  fullName: MLNet.Sweeper.LongParameterValue.ValueText
  nameWithType: LongParameterValue.ValueText
- uid: MLNet.Sweeper.LongValueGenerator
  name: LongValueGenerator
  href: api/MLNet.Sweeper.LongValueGenerator.html
  commentId: T:MLNet.Sweeper.LongValueGenerator
  fullName: MLNet.Sweeper.LongValueGenerator
  nameWithType: LongValueGenerator
- uid: MLNet.Sweeper.LongValueGenerator.#ctor(MLNet.Sweeper.LongValueGenerator.Option)
  name: LongValueGenerator(LongValueGenerator.Option)
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator__ctor_MLNet_Sweeper_LongValueGenerator_Option_
  commentId: M:MLNet.Sweeper.LongValueGenerator.#ctor(MLNet.Sweeper.LongValueGenerator.Option)
  fullName: MLNet.Sweeper.LongValueGenerator.LongValueGenerator(MLNet.Sweeper.LongValueGenerator.Option)
  nameWithType: LongValueGenerator.LongValueGenerator(LongValueGenerator.Option)
- uid: MLNet.Sweeper.LongValueGenerator.#ctor*
  name: LongValueGenerator
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator__ctor_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.LongValueGenerator
  nameWithType: LongValueGenerator.LongValueGenerator
- uid: MLNet.Sweeper.LongValueGenerator.Count
  name: Count
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_Count
  commentId: P:MLNet.Sweeper.LongValueGenerator.Count
  fullName: MLNet.Sweeper.LongValueGenerator.Count
  nameWithType: LongValueGenerator.Count
- uid: MLNet.Sweeper.LongValueGenerator.Count*
  name: Count
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_Count_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.Count
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.Count
  nameWithType: LongValueGenerator.Count
- uid: MLNet.Sweeper.LongValueGenerator.CreateFromNormalized(System.Double)
  name: CreateFromNormalized(Double)
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_CreateFromNormalized_System_Double_
  commentId: M:MLNet.Sweeper.LongValueGenerator.CreateFromNormalized(System.Double)
  fullName: MLNet.Sweeper.LongValueGenerator.CreateFromNormalized(System.Double)
  nameWithType: LongValueGenerator.CreateFromNormalized(Double)
- uid: MLNet.Sweeper.LongValueGenerator.CreateFromNormalized*
  name: CreateFromNormalized
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_CreateFromNormalized_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.CreateFromNormalized
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.CreateFromNormalized
  nameWithType: LongValueGenerator.CreateFromNormalized
- uid: MLNet.Sweeper.LongValueGenerator.ID
  name: ID
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_ID
  commentId: P:MLNet.Sweeper.LongValueGenerator.ID
  fullName: MLNet.Sweeper.LongValueGenerator.ID
  nameWithType: LongValueGenerator.ID
- uid: MLNet.Sweeper.LongValueGenerator.ID*
  name: ID
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_ID_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.ID
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.ID
  nameWithType: LongValueGenerator.ID
- uid: MLNet.Sweeper.LongValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  name: InRange(IParameterValue)
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_InRange_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.LongValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.LongValueGenerator.InRange(MLNet.Sweeper.IParameterValue)
  nameWithType: LongValueGenerator.InRange(IParameterValue)
- uid: MLNet.Sweeper.LongValueGenerator.InRange*
  name: InRange
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_InRange_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.InRange
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.InRange
  nameWithType: LongValueGenerator.InRange
- uid: MLNet.Sweeper.LongValueGenerator.Item(System.Int32)
  name: Item[Int32]
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_Item_System_Int32_
  commentId: P:MLNet.Sweeper.LongValueGenerator.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: MLNet.Sweeper.LongValueGenerator.Item[System.Int32]
  fullName.vb: MLNet.Sweeper.LongValueGenerator.Item(System.Int32)
  nameWithType: LongValueGenerator.Item[Int32]
  nameWithType.vb: LongValueGenerator.Item(Int32)
- uid: MLNet.Sweeper.LongValueGenerator.Item*
  name: Item
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_Item_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.Item
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.Item
  nameWithType: LongValueGenerator.Item
- uid: MLNet.Sweeper.LongValueGenerator.Name
  name: Name
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_Name
  commentId: P:MLNet.Sweeper.LongValueGenerator.Name
  fullName: MLNet.Sweeper.LongValueGenerator.Name
  nameWithType: LongValueGenerator.Name
- uid: MLNet.Sweeper.LongValueGenerator.Name*
  name: Name
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_Name_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.Name
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.Name
  nameWithType: LongValueGenerator.Name
- uid: MLNet.Sweeper.LongValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  name: NormalizeValue(IParameterValue)
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_NormalizeValue_MLNet_Sweeper_IParameterValue_
  commentId: M:MLNet.Sweeper.LongValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  fullName: MLNet.Sweeper.LongValueGenerator.NormalizeValue(MLNet.Sweeper.IParameterValue)
  nameWithType: LongValueGenerator.NormalizeValue(IParameterValue)
- uid: MLNet.Sweeper.LongValueGenerator.NormalizeValue*
  name: NormalizeValue
  href: api/MLNet.Sweeper.LongValueGenerator.html#MLNet_Sweeper_LongValueGenerator_NormalizeValue_
  commentId: Overload:MLNet.Sweeper.LongValueGenerator.NormalizeValue
  isSpec: "True"
  fullName: MLNet.Sweeper.LongValueGenerator.NormalizeValue
  nameWithType: LongValueGenerator.NormalizeValue
- uid: MLNet.Sweeper.LongValueGenerator.Option
  name: LongValueGenerator.Option
  href: api/MLNet.Sweeper.LongValueGenerator.Option.html
  commentId: T:MLNet.Sweeper.LongValueGenerator.Option
  fullName: MLNet.Sweeper.LongValueGenerator.Option
  nameWithType: LongValueGenerator.Option
- uid: MLNet.Sweeper.LongValueGenerator.Option.Max
  name: Max
  href: api/MLNet.Sweeper.LongValueGenerator.Option.html#MLNet_Sweeper_LongValueGenerator_Option_Max
  commentId: F:MLNet.Sweeper.LongValueGenerator.Option.Max
  fullName: MLNet.Sweeper.LongValueGenerator.Option.Max
  nameWithType: LongValueGenerator.Option.Max
- uid: MLNet.Sweeper.LongValueGenerator.Option.Min
  name: Min
  href: api/MLNet.Sweeper.LongValueGenerator.Option.html#MLNet_Sweeper_LongValueGenerator_Option_Min
  commentId: F:MLNet.Sweeper.LongValueGenerator.Option.Min
  fullName: MLNet.Sweeper.LongValueGenerator.Option.Min
  nameWithType: LongValueGenerator.Option.Min
- uid: MLNet.Sweeper.NumericValueGeneratorOptionBase
  name: NumericValueGeneratorOptionBase
  href: api/MLNet.Sweeper.NumericValueGeneratorOptionBase.html
  commentId: T:MLNet.Sweeper.NumericValueGeneratorOptionBase
  fullName: MLNet.Sweeper.NumericValueGeneratorOptionBase
  nameWithType: NumericValueGeneratorOptionBase
- uid: MLNet.Sweeper.NumericValueGeneratorOptionBase.LogBase
  name: LogBase
  href: api/MLNet.Sweeper.NumericValueGeneratorOptionBase.html#MLNet_Sweeper_NumericValueGeneratorOptionBase_LogBase
  commentId: F:MLNet.Sweeper.NumericValueGeneratorOptionBase.LogBase
  fullName: MLNet.Sweeper.NumericValueGeneratorOptionBase.LogBase
  nameWithType: NumericValueGeneratorOptionBase.LogBase
- uid: MLNet.Sweeper.NumericValueGeneratorOptionBase.Steps
  name: Steps
  href: api/MLNet.Sweeper.NumericValueGeneratorOptionBase.html#MLNet_Sweeper_NumericValueGeneratorOptionBase_Steps
  commentId: F:MLNet.Sweeper.NumericValueGeneratorOptionBase.Steps
  fullName: MLNet.Sweeper.NumericValueGeneratorOptionBase.Steps
  nameWithType: NumericValueGeneratorOptionBase.Steps
- uid: MLNet.Sweeper.ParameterSet
  name: ParameterSet
  href: api/MLNet.Sweeper.ParameterSet.html
  commentId: T:MLNet.Sweeper.ParameterSet
  fullName: MLNet.Sweeper.ParameterSet
  nameWithType: ParameterSet
- uid: MLNet.Sweeper.ParameterSet.#ctor(System.Collections.Generic.Dictionary{System.String,MLNet.Sweeper.IParameterValue},System.Int32)
  name: ParameterSet(Dictionary<String, IParameterValue>, Int32)
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet__ctor_System_Collections_Generic_Dictionary_System_String_MLNet_Sweeper_IParameterValue__System_Int32_
  commentId: M:MLNet.Sweeper.ParameterSet.#ctor(System.Collections.Generic.Dictionary{System.String,MLNet.Sweeper.IParameterValue},System.Int32)
  name.vb: ParameterSet(Dictionary(Of String, IParameterValue), Int32)
  fullName: MLNet.Sweeper.ParameterSet.ParameterSet(System.Collections.Generic.Dictionary<System.String, MLNet.Sweeper.IParameterValue>, System.Int32)
  fullName.vb: MLNet.Sweeper.ParameterSet.ParameterSet(System.Collections.Generic.Dictionary(Of System.String, MLNet.Sweeper.IParameterValue), System.Int32)
  nameWithType: ParameterSet.ParameterSet(Dictionary<String, IParameterValue>, Int32)
  nameWithType.vb: ParameterSet.ParameterSet(Dictionary(Of String, IParameterValue), Int32)
- uid: MLNet.Sweeper.ParameterSet.#ctor(System.Collections.Generic.IEnumerable{MLNet.Sweeper.IParameterValue})
  name: ParameterSet(IEnumerable<IParameterValue>)
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet__ctor_System_Collections_Generic_IEnumerable_MLNet_Sweeper_IParameterValue__
  commentId: M:MLNet.Sweeper.ParameterSet.#ctor(System.Collections.Generic.IEnumerable{MLNet.Sweeper.IParameterValue})
  name.vb: ParameterSet(IEnumerable(Of IParameterValue))
  fullName: MLNet.Sweeper.ParameterSet.ParameterSet(System.Collections.Generic.IEnumerable<MLNet.Sweeper.IParameterValue>)
  fullName.vb: MLNet.Sweeper.ParameterSet.ParameterSet(System.Collections.Generic.IEnumerable(Of MLNet.Sweeper.IParameterValue))
  nameWithType: ParameterSet.ParameterSet(IEnumerable<IParameterValue>)
  nameWithType.vb: ParameterSet.ParameterSet(IEnumerable(Of IParameterValue))
- uid: MLNet.Sweeper.ParameterSet.#ctor*
  name: ParameterSet
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet__ctor_
  commentId: Overload:MLNet.Sweeper.ParameterSet.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.ParameterSet
  nameWithType: ParameterSet.ParameterSet
- uid: MLNet.Sweeper.ParameterSet.Clone
  name: Clone()
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Clone
  commentId: M:MLNet.Sweeper.ParameterSet.Clone
  fullName: MLNet.Sweeper.ParameterSet.Clone()
  nameWithType: ParameterSet.Clone()
- uid: MLNet.Sweeper.ParameterSet.Clone*
  name: Clone
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Clone_
  commentId: Overload:MLNet.Sweeper.ParameterSet.Clone
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.Clone
  nameWithType: ParameterSet.Clone
- uid: MLNet.Sweeper.ParameterSet.Count
  name: Count
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Count
  commentId: P:MLNet.Sweeper.ParameterSet.Count
  fullName: MLNet.Sweeper.ParameterSet.Count
  nameWithType: ParameterSet.Count
- uid: MLNet.Sweeper.ParameterSet.Count*
  name: Count
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Count_
  commentId: Overload:MLNet.Sweeper.ParameterSet.Count
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.Count
  nameWithType: ParameterSet.Count
- uid: MLNet.Sweeper.ParameterSet.Equals(MLNet.Sweeper.ParameterSet)
  name: Equals(ParameterSet)
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Equals_MLNet_Sweeper_ParameterSet_
  commentId: M:MLNet.Sweeper.ParameterSet.Equals(MLNet.Sweeper.ParameterSet)
  fullName: MLNet.Sweeper.ParameterSet.Equals(MLNet.Sweeper.ParameterSet)
  nameWithType: ParameterSet.Equals(ParameterSet)
- uid: MLNet.Sweeper.ParameterSet.Equals*
  name: Equals
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Equals_
  commentId: Overload:MLNet.Sweeper.ParameterSet.Equals
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.Equals
  nameWithType: ParameterSet.Equals
- uid: MLNet.Sweeper.ParameterSet.GetEnumerator
  name: GetEnumerator()
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_GetEnumerator
  commentId: M:MLNet.Sweeper.ParameterSet.GetEnumerator
  fullName: MLNet.Sweeper.ParameterSet.GetEnumerator()
  nameWithType: ParameterSet.GetEnumerator()
- uid: MLNet.Sweeper.ParameterSet.GetEnumerator*
  name: GetEnumerator
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_GetEnumerator_
  commentId: Overload:MLNet.Sweeper.ParameterSet.GetEnumerator
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.GetEnumerator
  nameWithType: ParameterSet.GetEnumerator
- uid: MLNet.Sweeper.ParameterSet.GetHashCode
  name: GetHashCode()
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_GetHashCode
  commentId: M:MLNet.Sweeper.ParameterSet.GetHashCode
  fullName: MLNet.Sweeper.ParameterSet.GetHashCode()
  nameWithType: ParameterSet.GetHashCode()
- uid: MLNet.Sweeper.ParameterSet.GetHashCode*
  name: GetHashCode
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_GetHashCode_
  commentId: Overload:MLNet.Sweeper.ParameterSet.GetHashCode
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.GetHashCode
  nameWithType: ParameterSet.GetHashCode
- uid: MLNet.Sweeper.ParameterSet.Item(System.String)
  name: Item[String]
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Item_System_String_
  commentId: P:MLNet.Sweeper.ParameterSet.Item(System.String)
  name.vb: Item(String)
  fullName: MLNet.Sweeper.ParameterSet.Item[System.String]
  fullName.vb: MLNet.Sweeper.ParameterSet.Item(System.String)
  nameWithType: ParameterSet.Item[String]
  nameWithType.vb: ParameterSet.Item(String)
- uid: MLNet.Sweeper.ParameterSet.Item*
  name: Item
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_Item_
  commentId: Overload:MLNet.Sweeper.ParameterSet.Item
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.Item
  nameWithType: ParameterSet.Item
- uid: MLNet.Sweeper.ParameterSet.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_System_Collections_IEnumerable_GetEnumerator
  commentId: M:MLNet.Sweeper.ParameterSet.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: MLNet.Sweeper.ParameterSet.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ParameterSet.IEnumerable.GetEnumerator()
  nameWithType.vb: ParameterSet.System.Collections.IEnumerable.GetEnumerator()
- uid: MLNet.Sweeper.ParameterSet.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:MLNet.Sweeper.ParameterSet.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: MLNet.Sweeper.ParameterSet.System.Collections.IEnumerable.GetEnumerator
  nameWithType: ParameterSet.IEnumerable.GetEnumerator
  nameWithType.vb: ParameterSet.System.Collections.IEnumerable.GetEnumerator
- uid: MLNet.Sweeper.ParameterSet.ToString
  name: ToString()
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_ToString
  commentId: M:MLNet.Sweeper.ParameterSet.ToString
  fullName: MLNet.Sweeper.ParameterSet.ToString()
  nameWithType: ParameterSet.ToString()
- uid: MLNet.Sweeper.ParameterSet.ToString*
  name: ToString
  href: api/MLNet.Sweeper.ParameterSet.html#MLNet_Sweeper_ParameterSet_ToString_
  commentId: Overload:MLNet.Sweeper.ParameterSet.ToString
  isSpec: "True"
  fullName: MLNet.Sweeper.ParameterSet.ToString
  nameWithType: ParameterSet.ToString
- uid: MLNet.Sweeper.RandomGridSweeper
  name: RandomGridSweeper
  href: api/MLNet.Sweeper.RandomGridSweeper.html
  commentId: T:MLNet.Sweeper.RandomGridSweeper
  fullName: MLNet.Sweeper.RandomGridSweeper
  nameWithType: RandomGridSweeper
- uid: MLNet.Sweeper.RandomGridSweeper.#ctor(MLNet.Sweeper.RandomGridSweeper.Option)
  name: RandomGridSweeper(RandomGridSweeper.Option)
  href: api/MLNet.Sweeper.RandomGridSweeper.html#MLNet_Sweeper_RandomGridSweeper__ctor_MLNet_Sweeper_RandomGridSweeper_Option_
  commentId: M:MLNet.Sweeper.RandomGridSweeper.#ctor(MLNet.Sweeper.RandomGridSweeper.Option)
  fullName: MLNet.Sweeper.RandomGridSweeper.RandomGridSweeper(MLNet.Sweeper.RandomGridSweeper.Option)
  nameWithType: RandomGridSweeper.RandomGridSweeper(RandomGridSweeper.Option)
- uid: MLNet.Sweeper.RandomGridSweeper.#ctor*
  name: RandomGridSweeper
  href: api/MLNet.Sweeper.RandomGridSweeper.html#MLNet_Sweeper_RandomGridSweeper__ctor_
  commentId: Overload:MLNet.Sweeper.RandomGridSweeper.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.RandomGridSweeper.RandomGridSweeper
  nameWithType: RandomGridSweeper.RandomGridSweeper
- uid: MLNet.Sweeper.RandomGridSweeper.CreateParamSet
  name: CreateParamSet()
  href: api/MLNet.Sweeper.RandomGridSweeper.html#MLNet_Sweeper_RandomGridSweeper_CreateParamSet
  commentId: M:MLNet.Sweeper.RandomGridSweeper.CreateParamSet
  fullName: MLNet.Sweeper.RandomGridSweeper.CreateParamSet()
  nameWithType: RandomGridSweeper.CreateParamSet()
- uid: MLNet.Sweeper.RandomGridSweeper.CreateParamSet*
  name: CreateParamSet
  href: api/MLNet.Sweeper.RandomGridSweeper.html#MLNet_Sweeper_RandomGridSweeper_CreateParamSet_
  commentId: Overload:MLNet.Sweeper.RandomGridSweeper.CreateParamSet
  isSpec: "True"
  fullName: MLNet.Sweeper.RandomGridSweeper.CreateParamSet
  nameWithType: RandomGridSweeper.CreateParamSet
- uid: MLNet.Sweeper.RandomGridSweeper.Option
  name: RandomGridSweeper.Option
  href: api/MLNet.Sweeper.RandomGridSweeper.Option.html
  commentId: T:MLNet.Sweeper.RandomGridSweeper.Option
  fullName: MLNet.Sweeper.RandomGridSweeper.Option
  nameWithType: RandomGridSweeper.Option
- uid: MLNet.Sweeper.RunMetric
  name: RunMetric
  href: api/MLNet.Sweeper.RunMetric.html
  commentId: T:MLNet.Sweeper.RunMetric
  fullName: MLNet.Sweeper.RunMetric
  nameWithType: RunMetric
- uid: MLNet.Sweeper.RunMetric.#ctor(System.Single,System.Collections.Generic.IEnumerable{System.Single})
  name: RunMetric(Single, IEnumerable<Single>)
  href: api/MLNet.Sweeper.RunMetric.html#MLNet_Sweeper_RunMetric__ctor_System_Single_System_Collections_Generic_IEnumerable_System_Single__
  commentId: M:MLNet.Sweeper.RunMetric.#ctor(System.Single,System.Collections.Generic.IEnumerable{System.Single})
  name.vb: RunMetric(Single, IEnumerable(Of Single))
  fullName: MLNet.Sweeper.RunMetric.RunMetric(System.Single, System.Collections.Generic.IEnumerable<System.Single>)
  fullName.vb: MLNet.Sweeper.RunMetric.RunMetric(System.Single, System.Collections.Generic.IEnumerable(Of System.Single))
  nameWithType: RunMetric.RunMetric(Single, IEnumerable<Single>)
  nameWithType.vb: RunMetric.RunMetric(Single, IEnumerable(Of Single))
- uid: MLNet.Sweeper.RunMetric.#ctor*
  name: RunMetric
  href: api/MLNet.Sweeper.RunMetric.html#MLNet_Sweeper_RunMetric__ctor_
  commentId: Overload:MLNet.Sweeper.RunMetric.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.RunMetric.RunMetric
  nameWithType: RunMetric.RunMetric
- uid: MLNet.Sweeper.RunMetric.GetMetricDistribution
  name: GetMetricDistribution()
  href: api/MLNet.Sweeper.RunMetric.html#MLNet_Sweeper_RunMetric_GetMetricDistribution
  commentId: M:MLNet.Sweeper.RunMetric.GetMetricDistribution
  fullName: MLNet.Sweeper.RunMetric.GetMetricDistribution()
  nameWithType: RunMetric.GetMetricDistribution()
- uid: MLNet.Sweeper.RunMetric.GetMetricDistribution*
  name: GetMetricDistribution
  href: api/MLNet.Sweeper.RunMetric.html#MLNet_Sweeper_RunMetric_GetMetricDistribution_
  commentId: Overload:MLNet.Sweeper.RunMetric.GetMetricDistribution
  isSpec: "True"
  fullName: MLNet.Sweeper.RunMetric.GetMetricDistribution
  nameWithType: RunMetric.GetMetricDistribution
- uid: MLNet.Sweeper.RunMetric.PrimaryMetric
  name: PrimaryMetric
  href: api/MLNet.Sweeper.RunMetric.html#MLNet_Sweeper_RunMetric_PrimaryMetric
  commentId: P:MLNet.Sweeper.RunMetric.PrimaryMetric
  fullName: MLNet.Sweeper.RunMetric.PrimaryMetric
  nameWithType: RunMetric.PrimaryMetric
- uid: MLNet.Sweeper.RunMetric.PrimaryMetric*
  name: PrimaryMetric
  href: api/MLNet.Sweeper.RunMetric.html#MLNet_Sweeper_RunMetric_PrimaryMetric_
  commentId: Overload:MLNet.Sweeper.RunMetric.PrimaryMetric
  isSpec: "True"
  fullName: MLNet.Sweeper.RunMetric.PrimaryMetric
  nameWithType: RunMetric.PrimaryMetric
- uid: MLNet.Sweeper.RunResult
  name: RunResult
  href: api/MLNet.Sweeper.RunResult.html
  commentId: T:MLNet.Sweeper.RunResult
  fullName: MLNet.Sweeper.RunResult
  nameWithType: RunResult
- uid: MLNet.Sweeper.RunResult.#ctor(MLNet.Sweeper.ParameterSet)
  name: RunResult(ParameterSet)
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult__ctor_MLNet_Sweeper_ParameterSet_
  commentId: M:MLNet.Sweeper.RunResult.#ctor(MLNet.Sweeper.ParameterSet)
  fullName: MLNet.Sweeper.RunResult.RunResult(MLNet.Sweeper.ParameterSet)
  nameWithType: RunResult.RunResult(ParameterSet)
- uid: MLNet.Sweeper.RunResult.#ctor(MLNet.Sweeper.ParameterSet,System.Double,System.Boolean)
  name: RunResult(ParameterSet, Double, Boolean)
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult__ctor_MLNet_Sweeper_ParameterSet_System_Double_System_Boolean_
  commentId: M:MLNet.Sweeper.RunResult.#ctor(MLNet.Sweeper.ParameterSet,System.Double,System.Boolean)
  fullName: MLNet.Sweeper.RunResult.RunResult(MLNet.Sweeper.ParameterSet, System.Double, System.Boolean)
  nameWithType: RunResult.RunResult(ParameterSet, Double, Boolean)
- uid: MLNet.Sweeper.RunResult.#ctor*
  name: RunResult
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult__ctor_
  commentId: Overload:MLNet.Sweeper.RunResult.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.RunResult.RunResult
  nameWithType: RunResult.RunResult
- uid: MLNet.Sweeper.RunResult.CompareTo(MLNet.Sweeper.IRunResult)
  name: CompareTo(IRunResult)
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_CompareTo_MLNet_Sweeper_IRunResult_
  commentId: M:MLNet.Sweeper.RunResult.CompareTo(MLNet.Sweeper.IRunResult)
  fullName: MLNet.Sweeper.RunResult.CompareTo(MLNet.Sweeper.IRunResult)
  nameWithType: RunResult.CompareTo(IRunResult)
- uid: MLNet.Sweeper.RunResult.CompareTo*
  name: CompareTo
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_CompareTo_
  commentId: Overload:MLNet.Sweeper.RunResult.CompareTo
  isSpec: "True"
  fullName: MLNet.Sweeper.RunResult.CompareTo
  nameWithType: RunResult.CompareTo
- uid: MLNet.Sweeper.RunResult.HasMetricValue
  name: HasMetricValue
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_HasMetricValue
  commentId: P:MLNet.Sweeper.RunResult.HasMetricValue
  fullName: MLNet.Sweeper.RunResult.HasMetricValue
  nameWithType: RunResult.HasMetricValue
- uid: MLNet.Sweeper.RunResult.HasMetricValue*
  name: HasMetricValue
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_HasMetricValue_
  commentId: Overload:MLNet.Sweeper.RunResult.HasMetricValue
  isSpec: "True"
  fullName: MLNet.Sweeper.RunResult.HasMetricValue
  nameWithType: RunResult.HasMetricValue
- uid: MLNet.Sweeper.RunResult.IsMetricMaximizing
  name: IsMetricMaximizing
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_IsMetricMaximizing
  commentId: P:MLNet.Sweeper.RunResult.IsMetricMaximizing
  fullName: MLNet.Sweeper.RunResult.IsMetricMaximizing
  nameWithType: RunResult.IsMetricMaximizing
- uid: MLNet.Sweeper.RunResult.IsMetricMaximizing*
  name: IsMetricMaximizing
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_IsMetricMaximizing_
  commentId: Overload:MLNet.Sweeper.RunResult.IsMetricMaximizing
  isSpec: "True"
  fullName: MLNet.Sweeper.RunResult.IsMetricMaximizing
  nameWithType: RunResult.IsMetricMaximizing
- uid: MLNet.Sweeper.RunResult.MetricValue
  name: MetricValue
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_MetricValue
  commentId: P:MLNet.Sweeper.RunResult.MetricValue
  fullName: MLNet.Sweeper.RunResult.MetricValue
  nameWithType: RunResult.MetricValue
- uid: MLNet.Sweeper.RunResult.MetricValue*
  name: MetricValue
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_MetricValue_
  commentId: Overload:MLNet.Sweeper.RunResult.MetricValue
  isSpec: "True"
  fullName: MLNet.Sweeper.RunResult.MetricValue
  nameWithType: RunResult.MetricValue
- uid: MLNet.Sweeper.RunResult.MLNet#Sweeper#IRunResult#MetricValue
  name: IRunResult.MetricValue
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_MLNet_Sweeper_IRunResult_MetricValue
  commentId: P:MLNet.Sweeper.RunResult.MLNet#Sweeper#IRunResult#MetricValue
  name.vb: MLNet.Sweeper.IRunResult.MetricValue
  fullName: MLNet.Sweeper.RunResult.MLNet.Sweeper.IRunResult.MetricValue
  nameWithType: RunResult.IRunResult.MetricValue
  nameWithType.vb: RunResult.MLNet.Sweeper.IRunResult.MetricValue
- uid: MLNet.Sweeper.RunResult.MLNet#Sweeper#IRunResult#MetricValue*
  name: IRunResult.MetricValue
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_MLNet_Sweeper_IRunResult_MetricValue_
  commentId: Overload:MLNet.Sweeper.RunResult.MLNet#Sweeper#IRunResult#MetricValue
  isSpec: "True"
  name.vb: MLNet.Sweeper.IRunResult.MetricValue
  fullName: MLNet.Sweeper.RunResult.MLNet.Sweeper.IRunResult.MetricValue
  nameWithType: RunResult.IRunResult.MetricValue
  nameWithType.vb: RunResult.MLNet.Sweeper.IRunResult.MetricValue
- uid: MLNet.Sweeper.RunResult.ParameterSet
  name: ParameterSet
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_ParameterSet
  commentId: P:MLNet.Sweeper.RunResult.ParameterSet
  fullName: MLNet.Sweeper.RunResult.ParameterSet
  nameWithType: RunResult.ParameterSet
- uid: MLNet.Sweeper.RunResult.ParameterSet*
  name: ParameterSet
  href: api/MLNet.Sweeper.RunResult.html#MLNet_Sweeper_RunResult_ParameterSet_
  commentId: Overload:MLNet.Sweeper.RunResult.ParameterSet
  isSpec: "True"
  fullName: MLNet.Sweeper.RunResult.ParameterSet
  nameWithType: RunResult.ParameterSet
- uid: MLNet.Sweeper.Sweeper
  name: MLNet.Sweeper.Sweeper
  href: api/MLNet.Sweeper.Sweeper.html
  commentId: N:MLNet.Sweeper.Sweeper
  fullName: MLNet.Sweeper.Sweeper
  nameWithType: MLNet.Sweeper.Sweeper
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper
  name: GaussProcessSweeper
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html
  commentId: T:MLNet.Sweeper.Sweeper.GaussProcessSweeper
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper
  nameWithType: GaussProcessSweeper
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.#ctor(MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option)
  name: GaussProcessSweeper(GaussProcessSweeper.Option)
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper__ctor_MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_
  commentId: M:MLNet.Sweeper.Sweeper.GaussProcessSweeper.#ctor(MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option)
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.GaussProcessSweeper(MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option)
  nameWithType: GaussProcessSweeper.GaussProcessSweeper(GaussProcessSweeper.Option)
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.#ctor*
  name: GaussProcessSweeper
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper__ctor_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.GaussProcessSweeper
  nameWithType: GaussProcessSweeper.GaussProcessSweeper
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.AddRunHistory(MLNet.Sweeper.IRunResult)
  name: AddRunHistory(IRunResult)
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_AddRunHistory_MLNet_Sweeper_IRunResult_
  commentId: M:MLNet.Sweeper.Sweeper.GaussProcessSweeper.AddRunHistory(MLNet.Sweeper.IRunResult)
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.AddRunHistory(MLNet.Sweeper.IRunResult)
  nameWithType: GaussProcessSweeper.AddRunHistory(IRunResult)
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.AddRunHistory*
  name: AddRunHistory
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_AddRunHistory_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.AddRunHistory
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.AddRunHistory
  nameWithType: GaussProcessSweeper.AddRunHistory
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Current
  name: Current
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Current
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Current
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Current
  nameWithType: GaussProcessSweeper.Current
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Current*
  name: Current
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Current_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Current
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Current
  nameWithType: GaussProcessSweeper.Current
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.EI(Numpy.NDarray,Numpy.NDarray,Numpy.NDarray,System.Double)
  name: EI(NDarray, NDarray, NDarray, Double)
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_EI_Numpy_NDarray_Numpy_NDarray_Numpy_NDarray_System_Double_
  commentId: M:MLNet.Sweeper.Sweeper.GaussProcessSweeper.EI(Numpy.NDarray,Numpy.NDarray,Numpy.NDarray,System.Double)
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.EI(Numpy.NDarray, Numpy.NDarray, Numpy.NDarray, System.Double)
  nameWithType: GaussProcessSweeper.EI(NDarray, NDarray, NDarray, Double)
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.EI*
  name: EI
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_EI_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.EI
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.EI
  nameWithType: GaussProcessSweeper.EI
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option
  name: GaussProcessSweeper.Option
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html
  commentId: T:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option
  nameWithType: GaussProcessSweeper.Option
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.InitialPopulation
  name: InitialPopulation
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_InitialPopulation
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.InitialPopulation
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.InitialPopulation
  nameWithType: GaussProcessSweeper.Option.InitialPopulation
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.InitialPopulation*
  name: InitialPopulation
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_InitialPopulation_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.InitialPopulation
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.InitialPopulation
  nameWithType: GaussProcessSweeper.Option.InitialPopulation
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.KBestParents
  name: KBestParents
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_KBestParents
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.KBestParents
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.KBestParents
  nameWithType: GaussProcessSweeper.Option.KBestParents
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.KBestParents*
  name: KBestParents
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_KBestParents_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.KBestParents
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.KBestParents
  nameWithType: GaussProcessSweeper.Option.KBestParents
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.L
  name: L
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_L
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.L
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.L
  nameWithType: GaussProcessSweeper.Option.L
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.L*
  name: L
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_L_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.L
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.L
  nameWithType: GaussProcessSweeper.Option.L
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Noise
  name: Noise
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_Noise
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Noise
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Noise
  nameWithType: GaussProcessSweeper.Option.Noise
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Noise*
  name: Noise
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_Noise_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Noise
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Noise
  nameWithType: GaussProcessSweeper.Option.Noise
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Sigma
  name: Sigma
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_Sigma
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Sigma
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Sigma
  nameWithType: GaussProcessSweeper.Option.Sigma
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Sigma*
  name: Sigma
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_Option_Sigma_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Sigma
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.Option.Sigma
  nameWithType: GaussProcessSweeper.Option.Sigma
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{MLNet.Sweeper.IRunResult})
  name: ProposeSweeps(Int32, IEnumerable<IRunResult>)
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_ProposeSweeps_System_Int32_System_Collections_Generic_IEnumerable_MLNet_Sweeper_IRunResult__
  commentId: M:MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{MLNet.Sweeper.IRunResult})
  name.vb: ProposeSweeps(Int32, IEnumerable(Of IRunResult))
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps(System.Int32, System.Collections.Generic.IEnumerable<MLNet.Sweeper.IRunResult>)
  fullName.vb: MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps(System.Int32, System.Collections.Generic.IEnumerable(Of MLNet.Sweeper.IRunResult))
  nameWithType: GaussProcessSweeper.ProposeSweeps(Int32, IEnumerable<IRunResult>)
  nameWithType.vb: GaussProcessSweeper.ProposeSweeps(Int32, IEnumerable(Of IRunResult))
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps*
  name: ProposeSweeps
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_ProposeSweeps_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.ProposeSweeps
  nameWithType: GaussProcessSweeper.ProposeSweeps
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.SweepableParamaters
  name: SweepableParamaters
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_SweepableParamaters
  commentId: P:MLNet.Sweeper.Sweeper.GaussProcessSweeper.SweepableParamaters
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.SweepableParamaters
  nameWithType: GaussProcessSweeper.SweepableParamaters
- uid: MLNet.Sweeper.Sweeper.GaussProcessSweeper.SweepableParamaters*
  name: SweepableParamaters
  href: api/MLNet.Sweeper.Sweeper.GaussProcessSweeper.html#MLNet_Sweeper_Sweeper_GaussProcessSweeper_SweepableParamaters_
  commentId: Overload:MLNet.Sweeper.Sweeper.GaussProcessSweeper.SweepableParamaters
  isSpec: "True"
  fullName: MLNet.Sweeper.Sweeper.GaussProcessSweeper.SweepableParamaters
  nameWithType: GaussProcessSweeper.SweepableParamaters
- uid: MLNet.Sweeper.SweeperBase
  name: SweeperBase
  href: api/MLNet.Sweeper.SweeperBase.html
  commentId: T:MLNet.Sweeper.SweeperBase
  fullName: MLNet.Sweeper.SweeperBase
  nameWithType: SweeperBase
- uid: MLNet.Sweeper.SweeperBase.#ctor(MLNet.Sweeper.SweeperOptionBase,MLNet.Sweeper.IValueGenerator[],System.String)
  name: SweeperBase(SweeperOptionBase, IValueGenerator[], String)
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase__ctor_MLNet_Sweeper_SweeperOptionBase_MLNet_Sweeper_IValueGenerator___System_String_
  commentId: M:MLNet.Sweeper.SweeperBase.#ctor(MLNet.Sweeper.SweeperOptionBase,MLNet.Sweeper.IValueGenerator[],System.String)
  name.vb: SweeperBase(SweeperOptionBase, IValueGenerator(), String)
  fullName: MLNet.Sweeper.SweeperBase.SweeperBase(MLNet.Sweeper.SweeperOptionBase, MLNet.Sweeper.IValueGenerator[], System.String)
  fullName.vb: MLNet.Sweeper.SweeperBase.SweeperBase(MLNet.Sweeper.SweeperOptionBase, MLNet.Sweeper.IValueGenerator(), System.String)
  nameWithType: SweeperBase.SweeperBase(SweeperOptionBase, IValueGenerator[], String)
  nameWithType.vb: SweeperBase.SweeperBase(SweeperOptionBase, IValueGenerator(), String)
- uid: MLNet.Sweeper.SweeperBase.#ctor(MLNet.Sweeper.SweeperOptionBase,System.String)
  name: SweeperBase(SweeperOptionBase, String)
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase__ctor_MLNet_Sweeper_SweeperOptionBase_System_String_
  commentId: M:MLNet.Sweeper.SweeperBase.#ctor(MLNet.Sweeper.SweeperOptionBase,System.String)
  fullName: MLNet.Sweeper.SweeperBase.SweeperBase(MLNet.Sweeper.SweeperOptionBase, System.String)
  nameWithType: SweeperBase.SweeperBase(SweeperOptionBase, String)
- uid: MLNet.Sweeper.SweeperBase.#ctor*
  name: SweeperBase
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase__ctor_
  commentId: Overload:MLNet.Sweeper.SweeperBase.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.SweeperBase
  nameWithType: SweeperBase.SweeperBase
- uid: MLNet.Sweeper.SweeperBase._history
  name: _history
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase__history
  commentId: F:MLNet.Sweeper.SweeperBase._history
  fullName: MLNet.Sweeper.SweeperBase._history
  nameWithType: SweeperBase._history
- uid: MLNet.Sweeper.SweeperBase.AddRunHistory(MLNet.Sweeper.IRunResult)
  name: AddRunHistory(IRunResult)
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_AddRunHistory_MLNet_Sweeper_IRunResult_
  commentId: M:MLNet.Sweeper.SweeperBase.AddRunHistory(MLNet.Sweeper.IRunResult)
  fullName: MLNet.Sweeper.SweeperBase.AddRunHistory(MLNet.Sweeper.IRunResult)
  nameWithType: SweeperBase.AddRunHistory(IRunResult)
- uid: MLNet.Sweeper.SweeperBase.AddRunHistory*
  name: AddRunHistory
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_AddRunHistory_
  commentId: Overload:MLNet.Sweeper.SweeperBase.AddRunHistory
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.AddRunHistory
  nameWithType: SweeperBase.AddRunHistory
- uid: MLNet.Sweeper.SweeperBase.AlreadyGenerated(MLNet.Sweeper.ParameterSet,System.Collections.Generic.IEnumerable{MLNet.Sweeper.ParameterSet})
  name: AlreadyGenerated(ParameterSet, IEnumerable<ParameterSet>)
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_AlreadyGenerated_MLNet_Sweeper_ParameterSet_System_Collections_Generic_IEnumerable_MLNet_Sweeper_ParameterSet__
  commentId: M:MLNet.Sweeper.SweeperBase.AlreadyGenerated(MLNet.Sweeper.ParameterSet,System.Collections.Generic.IEnumerable{MLNet.Sweeper.ParameterSet})
  name.vb: AlreadyGenerated(ParameterSet, IEnumerable(Of ParameterSet))
  fullName: MLNet.Sweeper.SweeperBase.AlreadyGenerated(MLNet.Sweeper.ParameterSet, System.Collections.Generic.IEnumerable<MLNet.Sweeper.ParameterSet>)
  fullName.vb: MLNet.Sweeper.SweeperBase.AlreadyGenerated(MLNet.Sweeper.ParameterSet, System.Collections.Generic.IEnumerable(Of MLNet.Sweeper.ParameterSet))
  nameWithType: SweeperBase.AlreadyGenerated(ParameterSet, IEnumerable<ParameterSet>)
  nameWithType.vb: SweeperBase.AlreadyGenerated(ParameterSet, IEnumerable(Of ParameterSet))
- uid: MLNet.Sweeper.SweeperBase.AlreadyGenerated*
  name: AlreadyGenerated
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_AlreadyGenerated_
  commentId: Overload:MLNet.Sweeper.SweeperBase.AlreadyGenerated
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.AlreadyGenerated
  nameWithType: SweeperBase.AlreadyGenerated
- uid: MLNet.Sweeper.SweeperBase.CreateParamSet
  name: CreateParamSet()
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_CreateParamSet
  commentId: M:MLNet.Sweeper.SweeperBase.CreateParamSet
  fullName: MLNet.Sweeper.SweeperBase.CreateParamSet()
  nameWithType: SweeperBase.CreateParamSet()
- uid: MLNet.Sweeper.SweeperBase.CreateParamSet*
  name: CreateParamSet
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_CreateParamSet_
  commentId: Overload:MLNet.Sweeper.SweeperBase.CreateParamSet
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.CreateParamSet
  nameWithType: SweeperBase.CreateParamSet
- uid: MLNet.Sweeper.SweeperBase.Current
  name: Current
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_Current
  commentId: P:MLNet.Sweeper.SweeperBase.Current
  fullName: MLNet.Sweeper.SweeperBase.Current
  nameWithType: SweeperBase.Current
- uid: MLNet.Sweeper.SweeperBase.Current*
  name: Current
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_Current_
  commentId: Overload:MLNet.Sweeper.SweeperBase.Current
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.Current
  nameWithType: SweeperBase.Current
- uid: MLNet.Sweeper.SweeperBase.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{MLNet.Sweeper.IRunResult})
  name: ProposeSweeps(Int32, IEnumerable<IRunResult>)
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_ProposeSweeps_System_Int32_System_Collections_Generic_IEnumerable_MLNet_Sweeper_IRunResult__
  commentId: M:MLNet.Sweeper.SweeperBase.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{MLNet.Sweeper.IRunResult})
  name.vb: ProposeSweeps(Int32, IEnumerable(Of IRunResult))
  fullName: MLNet.Sweeper.SweeperBase.ProposeSweeps(System.Int32, System.Collections.Generic.IEnumerable<MLNet.Sweeper.IRunResult>)
  fullName.vb: MLNet.Sweeper.SweeperBase.ProposeSweeps(System.Int32, System.Collections.Generic.IEnumerable(Of MLNet.Sweeper.IRunResult))
  nameWithType: SweeperBase.ProposeSweeps(Int32, IEnumerable<IRunResult>)
  nameWithType.vb: SweeperBase.ProposeSweeps(Int32, IEnumerable(Of IRunResult))
- uid: MLNet.Sweeper.SweeperBase.ProposeSweeps*
  name: ProposeSweeps
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_ProposeSweeps_
  commentId: Overload:MLNet.Sweeper.SweeperBase.ProposeSweeps
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.ProposeSweeps
  nameWithType: SweeperBase.ProposeSweeps
- uid: MLNet.Sweeper.SweeperBase.SweepableParamaters
  name: SweepableParamaters
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_SweepableParamaters
  commentId: P:MLNet.Sweeper.SweeperBase.SweepableParamaters
  fullName: MLNet.Sweeper.SweeperBase.SweepableParamaters
  nameWithType: SweeperBase.SweepableParamaters
- uid: MLNet.Sweeper.SweeperBase.SweepableParamaters*
  name: SweepableParamaters
  href: api/MLNet.Sweeper.SweeperBase.html#MLNet_Sweeper_SweeperBase_SweepableParamaters_
  commentId: Overload:MLNet.Sweeper.SweeperBase.SweepableParamaters
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperBase.SweepableParamaters
  nameWithType: SweeperBase.SweepableParamaters
- uid: MLNet.Sweeper.SweeperOptionBase
  name: SweeperOptionBase
  href: api/MLNet.Sweeper.SweeperOptionBase.html
  commentId: T:MLNet.Sweeper.SweeperOptionBase
  fullName: MLNet.Sweeper.SweeperOptionBase
  nameWithType: SweeperOptionBase
- uid: MLNet.Sweeper.SweeperOptionBase.Retry
  name: Retry
  href: api/MLNet.Sweeper.SweeperOptionBase.html#MLNet_Sweeper_SweeperOptionBase_Retry
  commentId: F:MLNet.Sweeper.SweeperOptionBase.Retry
  fullName: MLNet.Sweeper.SweeperOptionBase.Retry
  nameWithType: SweeperOptionBase.Retry
- uid: MLNet.Sweeper.SweeperProbabilityUtils
  name: SweeperProbabilityUtils
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html
  commentId: T:MLNet.Sweeper.SweeperProbabilityUtils
  fullName: MLNet.Sweeper.SweeperProbabilityUtils
  nameWithType: SweeperProbabilityUtils
- uid: MLNet.Sweeper.SweeperProbabilityUtils.#ctor(Microsoft.ML.Runtime.IHost)
  name: SweeperProbabilityUtils(IHost)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils__ctor_Microsoft_ML_Runtime_IHost_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.#ctor(Microsoft.ML.Runtime.IHost)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.SweeperProbabilityUtils(Microsoft.ML.Runtime.IHost)
  nameWithType: SweeperProbabilityUtils.SweeperProbabilityUtils(IHost)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.#ctor*
  name: SweeperProbabilityUtils
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils__ctor_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.SweeperProbabilityUtils
  nameWithType: SweeperProbabilityUtils.SweeperProbabilityUtils
- uid: MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet(Microsoft.ML.Runtime.IHost,MLNet.Sweeper.IValueGenerator[],System.Single[],System.Boolean)
  name: FloatArrayAsParameterSet(IHost, IValueGenerator[], Single[], Boolean)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_FloatArrayAsParameterSet_Microsoft_ML_Runtime_IHost_MLNet_Sweeper_IValueGenerator___System_Single___System_Boolean_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet(Microsoft.ML.Runtime.IHost,MLNet.Sweeper.IValueGenerator[],System.Single[],System.Boolean)
  name.vb: FloatArrayAsParameterSet(IHost, IValueGenerator(), Single(), Boolean)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet(Microsoft.ML.Runtime.IHost, MLNet.Sweeper.IValueGenerator[], System.Single[], System.Boolean)
  fullName.vb: MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet(Microsoft.ML.Runtime.IHost, MLNet.Sweeper.IValueGenerator(), System.Single(), System.Boolean)
  nameWithType: SweeperProbabilityUtils.FloatArrayAsParameterSet(IHost, IValueGenerator[], Single[], Boolean)
  nameWithType.vb: SweeperProbabilityUtils.FloatArrayAsParameterSet(IHost, IValueGenerator(), Single(), Boolean)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet*
  name: FloatArrayAsParameterSet
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_FloatArrayAsParameterSet_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.FloatArrayAsParameterSet
  nameWithType: SweeperProbabilityUtils.FloatArrayAsParameterSet
- uid: MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize(System.Double[])
  name: InverseNormalize(Double[])
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_InverseNormalize_System_Double___
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize(System.Double[])
  name.vb: InverseNormalize(Double())
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize(System.Double[])
  fullName.vb: MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize(System.Double())
  nameWithType: SweeperProbabilityUtils.InverseNormalize(Double[])
  nameWithType.vb: SweeperProbabilityUtils.InverseNormalize(Double())
- uid: MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize*
  name: InverseNormalize
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_InverseNormalize_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.InverseNormalize
  nameWithType: SweeperProbabilityUtils.InverseNormalize
- uid: MLNet.Sweeper.SweeperProbabilityUtils.NormalCdf(System.Double,System.Double,System.Double)
  name: NormalCdf(Double, Double, Double)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_NormalCdf_System_Double_System_Double_System_Double_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.NormalCdf(System.Double,System.Double,System.Double)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.NormalCdf(System.Double, System.Double, System.Double)
  nameWithType: SweeperProbabilityUtils.NormalCdf(Double, Double, Double)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.NormalCdf*
  name: NormalCdf
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_NormalCdf_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.NormalCdf
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.NormalCdf
  nameWithType: SweeperProbabilityUtils.NormalCdf
- uid: MLNet.Sweeper.SweeperProbabilityUtils.Normalize(System.Double[])
  name: Normalize(Double[])
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_Normalize_System_Double___
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.Normalize(System.Double[])
  name.vb: Normalize(Double())
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.Normalize(System.Double[])
  fullName.vb: MLNet.Sweeper.SweeperProbabilityUtils.Normalize(System.Double())
  nameWithType: SweeperProbabilityUtils.Normalize(Double[])
  nameWithType.vb: SweeperProbabilityUtils.Normalize(Double())
- uid: MLNet.Sweeper.SweeperProbabilityUtils.Normalize*
  name: Normalize
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_Normalize_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.Normalize
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.Normalize
  nameWithType: SweeperProbabilityUtils.Normalize
- uid: MLNet.Sweeper.SweeperProbabilityUtils.NormalPdf(System.Double,System.Double,System.Double)
  name: NormalPdf(Double, Double, Double)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_NormalPdf_System_Double_System_Double_System_Double_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.NormalPdf(System.Double,System.Double,System.Double)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.NormalPdf(System.Double, System.Double, System.Double)
  nameWithType: SweeperProbabilityUtils.NormalPdf(Double, Double, Double)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.NormalPdf*
  name: NormalPdf
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_NormalPdf_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.NormalPdf
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.NormalPdf
  nameWithType: SweeperProbabilityUtils.NormalPdf
- uid: MLNet.Sweeper.SweeperProbabilityUtils.NormalRVs(System.Int32,System.Double,System.Double)
  name: NormalRVs(Int32, Double, Double)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_NormalRVs_System_Int32_System_Double_System_Double_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.NormalRVs(System.Int32,System.Double,System.Double)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.NormalRVs(System.Int32, System.Double, System.Double)
  nameWithType: SweeperProbabilityUtils.NormalRVs(Int32, Double, Double)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.NormalRVs*
  name: NormalRVs
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_NormalRVs_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.NormalRVs
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.NormalRVs
  nameWithType: SweeperProbabilityUtils.NormalRVs
- uid: MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray(Microsoft.ML.Runtime.IHost,MLNet.Sweeper.IValueGenerator[],MLNet.Sweeper.ParameterSet,System.Boolean)
  name: ParameterSetAsFloatArray(IHost, IValueGenerator[], ParameterSet, Boolean)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_ParameterSetAsFloatArray_Microsoft_ML_Runtime_IHost_MLNet_Sweeper_IValueGenerator___MLNet_Sweeper_ParameterSet_System_Boolean_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray(Microsoft.ML.Runtime.IHost,MLNet.Sweeper.IValueGenerator[],MLNet.Sweeper.ParameterSet,System.Boolean)
  name.vb: ParameterSetAsFloatArray(IHost, IValueGenerator(), ParameterSet, Boolean)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray(Microsoft.ML.Runtime.IHost, MLNet.Sweeper.IValueGenerator[], MLNet.Sweeper.ParameterSet, System.Boolean)
  fullName.vb: MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray(Microsoft.ML.Runtime.IHost, MLNet.Sweeper.IValueGenerator(), MLNet.Sweeper.ParameterSet, System.Boolean)
  nameWithType: SweeperProbabilityUtils.ParameterSetAsFloatArray(IHost, IValueGenerator[], ParameterSet, Boolean)
  nameWithType.vb: SweeperProbabilityUtils.ParameterSetAsFloatArray(IHost, IValueGenerator(), ParameterSet, Boolean)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray*
  name: ParameterSetAsFloatArray
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_ParameterSetAsFloatArray_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.ParameterSetAsFloatArray
  nameWithType: SweeperProbabilityUtils.ParameterSetAsFloatArray
- uid: MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution(System.Int32,System.Double[])
  name: SampleCategoricalDistribution(Int32, Double[])
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_SampleCategoricalDistribution_System_Int32_System_Double___
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution(System.Int32,System.Double[])
  name.vb: SampleCategoricalDistribution(Int32, Double())
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution(System.Int32, System.Double[])
  fullName.vb: MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution(System.Int32, System.Double())
  nameWithType: SweeperProbabilityUtils.SampleCategoricalDistribution(Int32, Double[])
  nameWithType.vb: SweeperProbabilityUtils.SampleCategoricalDistribution(Int32, Double())
- uid: MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution*
  name: SampleCategoricalDistribution
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_SampleCategoricalDistribution_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.SampleCategoricalDistribution
  nameWithType: SweeperProbabilityUtils.SampleCategoricalDistribution
- uid: MLNet.Sweeper.SweeperProbabilityUtils.SampleUniform
  name: SampleUniform()
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_SampleUniform
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.SampleUniform
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.SampleUniform()
  nameWithType: SweeperProbabilityUtils.SampleUniform()
- uid: MLNet.Sweeper.SweeperProbabilityUtils.SampleUniform*
  name: SampleUniform
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_SampleUniform_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.SampleUniform
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.SampleUniform
  nameWithType: SweeperProbabilityUtils.SampleUniform
- uid: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalCdf(System.Double)
  name: StdNormalCdf(Double)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_StdNormalCdf_System_Double_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.StdNormalCdf(System.Double)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalCdf(System.Double)
  nameWithType: SweeperProbabilityUtils.StdNormalCdf(Double)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalCdf*
  name: StdNormalCdf
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_StdNormalCdf_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.StdNormalCdf
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalCdf
  nameWithType: SweeperProbabilityUtils.StdNormalCdf
- uid: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalPdf(System.Double)
  name: StdNormalPdf(Double)
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_StdNormalPdf_System_Double_
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.StdNormalPdf(System.Double)
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalPdf(System.Double)
  nameWithType: SweeperProbabilityUtils.StdNormalPdf(Double)
- uid: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalPdf*
  name: StdNormalPdf
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_StdNormalPdf_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.StdNormalPdf
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.StdNormalPdf
  nameWithType: SweeperProbabilityUtils.StdNormalPdf
- uid: MLNet.Sweeper.SweeperProbabilityUtils.Sum(System.Double[])
  name: Sum(Double[])
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_Sum_System_Double___
  commentId: M:MLNet.Sweeper.SweeperProbabilityUtils.Sum(System.Double[])
  name.vb: Sum(Double())
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.Sum(System.Double[])
  fullName.vb: MLNet.Sweeper.SweeperProbabilityUtils.Sum(System.Double())
  nameWithType: SweeperProbabilityUtils.Sum(Double[])
  nameWithType.vb: SweeperProbabilityUtils.Sum(Double())
- uid: MLNet.Sweeper.SweeperProbabilityUtils.Sum*
  name: Sum
  href: api/MLNet.Sweeper.SweeperProbabilityUtils.html#MLNet_Sweeper_SweeperProbabilityUtils_Sum_
  commentId: Overload:MLNet.Sweeper.SweeperProbabilityUtils.Sum
  isSpec: "True"
  fullName: MLNet.Sweeper.SweeperProbabilityUtils.Sum
  nameWithType: SweeperProbabilityUtils.Sum
- uid: MLNet.Sweeper.UniformRandomSweeper
  name: UniformRandomSweeper
  href: api/MLNet.Sweeper.UniformRandomSweeper.html
  commentId: T:MLNet.Sweeper.UniformRandomSweeper
  fullName: MLNet.Sweeper.UniformRandomSweeper
  nameWithType: UniformRandomSweeper
- uid: MLNet.Sweeper.UniformRandomSweeper.#ctor(MLNet.Sweeper.UniformRandomSweeper.Option)
  name: UniformRandomSweeper(UniformRandomSweeper.Option)
  href: api/MLNet.Sweeper.UniformRandomSweeper.html#MLNet_Sweeper_UniformRandomSweeper__ctor_MLNet_Sweeper_UniformRandomSweeper_Option_
  commentId: M:MLNet.Sweeper.UniformRandomSweeper.#ctor(MLNet.Sweeper.UniformRandomSweeper.Option)
  fullName: MLNet.Sweeper.UniformRandomSweeper.UniformRandomSweeper(MLNet.Sweeper.UniformRandomSweeper.Option)
  nameWithType: UniformRandomSweeper.UniformRandomSweeper(UniformRandomSweeper.Option)
- uid: MLNet.Sweeper.UniformRandomSweeper.#ctor*
  name: UniformRandomSweeper
  href: api/MLNet.Sweeper.UniformRandomSweeper.html#MLNet_Sweeper_UniformRandomSweeper__ctor_
  commentId: Overload:MLNet.Sweeper.UniformRandomSweeper.#ctor
  isSpec: "True"
  fullName: MLNet.Sweeper.UniformRandomSweeper.UniformRandomSweeper
  nameWithType: UniformRandomSweeper.UniformRandomSweeper
- uid: MLNet.Sweeper.UniformRandomSweeper.CreateParamSet
  name: CreateParamSet()
  href: api/MLNet.Sweeper.UniformRandomSweeper.html#MLNet_Sweeper_UniformRandomSweeper_CreateParamSet
  commentId: M:MLNet.Sweeper.UniformRandomSweeper.CreateParamSet
  fullName: MLNet.Sweeper.UniformRandomSweeper.CreateParamSet()
  nameWithType: UniformRandomSweeper.CreateParamSet()
- uid: MLNet.Sweeper.UniformRandomSweeper.CreateParamSet*
  name: CreateParamSet
  href: api/MLNet.Sweeper.UniformRandomSweeper.html#MLNet_Sweeper_UniformRandomSweeper_CreateParamSet_
  commentId: Overload:MLNet.Sweeper.UniformRandomSweeper.CreateParamSet
  isSpec: "True"
  fullName: MLNet.Sweeper.UniformRandomSweeper.CreateParamSet
  nameWithType: UniformRandomSweeper.CreateParamSet
- uid: MLNet.Sweeper.UniformRandomSweeper.Option
  name: UniformRandomSweeper.Option
  href: api/MLNet.Sweeper.UniformRandomSweeper.Option.html
  commentId: T:MLNet.Sweeper.UniformRandomSweeper.Option
  fullName: MLNet.Sweeper.UniformRandomSweeper.Option
  nameWithType: UniformRandomSweeper.Option
- uid: MLNet.Sweeper.Utils
  name: Utils
  href: api/MLNet.Sweeper.Utils.html
  commentId: T:MLNet.Sweeper.Utils
  fullName: MLNet.Sweeper.Utils
  nameWithType: Utils
- uid: MLNet.Sweeper.Utils.AXPlusB(System.Double,System.Double,System.Double,System.Boolean)
  name: AXPlusB(Double, Double, Double, Boolean)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_AXPlusB_System_Double_System_Double_System_Double_System_Boolean_
  commentId: M:MLNet.Sweeper.Utils.AXPlusB(System.Double,System.Double,System.Double,System.Boolean)
  fullName: MLNet.Sweeper.Utils.AXPlusB(System.Double, System.Double, System.Double, System.Boolean)
  nameWithType: Utils.AXPlusB(Double, Double, Double, Boolean)
- uid: MLNet.Sweeper.Utils.AXPlusB*
  name: AXPlusB
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_AXPlusB_
  commentId: Overload:MLNet.Sweeper.Utils.AXPlusB
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.AXPlusB
  nameWithType: Utils.AXPlusB
- uid: MLNet.Sweeper.Utils.ERF(Numpy.NDarray)
  name: ERF(NDarray)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_ERF_Numpy_NDarray_
  commentId: M:MLNet.Sweeper.Utils.ERF(Numpy.NDarray)
  fullName: MLNet.Sweeper.Utils.ERF(Numpy.NDarray)
  nameWithType: Utils.ERF(NDarray)
- uid: MLNet.Sweeper.Utils.ERF(System.Double)
  name: ERF(Double)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_ERF_System_Double_
  commentId: M:MLNet.Sweeper.Utils.ERF(System.Double)
  fullName: MLNet.Sweeper.Utils.ERF(System.Double)
  nameWithType: Utils.ERF(Double)
- uid: MLNet.Sweeper.Utils.ERF*
  name: ERF
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_ERF_
  commentId: Overload:MLNet.Sweeper.Utils.ERF
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.ERF
  nameWithType: Utils.ERF
- uid: MLNet.Sweeper.Utils.GetIdentityPermutation(System.Int32)
  name: GetIdentityPermutation(Int32)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_GetIdentityPermutation_System_Int32_
  commentId: M:MLNet.Sweeper.Utils.GetIdentityPermutation(System.Int32)
  fullName: MLNet.Sweeper.Utils.GetIdentityPermutation(System.Int32)
  nameWithType: Utils.GetIdentityPermutation(Int32)
- uid: MLNet.Sweeper.Utils.GetIdentityPermutation*
  name: GetIdentityPermutation
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_GetIdentityPermutation_
  commentId: Overload:MLNet.Sweeper.Utils.GetIdentityPermutation
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.GetIdentityPermutation
  nameWithType: Utils.GetIdentityPermutation
- uid: MLNet.Sweeper.Utils.GetRandomPermutation(System.Random,System.Int32)
  name: GetRandomPermutation(Random, Int32)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_GetRandomPermutation_System_Random_System_Int32_
  commentId: M:MLNet.Sweeper.Utils.GetRandomPermutation(System.Random,System.Int32)
  fullName: MLNet.Sweeper.Utils.GetRandomPermutation(System.Random, System.Int32)
  nameWithType: Utils.GetRandomPermutation(Random, Int32)
- uid: MLNet.Sweeper.Utils.GetRandomPermutation*
  name: GetRandomPermutation
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_GetRandomPermutation_
  commentId: Overload:MLNet.Sweeper.Utils.GetRandomPermutation
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.GetRandomPermutation
  nameWithType: Utils.GetRandomPermutation
- uid: MLNet.Sweeper.Utils.MultiVariateNormal(Numpy.NDarray,Numpy.NDarray)
  name: MultiVariateNormal(NDarray, NDarray)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_MultiVariateNormal_Numpy_NDarray_Numpy_NDarray_
  commentId: M:MLNet.Sweeper.Utils.MultiVariateNormal(Numpy.NDarray,Numpy.NDarray)
  fullName: MLNet.Sweeper.Utils.MultiVariateNormal(Numpy.NDarray, Numpy.NDarray)
  nameWithType: Utils.MultiVariateNormal(NDarray, NDarray)
- uid: MLNet.Sweeper.Utils.MultiVariateNormal*
  name: MultiVariateNormal
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_MultiVariateNormal_
  commentId: Overload:MLNet.Sweeper.Utils.MultiVariateNormal
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.MultiVariateNormal
  nameWithType: Utils.MultiVariateNormal
- uid: MLNet.Sweeper.Utils.Normal
  name: Normal()
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_Normal
  commentId: M:MLNet.Sweeper.Utils.Normal
  fullName: MLNet.Sweeper.Utils.Normal()
  nameWithType: Utils.Normal()
- uid: MLNet.Sweeper.Utils.Normal*
  name: Normal
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_Normal_
  commentId: Overload:MLNet.Sweeper.Utils.Normal
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.Normal
  nameWithType: Utils.Normal
- uid: MLNet.Sweeper.Utils.NormCDF(Numpy.NDarray)
  name: NormCDF(NDarray)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_NormCDF_Numpy_NDarray_
  commentId: M:MLNet.Sweeper.Utils.NormCDF(Numpy.NDarray)
  fullName: MLNet.Sweeper.Utils.NormCDF(Numpy.NDarray)
  nameWithType: Utils.NormCDF(NDarray)
- uid: MLNet.Sweeper.Utils.NormCDF(System.Double)
  name: NormCDF(Double)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_NormCDF_System_Double_
  commentId: M:MLNet.Sweeper.Utils.NormCDF(System.Double)
  fullName: MLNet.Sweeper.Utils.NormCDF(System.Double)
  nameWithType: Utils.NormCDF(Double)
- uid: MLNet.Sweeper.Utils.NormCDF*
  name: NormCDF
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_NormCDF_
  commentId: Overload:MLNet.Sweeper.Utils.NormCDF
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.NormCDF
  nameWithType: Utils.NormCDF
- uid: MLNet.Sweeper.Utils.NormPDF(Numpy.NDarray)
  name: NormPDF(NDarray)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_NormPDF_Numpy_NDarray_
  commentId: M:MLNet.Sweeper.Utils.NormPDF(Numpy.NDarray)
  fullName: MLNet.Sweeper.Utils.NormPDF(Numpy.NDarray)
  nameWithType: Utils.NormPDF(NDarray)
- uid: MLNet.Sweeper.Utils.NormPDF*
  name: NormPDF
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_NormPDF_
  commentId: Overload:MLNet.Sweeper.Utils.NormPDF
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.NormPDF
  nameWithType: Utils.NormPDF
- uid: MLNet.Sweeper.Utils.Shuffle*
  name: Shuffle
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_Shuffle_
  commentId: Overload:MLNet.Sweeper.Utils.Shuffle
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.Shuffle
  nameWithType: Utils.Shuffle
- uid: MLNet.Sweeper.Utils.Shuffle``1(System.Random,System.Span{``0})
  name: Shuffle<T>(Random, Span<T>)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_Shuffle__1_System_Random_System_Span___0__
  commentId: M:MLNet.Sweeper.Utils.Shuffle``1(System.Random,System.Span{``0})
  name.vb: Shuffle(Of T)(Random, Span(Of T))
  fullName: MLNet.Sweeper.Utils.Shuffle<T>(System.Random, System.Span<T>)
  fullName.vb: MLNet.Sweeper.Utils.Shuffle(Of T)(System.Random, System.Span(Of T))
  nameWithType: Utils.Shuffle<T>(Random, Span<T>)
  nameWithType.vb: Utils.Shuffle(Of T)(Random, Span(Of T))
- uid: MLNet.Sweeper.Utils.Swap*
  name: Swap
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_Swap_
  commentId: Overload:MLNet.Sweeper.Utils.Swap
  isSpec: "True"
  fullName: MLNet.Sweeper.Utils.Swap
  nameWithType: Utils.Swap
- uid: MLNet.Sweeper.Utils.Swap``1(``0@,``0@)
  name: Swap<T>(ref T, ref T)
  href: api/MLNet.Sweeper.Utils.html#MLNet_Sweeper_Utils_Swap__1___0____0__
  commentId: M:MLNet.Sweeper.Utils.Swap``1(``0@,``0@)
  name.vb: Swap(Of T)(ByRef T, ByRef T)
  fullName: MLNet.Sweeper.Utils.Swap<T>(ref T, ref T)
  fullName.vb: MLNet.Sweeper.Utils.Swap(Of T)(ByRef T, ByRef T)
  nameWithType: Utils.Swap<T>(ref T, ref T)
  nameWithType.vb: Utils.Swap(Of T)(ByRef T, ByRef T)
- uid: MLNet.Sweeper.ValueGeneratorOptionBase
  name: ValueGeneratorOptionBase
  href: api/MLNet.Sweeper.ValueGeneratorOptionBase.html
  commentId: T:MLNet.Sweeper.ValueGeneratorOptionBase
  fullName: MLNet.Sweeper.ValueGeneratorOptionBase
  nameWithType: ValueGeneratorOptionBase
- uid: MLNet.Sweeper.ValueGeneratorOptionBase.Name
  name: Name
  href: api/MLNet.Sweeper.ValueGeneratorOptionBase.html#MLNet_Sweeper_ValueGeneratorOptionBase_Name
  commentId: F:MLNet.Sweeper.ValueGeneratorOptionBase.Name
  fullName: MLNet.Sweeper.ValueGeneratorOptionBase.Name
  nameWithType: ValueGeneratorOptionBase.Name
