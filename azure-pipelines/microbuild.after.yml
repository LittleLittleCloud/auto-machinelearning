steps:
- task: MicroBuildCleanup@1
  condition: succeededOrFailed()
  displayName: MicroBuild Cleanup

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: Component Detection
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0
  inputs:
    dropServiceURI: https://devdiv.artifacts.visualstudio.com
    buildNumber: $(ProfilingInputsDropName)
    sourcePath: $(Build.ArtifactStagingDirectory)\OptProf\ProfilingInputs
    toLowerCase: false
    usePat: false
  displayName: Publish to Artifact Services - ProfilingInputs
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  continueOnError: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)/InsertionOutputs
    ArtifactName: InsertionOutputs
    ArtifactType: Container
  displayName: Publish InsertionOutputs as Azure DevOps artifacts
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- task: Ref12.ref12-analyze-task.ref12-analyze-task.Ref12Analyze@0
  displayName: Ref12 (Codex) Analyze
  inputs:
    codexoutputroot: $(Build.ArtifactStagingDirectory)\Codex
    workflowArguments: |
      /sourcesDirectory:$(Build.SourcesDirectory)
      /codexRepoUrl:$(Build.Repository.Uri)
      /repoName:$(Build.Repository.Name)
      /additionalCodexArguments:-bld
      /additionalCodexArguments:$(Build.ArtifactStagingDirectory)/build_logs
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  continueOnError: true
