trigger:
  branches:
    exclude: 
    - u/*
pr:
  branches:
    include:
    - master
    - feature/*

jobs:
 
- job: Windows
  pool:
    vmImage: windows-latest
  strategy:
    maxParallel: 4
    matrix:
      # only run debug in public builds
      ${{ if ne(variables['SigningType'], 'real') }}:
        Debug:
          _configuration: Debug
      Release:
        _configuration: Release
  steps:
    - script: init.cmd
      displayName: initialize
      condition: succeeded()

    - script: Build.cmd -Configuration $(_configuration) -Pack -BuildNumber $(BUILD.BUILDNUMBER) -BinaryLog
      displayName: Build and Pack
      condition: succeeded()
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: machinelearning-auto-pipeline.sln

    - script: Build.cmd -BuildDoc
      displayName: Build Doc site
      continueOnError: true
      condition: and(succeeded(), eq(variables['_configuration'], 'Release'))
    
    # Should always run
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: '$(_configuration) log folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()

    # - task: PublishTestResults@2
    #   inputs:
    #     testResultsFormat: 'VSTest'
    #     testRunner: 'VSTest'
    #     testResultsFiles: '**/*.trx' 
    #     searchFolder: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)'
    #     configuration: '$(_configuration)'
    #     publishRunAttachments: true
    #   continueOnError: true
    #   displayName: Publish test results
    #   condition: always()

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\Packages\$(_configuration)'
        ArtifactName: '$(_configuration) packages folder'
        publishLocation: Container
      displayName: Publish packages folder
      continueOnError: true
      condition: eq(variables['_configuration'], 'Release')

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\docs'
        ArtifactName: 'doc site'
        publishLocation: Container
      displayName: Publish doc folder
      continueOnError: true
      condition: and(succeeded(), eq(variables['_configuration'], 'Release'))

